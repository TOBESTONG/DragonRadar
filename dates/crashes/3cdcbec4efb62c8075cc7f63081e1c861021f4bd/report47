syz.1.5 (2012) used greatest stack depth: 23688 bytes left
netlink: 184 bytes leftover after parsing attributes in process `syz.1.9'.
EXT4-fs (loop1): couldn't mount as ext3 due to feature incompatibilities
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.1.10/2098 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800b0aa2a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800b0aa2a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 118
hardirqs last  enabled at (118): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (118): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (117): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (117): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (0): [<ffffffff8115f59c>] copy_process+0x185c/0x69f0 kernel/fork.c:2044
softirqs last disabled at (19): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz.1.10/2098:
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: rcuwait_wake_up+0x0/0x270
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 2098 Comm: syz.1.10 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:native_irq_disable arch/x86/include/asm/irqflags.h:49 [inline]
RIP: 0010:arch_local_irq_disable arch/x86/include/asm/irqflags.h:89 [inline]
RIP: 0010:arch_local_irq_save arch/x86/include/asm/irqflags.h:121 [inline]
RIP: 0010:lock_release+0x144/0x6f0 kernel/locking/lockdep.c:5453
Code: 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 3d 05 00 00 45 8b 8e 4c 09 00 00 45 85 c9 0f 85 8c 02 00 00 9c 8f 04 24 <fa> 48 c7 c7 80 df 46 84 e8 af 60 c0 02 48 89 da 83 e3 07 48 b8 00
RSP: 0018:ffff888018bbf9e8 EFLAGS: 00000246
RAX: 0000000000000007 RBX: ffffffff85d67bbc RCX: 1ffffffff0bacf77
RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff88800ff8bd4c
RBP: 1ffff11003177f3f R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000000001 R12: ffffffff850e7f00
R13: 1ffffffff0a29755 R14: ffff88800ff8b400 R15: ffff888011303a80
 rcu_lock_release include/linux/rcupdate.h:253 [inline]
 rcu_read_unlock include/linux/rcupdate.h:695 [inline]
 rcuwait_wake_up+0x18c/0x270 kernel/exit.c:254
 percpu_up_read include/linux/percpu-rwsem.h:119 [inline]
 cgroup_threadgroup_change_end include/linux/cgroup-defs.h:744 [inline]
 exit_signals+0x6ce/0x9e0 kernel/signal.c:2847
 do_exit+0x237/0x28e0 kernel/exit.c:765
 do_group_exit+0x125/0x310 kernel/exit.c:906
 get_signal+0x462/0x2480 kernel/signal.c:2758
 arch_do_signal+0x88/0x1a90 arch/x86/kernel/signal.c:811
 exit_to_user_mode_loop kernel/entry/common.c:161 [inline]
 exit_to_user_mode_prepare+0xf7/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 ret_from_fork+0x15/0x30 arch/x86/entry/entry_64.S:289
RIP: 0033:0x7fed2c1ebf29
Code: 64 07 00 48 8d 3d 9c 64 07 00 e8 b2 28 f6 ff 66 90 b8 ea ff ff ff 48 85 ff 74 2c 48 85 d2 74 27 49 89 c8 b8 b3 01 00 00 0f 05 <48> 85 c0 7c 18 74 01 c3 31 ed 48 83 e4 f0 4c 89 c7 ff d2 48 89 c7
RSP: 002b:00007fed2ae101c0 EFLAGS: 00000202 ORIG_RAX: 00000000000001b3
RAX: 0000000000000000 RBX: 00007fed2c16e870 RCX: 00007fed2c1ebf29
RDX: 00007fed2c16e870 RSI: 0000000000000058 RDI: 00007ffc4e798780
RBP: 00007fed2ae106c0 R08: 00007fed2ae106c0 R09: 00007ffc4e798867
R10: 0000000000000008 R11: 0000000000000202 R12: ffffffffffffffa8
R13: 0000000000000006 R14: 00007ffc4e798780 R15: 00007ffc4e798868
----------------
Code disassembly (best guess):
   0:	02 48 89             	add    -0x77(%rax),%cl
   3:	f8                   	clc
   4:	83 e0 07             	and    $0x7,%eax
   7:	83 c0 03             	add    $0x3,%eax
   a:	38 d0                	cmp    %dl,%al
   c:	7c 08                	jl     0x16
   e:	84 d2                	test   %dl,%dl
  10:	0f 85 3d 05 00 00    	jne    0x553
  16:	45 8b 8e 4c 09 00 00 	mov    0x94c(%r14),%r9d
  1d:	45 85 c9             	test   %r9d,%r9d
  20:	0f 85 8c 02 00 00    	jne    0x2b2
  26:	9c                   	pushf
  27:	8f 04 24             	pop    (%rsp)
* 2a:	fa                   	cli <-- trapping instruction
  2b:	48 c7 c7 80 df 46 84 	mov    $0xffffffff8446df80,%rdi
  32:	e8 af 60 c0 02       	call   0x2c060e6
  37:	48 89 da             	mov    %rbx,%rdx
  3a:	83 e3 07             	and    $0x7,%ebx
  3d:	48                   	rex.W
  3e:	b8                   	.byte 0xb8
