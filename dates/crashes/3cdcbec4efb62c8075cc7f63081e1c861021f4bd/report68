EXT4-fs error (device loop1): ext4_xattr_block_get:536: inode #12: comm syz.1.140: corrupted xattr block 129
SELinux: inode_doinit_use_xattr:  getxattr returned 117 for dev=loop1 ino=12
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.1.140/5363 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880082a16a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880082a16a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
EXT4-fs error (device loop1): ext4_xattr_block_get:536: inode #12: comm syz.1.140: corrupted xattr block 129
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 15294
hardirqs last  enabled at (15294): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (15294): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (15293): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (15293): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (15078): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (15207): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

6 locks held by syz.1.140/5363:
 #0: ffff88801865a0f0 (&f->f_pos_lock){+.+.}-{3:3}, at: __fdget_pos+0xe9/0x100 fs/file.c:932
 #1: ffff88800b7b3068 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_read_trylock include/linux/mmap_lock.h:56 [inline]
 #1: ffff88800b7b3068 (&mm->mmap_lock#2){++++}-{3:3}, at: do_user_addr_fault+0x339/0xc40 arch/x86/mm/fault.c:1313
 #2: ffff888019153018 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
 #2: ffff888019153018 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: do_anonymous_page mm/memory.c:3542 [inline]
 #2: ffff888019153018 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: handle_pte_fault mm/memory.c:4372 [inline]
 #2: ffff888019153018 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: __handle_mm_fault mm/memory.c:4509 [inline]
 #2: ffff888019153018 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: handle_mm_fault+0x191e/0x37e0 mm/memory.c:4607
 #3: ffff88806cf30100 (lock#5){+.+.}-{2:2}, at: lru_cache_add+0x24c/0xa40 mm/swap.c:470
 #4: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #5: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 5363 Comm: syz.1.140 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:161 [inline]
RIP: 0010:_raw_spin_unlock_irqrestore+0x25/0x50 kernel/locking/spinlock.c:191
Code: fd 5d c3 66 90 55 48 89 fd 48 83 c7 18 53 48 89 f3 48 8b 74 24 10 e8 6a 1f 3e fd 48 89 ef e8 42 e2 3e fd f6 c7 02 75 1a 53 9d <bf> 01 00 00 00 e8 41 08 34 fd 65 8b 05 ba 3d 15 7c 85 c0 74 0a 5b
RSP: 0018:ffff888010e379e8 EFLAGS: 00000246
RAX: 0000000000003b65 RBX: 0000000000000246 RCX: ffffffff812a3195
RDX: 0000000000000000 RSI: 0000000000000003 RDI: 0000000000000000
RBP: ffff8880801df680 R08: 0000000000000001 R09: ffffffff86e5f6e7
R10: 0000000000000001 R11: 0000000000000001 R12: ffff8880801dc000
R13: ffff88806cf30130 R14: ffff8880801dc000 R15: dffffc0000000000
 spin_unlock_irqrestore include/linux/spinlock.h:409 [inline]
 pagevec_lru_move_fn+0x18c/0x250 mm/swap.c:230
 __pagevec_lru_add mm/swap.c:1070 [inline]
 lru_cache_add+0x428/0xa40 mm/swap.c:473
 do_anonymous_page mm/memory.c:3562 [inline]
 handle_pte_fault mm/memory.c:4372 [inline]
 __handle_mm_fault mm/memory.c:4509 [inline]
 handle_mm_fault+0x1a3c/0x37e0 mm/memory.c:4607
 do_user_addr_fault+0x645/0xc40 arch/x86/mm/fault.c:1372
 handle_page_fault arch/x86/mm/fault.c:1429 [inline]
 exc_page_fault+0xa2/0x1a0 arch/x86/mm/fault.c:1485
 asm_exc_page_fault+0x1e/0x30 arch/x86/include/asm/idtentry.h:583
RIP: 0010:copy_user_generic_string+0x2c/0x40 arch/x86/lib/copy_user_64.S:169
Code: cb 83 fa 08 72 27 89 f9 83 e1 07 74 15 83 e9 08 f7 d9 29 ca 8a 06 88 07 48 ff c6 48 ff c7 ff c9 75 f2 89 d1 c1 e9 03 83 e2 07 <f3> 48 a5 89 d1 f3 a4 31 c0 0f 01 ca c3 0f 1f 80 00 00 00 00 0f 01
RSP: 0018:ffff888010e37d38 EFLAGS: 00050246
RAX: 0000000000000001 RBX: 0000000000001000 RCX: 0000000000000048
RDX: 0000000000000000 RSI: ffff888008a14dc0 RDI: 00000000201c9000
RBP: 00000000201c9240 R08: 0000000000000000 R09: ffff888008a14fff
R10: ffffed10011429ff R11: 0000000000000001 R12: 00000000201c8240
R13: ffff888008a14000 R14: 00007ffffffff000 R15: 0000000000000000
 copy_user_generic arch/x86/include/asm/uaccess_64.h:37 [inline]
 raw_copy_to_user arch/x86/include/asm/uaccess_64.h:58 [inline]
 _copy_to_user lib/usercopy.c:33 [inline]
 _copy_to_user+0x136/0x170 lib/usercopy.c:26
 copy_to_user include/linux/uaccess.h:200 [inline]
 pagemap_read+0x32f/0x590 fs/proc/task_mmu.c:1637
 vfs_read+0x228/0x580 fs/read_write.c:494
 ksys_read+0x12d/0x250 fs/read_write.c:634
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fe6c22cdef9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fe6c0f47038 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
RAX: ffffffffffffffda RBX: 00007fe6c2485f80 RCX: 00007fe6c22cdef9
RDX: 00000000fffffea6 RSI: 0000000020000240 RDI: 0000000000000007
RBP: 00007fe6c2340b76 R08: 0000000000000000 R09: 0000000000000000
SELinux: inode_doinit_use_xattr:  getxattr returned 117 for dev=loop1 ino=12
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007fe6c2485f80 R15: 00007ffdc256c5f8
SELinux: inode_doinit_use_xattr:  getxattr returned 117 for dev=loop1 ino=12
SELinux: inode_doinit_use_xattr:  getxattr returned 117 for dev=loop1 ino=12
SELinux: inode_doinit_use_xattr:  getxattr returned 117 for dev=loop1 ino=12
SELinux: inode_doinit_use_xattr:  getxattr returned 117 for dev=loop1 ino=12
----------------
Code disassembly (best guess):
   0:	fd                   	std
   1:	5d                   	pop    %rbp
   2:	c3                   	ret
   3:	66 90                	xchg   %ax,%ax
   5:	55                   	push   %rbp
   6:	48 89 fd             	mov    %rdi,%rbp
   9:	48 83 c7 18          	add    $0x18,%rdi
   d:	53                   	push   %rbx
   e:	48 89 f3             	mov    %rsi,%rbx
  11:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  16:	e8 6a 1f 3e fd       	call   0xfd3e1f85
  1b:	48 89 ef             	mov    %rbp,%rdi
  1e:	e8 42 e2 3e fd       	call   0xfd3ee265
  23:	f6 c7 02             	test   $0x2,%bh
  26:	75 1a                	jne    0x42
  28:	53                   	push   %rbx
  29:	9d                   	popf
* 2a:	bf 01 00 00 00       	mov    $0x1,%edi <-- trapping instruction
  2f:	e8 41 08 34 fd       	call   0xfd340875
  34:	65 8b 05 ba 3d 15 7c 	mov    %gs:0x7c153dba(%rip),%eax        # 0x7c153df5
  3b:	85 c0                	test   %eax,%eax
  3d:	74 0a                	je     0x49
  3f:	5b                   	pop    %rbx
