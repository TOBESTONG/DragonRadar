EXT4-fs (loop3): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /15/file0 supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800ac504a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800ac504a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 3769074
hardirqs last  enabled at (3769074): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (3769074): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (3769073): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (3769073): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (3768814): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (3769061): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/116:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:jhash2 include/linux/jhash.h:125 [inline]
RIP: 0010:hash_stack lib/stackdepot.c:157 [inline]
RIP: 0010:stack_depot_save+0xbd/0x530 lib/stackdepot.c:249
Code: 41 89 d8 29 df 01 c3 41 c1 c0 10 44 31 c7 41 89 f8 29 f8 01 df 41 c1 c8 0d 44 31 c0 41 89 c0 29 c3 01 f8 41 c1 c0 04 44 31 c3 <83> fe 03 77 95 83 fe 02 0f 84 00 02 00 00 83 fe 03 0f 84 f4 01 00
RSP: 0018:ffff88800ac3fa38 EFLAGS: 00000206
RAX: 000000008752e947 RBX: 000000003230b6ee RCX: 0000000000000800
RDX: ffff88800ac3fae4 RSI: 0000000000000007 RDI: 000000007b0fdad8
RBP: ffffffff8172f7f7 R08: 00000000c430e6f0 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000000001 R12: ffff88800ac3faa8
R13: 000000000000000b R14: 000000000000000b R15: 0000000000000246
 kasan_save_stack+0x32/0x40 mm/kasan/common.c:50
 kasan_set_track+0x1c/0x30 mm/kasan/common.c:56
 kasan_set_free_info+0x1b/0x30 mm/kasan/generic.c:355
 __kasan_slab_free+0x110/0x150 mm/kasan/common.c:422
 slab_free_hook mm/slub.c:1544 [inline]
 slab_free_freelist_hook+0x53/0x130 mm/slub.c:1577
 slab_free mm/slub.c:3142 [inline]
 kmem_cache_free+0x97/0x340 mm/slub.c:3158
 putname+0xe1/0x130 fs/namei.c:259
 do_sys_openat2+0x153/0x420 fs/open.c:1177
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f91b4a84342
Code: c0 f6 c2 40 75 52 89 d0 45 31 d2 25 00 00 41 00 3d 00 00 41 00 74 41 64 8b 04 25 18 00 00 00 85 c0 75 65 b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 a2 00 00 00 48 8b 4c 24 38 64 48 2b 0c 25
RSP: 002b:00007ffc0a6ffc40 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007f91b4a84342
RDX: 00000000002a0000 RSI: 0000564e67980fd1 RDI: 0000000000000011
RBP: 0000564e67980fd0 R08: 0000564e65c86950 R09: 006c617574726976
R10: 0000000000000000 R11: 0000000000000246 R12: 0000564e6796e35e
R13: 0000000000000011 R14: 0000000000000008 R15: 0000564e67980fd1
----------------
Code disassembly (best guess):
   0:	41 89 d8             	mov    %ebx,%r8d
   3:	29 df                	sub    %ebx,%edi
   5:	01 c3                	add    %eax,%ebx
   7:	41 c1 c0 10          	rol    $0x10,%r8d
   b:	44 31 c7             	xor    %r8d,%edi
   e:	41 89 f8             	mov    %edi,%r8d
  11:	29 f8                	sub    %edi,%eax
  13:	01 df                	add    %ebx,%edi
  15:	41 c1 c8 0d          	ror    $0xd,%r8d
  19:	44 31 c0             	xor    %r8d,%eax
  1c:	41 89 c0             	mov    %eax,%r8d
  1f:	29 c3                	sub    %eax,%ebx
  21:	01 f8                	add    %edi,%eax
  23:	41 c1 c0 04          	rol    $0x4,%r8d
  27:	44 31 c3             	xor    %r8d,%ebx
* 2a:	83 fe 03             	cmp    $0x3,%esi <-- trapping instruction
  2d:	77 95                	ja     0xffffffc4
  2f:	83 fe 02             	cmp    $0x2,%esi
  32:	0f 84 00 02 00 00    	je     0x238
  38:	83 fe 03             	cmp    $0x3,%esi
  3b:	0f                   	.byte 0xf
  3c:	84 f4                	test   %dh,%ah
  3e:	01 00                	add    %eax,(%rax)
