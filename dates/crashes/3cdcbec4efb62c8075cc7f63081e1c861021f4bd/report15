EXT4-fs (loop3): Quota format mount options ignored when QUOTA feature is enabled
EXT4-fs (loop3): Journaled quota options ignored when QUOTA feature is enabled
EXT4-fs (loop3): couldn't mount as ext2 due to feature incompatibilities
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/117 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888027d346a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888027d346a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 4164346
hardirqs last  enabled at (4164346): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (4164346): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (4164345): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (4164345): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (4163510): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (4164277): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

4 locks held by systemd-udevd/117:
 #0: ffff88801390e868 (&type->i_mutex_dir_key#4){++++}-{3:3}, at: inode_lock_shared include/linux/fs.h:784 [inline]
 #0: ffff88801390e868 (&type->i_mutex_dir_key#4){++++}-{3:3}, at: lookup_slow fs/namei.c:1560 [inline]
 #0: ffff88801390e868 (&type->i_mutex_dir_key#4){++++}-{3:3}, at: walk_component+0x40b/0x6a0 fs/namei.c:1861
 #1: ffffffff852321c0 (fs_reclaim){+.+.}-{0:0}, at: __need_fs_reclaim mm/page_alloc.c:4283 [inline]
 #1: ffffffff852321c0 (fs_reclaim){+.+.}-{0:0}, at: fs_reclaim_acquire+0xa1/0xf0 mm/page_alloc.c:4301
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 117 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:rcu_lockdep_current_cpu_online kernel/rcu/tree.c:1152 [inline]
RIP: 0010:rcu_lockdep_current_cpu_online+0xca/0x160 kernel/rcu/tree.c:1141
Code: c1 ea 03 80 3c 02 00 0f 85 93 00 00 00 48 8d 7b 20 48 8b 6b 18 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 <75> 7e 48 8d 7d 70 48 8b 5b 20 48 b8 00 00 00 00 00 fc ff df 48 89
RSP: 0018:ffff888008a27750 EFLAGS: 00000246
RAX: dffffc0000000000 RBX: ffff88806cf34040 RCX: ffffffff812ad128
RDX: 1ffff1100d9e680c RSI: ffffffff84caf728 RDI: ffff88806cf34060
RBP: ffffffff850fc480 R08: 0000000000000000 R09: ffffffff85d66c0f
R10: fffffbfff0bacd81 R11: 0000000000000001 R12: 0000000000000001
R13: ffffffff817d22ca R14: ffff888013b53318 R15: 0000000000000cc0
 rcu_read_lock_held_common kernel/rcu/update.c:110 [inline]
 rcu_read_lock_held_common kernel/rcu/update.c:100 [inline]
 rcu_read_lock_sched_held+0x25/0x70 kernel/rcu/update.c:121
 trace_lock_release include/trace/events/lock.h:58 [inline]
 lock_release+0x5a3/0x6f0 kernel/locking/lockdep.c:5448
 slab_pre_alloc_hook mm/slab.h:514 [inline]
 slab_alloc_node mm/slub.c:2816 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc+0x43/0x330 mm/slub.c:2904
 __d_alloc+0x2a/0x990 fs/dcache.c:1709
 d_alloc fs/dcache.c:1788 [inline]
 d_alloc_parallel+0x111/0x1c30 fs/dcache.c:2540
 __lookup_slow+0x193/0x490 fs/namei.c:1529
 lookup_slow fs/namei.c:1561 [inline]
 walk_component+0x41a/0x6a0 fs/namei.c:1861
 lookup_last fs/namei.c:2310 [inline]
 path_lookupat+0x146/0x6c0 fs/namei.c:2334
 filename_lookup+0x19f/0x560 fs/namei.c:2367
 user_path_at include/linux/namei.h:59 [inline]
 do_faccessat+0x11b/0x830 fs/open.c:423
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f3fa790b5d7
Code: 77 01 c3 48 8b 15 b9 28 0e 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 15 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 8b 15 89 28 0e 00 f7 d8 64 89 02 b8
RSP: 002b:00007ffcaa0e10c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000015
RAX: ffffffffffffffda RBX: 000055b96dba4460 RCX: 00007f3fa790b5d7
RDX: 000000000000002a RSI: 0000000000000000 RDI: 00007ffcaa0e10d0
RBP: 00007ffcaa0e1150 R08: 000055b96c0096e0 R09: 00007f3fa79eebe0
R10: 0000000000000000 R11: 0000000000000246 R12: 000055b96dbd5070
R13: 00007ffcaa0e10d0 R14: 000055b96db9b800 R15: 000055b96dbc5470
----------------
Code disassembly (best guess):
   0:	c1 ea 03             	shr    $0x3,%edx
   3:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   7:	0f 85 93 00 00 00    	jne    0xa0
   d:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
  11:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
  15:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  1c:	fc ff df
  1f:	48 89 fa             	mov    %rdi,%rdx
  22:	48 c1 ea 03          	shr    $0x3,%rdx
  26:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
* 2a:	75 7e                	jne    0xaa <-- trapping instruction
  2c:	48 8d 7d 70          	lea    0x70(%rbp),%rdi
  30:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
  34:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  3b:	fc ff df
  3e:	48                   	rex.W
  3f:	89                   	.byte 0x89
