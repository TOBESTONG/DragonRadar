EXT4-fs (loop1): mounted filesystem without journal. Opts: dioread_nolock,user_xattr,debug_want_extra_isize=0x000000000000005c,resuid=0x000000000000ee01,mblk_io_submit,errors=continue,usrjquota=,prjquota,nodiscard,,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800b961ca8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800b961ca8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 4099156
hardirqs last  enabled at (4099156): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (4099156): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (4099155): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (4099155): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (4098312): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (4099125): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/116:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__read_once_word_nocheck+0x3/0x10 include/asm-generic/rwonce.h:68
Code: e8 e2 a0 60 00 e9 e5 fd ff ff e8 d8 a0 60 00 e9 b2 fd ff ff e8 ce a0 60 00 e9 6a fd ff ff cc cc cc cc cc cc cc cc cc 48 8b 07 <c3> 66 66 2e 0f 1f 84 00 00 00 00 00 90 41 57 89 d0 41 56 41 55 41
RSP: 0018:ffff88800bf87790 EFLAGS: 00000297
RAX: ffffffff83eae433 RBX: ffff88800bf878f8 RCX: ffff88800bf878f8
RDX: dffffc0000000000 RSI: ffff88800bf87f40 RDI: ffff88800bf87f40
RBP: ffff88800bf87f40 R08: ffffffff861080a2 R09: ffffffff861080a6
R10: ffffed10017f0f21 R11: 0000000000000001 R12: ffff88800bf878b0
R13: ffff88800bf80000 R14: ffff88800bf87900 R15: ffff88800bf878b0
 deref_stack_reg+0xee/0x150 arch/x86/kernel/unwind_orc.c:355
 unwind_next_frame+0xa08/0x2640 arch/x86/kernel/unwind_orc.c:531
 arch_stack_walk+0x83/0xf0 arch/x86/kernel/stacktrace.c:25
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track+0x1c/0x30 mm/kasan/common.c:56
 kasan_set_free_info+0x1b/0x30 mm/kasan/generic.c:355
 __kasan_slab_free+0x110/0x150 mm/kasan/common.c:422
 slab_free_hook mm/slub.c:1544 [inline]
 slab_free_freelist_hook+0x53/0x130 mm/slub.c:1577
 slab_free mm/slub.c:3142 [inline]
 kmem_cache_free+0x97/0x340 mm/slub.c:3158
 putname+0xe1/0x130 fs/namei.c:259
 filename_lookup+0x3b1/0x560 fs/namei.c:2377
 user_path_at include/linux/namei.h:59 [inline]
 do_faccessat+0x11b/0x830 fs/open.c:423
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fb3b7e735d7
Code: 77 01 c3 48 8b 15 b9 28 0e 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 15 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 8b 15 89 28 0e 00 f7 d8 64 89 02 b8
RSP: 002b:00007ffc6c9beb98 EFLAGS: 00000246 ORIG_RAX: 0000000000000015
RAX: ffffffffffffffda RBX: 000055e9aeb74210 RCX: 00007fb3b7e735d7
RDX: 0000000000000006 RSI: 0000000000000000 RDI: 00007ffc6c9beba0
RBP: 00007ffc6c9bec20 R08: 000055e9ad8016e0 R09: 00007fb3b7f56be0
R10: 0000000000000000 R11: 0000000000000246 R12: 000055e9aeb70c80
R13: 00007ffc6c9beba0 R14: 000055e9aeb37870 R15: 000055e9aeb6c6c0
----------------
Code disassembly (best guess):
   0:	e8 e2 a0 60 00       	call   0x60a0e7
   5:	e9 e5 fd ff ff       	jmp    0xfffffdef
   a:	e8 d8 a0 60 00       	call   0x60a0e7
   f:	e9 b2 fd ff ff       	jmp    0xfffffdc6
  14:	e8 ce a0 60 00       	call   0x60a0e7
  19:	e9 6a fd ff ff       	jmp    0xfffffd88
  1e:	cc                   	int3
  1f:	cc                   	int3
  20:	cc                   	int3
  21:	cc                   	int3
  22:	cc                   	int3
  23:	cc                   	int3
  24:	cc                   	int3
  25:	cc                   	int3
  26:	cc                   	int3
  27:	48 8b 07             	mov    (%rdi),%rax
* 2a:	c3                   	ret <-- trapping instruction
  2b:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  32:	00 00 00 00
  36:	90                   	nop
  37:	41 57                	push   %r15
  39:	89 d0                	mov    %edx,%eax
  3b:	41 56                	push   %r14
  3d:	41 55                	push   %r13
  3f:	41                   	rex.B
