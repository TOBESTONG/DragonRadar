EXT4-fs (loop3): mounted filesystem without journal. Opts: prjquota,grpquota,debug_want_extra_isize=0x000000000000005c,noauto_da_alloc,mblk_io_submit,errors=continue,debug,,errors=continue
netlink: 1276 bytes leftover after parsing attributes in process `syz.3.281'.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/6226 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800cf53ea8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800cf53ea8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
PM: hibernation: Marking nosave pages: [mem 0x00000000-0x00000fff]
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
PM: hibernation: Marking nosave pages: [mem 0x0009f000-0x000fffff]
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 12132
hardirqs last  enabled at (12132): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (12132): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (12131): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (12131): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (8620): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (12099): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
PM: hibernation: Basic memory bitmaps created
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(
PM: hibernation: Basic memory bitmaps freed
&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz-executor/6226:
 #0: ffff888010649568 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_write_lock_killable include/linux/mmap_lock.h:26 [inline]
 #0: ffff888010649568 (&mm->mmap_lock#2){++++}-{3:3}, at: vm_mmap_pgoff+0x153/0x1f0 mm/util.c:505
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 6226 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:lock_is_held_type+0xc2/0x100 kernel/locking/lockdep.c:5481
Code: 03 44 39 f0 41 0f 94 c4 48 c7 c7 c0 df 46 84 e8 94 12 00 00 b8 ff ff ff ff 65 0f c1 05 77 df 16 7c 83 f8 01 75 23 ff 34 24 9d <48> 83 c4 08 44 89 e0 5b 5d 41 5c 41 5d 41 5e 41 5f c3 45 31 e4 eb
RSP: 0018:ffff888018cc7988 EFLAGS: 00000202
RAX: 0000000000000001 RBX: 0000000000000001 RCX: 1ffffffff0bacf77
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffffff850e7ea0 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000000
R13: ffff88800fb7d750 R14: 00000000ffffffff R15: ffff88800fb7d750
 lock_is_held include/linux/lockdep.h:271 [inline]
 ___might_sleep+0x3c6/0x4d0 kernel/sched/core.c:7270
 prepare_alloc_pages mm/page_alloc.c:4892 [inline]
 __alloc_pages_nodemask+0x434/0x6a0 mm/page_alloc.c:4936
 alloc_pages_current+0x191/0x2a0 mm/mempolicy.c:2271
 alloc_pages include/linux/gfp.h:547 [inline]
 __vmalloc_area_node mm/vmalloc.c:2492 [inline]
 __vmalloc_node_range+0x5cf/0x9b0 mm/vmalloc.c:2558
 vmalloc_user+0x9f/0xf0 mm/vmalloc.c:2670
 kcov_mmap+0x2b/0x150 kernel/kcov.c:465
 call_mmap include/linux/fs.h:1908 [inline]
 mmap_region+0xa0c/0x1450 mm/mmap.c:1807
 do_mmap+0x807/0x11e0 mm/mmap.c:1583
 vm_mmap_pgoff+0x194/0x1f0 mm/util.c:507
 ksys_mmap_pgoff+0x483/0x5f0 mm/mmap.c:1634
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f58caf21f33
Code: f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 41 89 ca 41 f7 c1 ff 0f 00 00 75 14 b8 09 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 25 c3 0f 1f 40 00 48 c7 c0 a8 ff ff ff 64 c7
RSP: 002b:00007ffc87ac91a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000009
RAX: ffffffffffffffda RBX: 00007f58cb0d9f40 RCX: 00007f58caf21f33
RDX: 0000000000000003 RSI: 0000000000800000 RDI: 00007f58c9b9d000
RBP: 00007f58cb0daa38 R08: 00000000000000d7 R09: 0000000000000000
R10: 0000000000000011 R11: 0000000000000246 R12: 000000000000000c
R13: 0000000000000003 R14: 0000000000000009 R15: 0000000000000000
----------------
Code disassembly (best guess):
   0:	03 44 39 f0          	add    -0x10(%rcx,%rdi,1),%eax
   4:	41 0f 94 c4          	sete   %r12b
   8:	48 c7 c7 c0 df 46 84 	mov    $0xffffffff8446dfc0,%rdi
   f:	e8 94 12 00 00       	call   0x12a8
  14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  19:	65 0f c1 05 77 df 16 	xadd   %eax,%gs:0x7c16df77(%rip)        # 0x7c16df98
  20:	7c
  21:	83 f8 01             	cmp    $0x1,%eax
  24:	75 23                	jne    0x49
  26:	ff 34 24             	push   (%rsp)
  29:	9d                   	popf
* 2a:	48 83 c4 08          	add    $0x8,%rsp <-- trapping instruction
  2e:	44 89 e0             	mov    %r12d,%eax
  31:	5b                   	pop    %rbx
  32:	5d                   	pop    %rbp
  33:	41 5c                	pop    %r12
  35:	41 5d                	pop    %r13
  37:	41 5e                	pop    %r14
  39:	41 5f                	pop    %r15
  3b:	c3                   	ret
  3c:	45 31 e4             	xor    %r12d,%r12d
  3f:	eb                   	.byte 0xeb
