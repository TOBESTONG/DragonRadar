Buffer I/O error on dev loop0p4, logical block 1, async page read
EXT4-fs (loop0): 1 truncate cleaned up
EXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue
tmpfs: Bad value for 'mpol'
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/5321 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800be782a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800be782a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 240
hardirqs last  enabled at (240): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (240): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (239): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (239): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (0): [<ffffffff8115f59c>] copy_process+0x185c/0x69f0 kernel/fork.c:2044
softirqs last disabled at (145): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by syz-executor/5321:
 #0: ffff888009394b68 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_read_trylock include/linux/mmap_lock.h:56 [inline]
 #0: ffff888009394b68 (&mm->mmap_lock#2){++++}-{3:3}, at: do_user_addr_fault+0x339/0xc40 arch/x86/mm/fault.c:1313
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: filemap_map_pages+0x17f/0xdf0 mm/filemap.c:2843
 #2: ffff88800fea8918 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
 #2: ffff88800fea8918 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: pte_alloc_one_map mm/memory.c:3688 [inline]
 #2: ffff88800fea8918 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: alloc_set_pte+0xa09/0xf80 mm/memory.c:3801
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 5321 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:perf_trace_lock_acquire+0x3b2/0x5a0 include/trace/events/lock.h:13
Code: c4 49 c7 04 24 00 00 00 00 41 c7 44 24 08 00 00 00 00 48 8b 45 d0 65 48 2b 04 25 28 00 00 00 0f 85 2b 01 00 00 48 8d 65 d8 5b <41> 5c 41 5d 41 5e 41 5f 5d c3 48 b8 00 00 00 00 00 fc ff df 48 89
RSP: 0000:ffff88801be37a30 EFLAGS: 00000246
RAX: 0000000000000000 RBX: 1ffff110037c6f50 RCX: 1ffffd1ffffa188f
RDX: 0000000000000006 RSI: 1ffffffff0995ee5 RDI: ffffffff84fd9f80
RBP: ffff88801be37a50 R08: 0000000000000001 R09: 0000000000000000
R10: fffffbfff0bacd81 R11: 0000000000000001 R12: ffffed10037c6f35
R13: ffffffff84fd9f00 R14: ffffffff850e7f00 R15: ffff88801be37a28
 trace_lock_acquire include/trace/events/lock.h:13 [inline]
 lock_acquire+0x1d4/0x9b0 kernel/locking/lockdep.c:5408
 rcu_lock_acquire include/linux/rcupdate.h:248 [inline]
 rcu_read_lock include/linux/rcupdate.h:641 [inline]
 lock_page_memcg+0x63/0x260 mm/memcontrol.c:2144
 page_add_file_rmap+0x2e/0x2a0 mm/rmap.c:1206
 alloc_set_pte+0x2c7/0xf80 mm/memory.c:3824
 filemap_map_pages+0xc51/0xdf0 mm/filemap.c:2887
 do_fault_around mm/memory.c:3967 [inline]
 do_read_fault mm/memory.c:4001 [inline]
 do_fault mm/memory.c:4134 [inline]
 handle_pte_fault mm/memory.c:4374 [inline]
 __handle_mm_fault mm/memory.c:4509 [inline]
 handle_mm_fault+0x24f6/0x37e0 mm/memory.c:4607
 do_user_addr_fault+0x645/0xc40 arch/x86/mm/fault.c:1372
 handle_page_fault arch/x86/mm/fault.c:1429 [inline]
 exc_page_fault+0xa2/0x1a0 arch/x86/mm/fault.c:1485
 asm_exc_page_fault+0x1e/0x30 arch/x86/include/asm/idtentry.h:583
RIP: 0033:0x7f502e65a160
Code: 68 09 00 00 00 e9 e0 fe ff ff ff 25 42 af 2c 00 68 00 00 00 00 e9 00 00 00 00 ff 25 3a af 2c 00 68 00 00 00 00 e9 00 00 00 00 <ff> 25 32 af 2c 00 68 08 00 00 00 e9 b0 fe ff ff ff 25 2a af 2c 00
RSP: 002b:00007ffce6e60b08 EFLAGS: 00010246
RAX: 00007ffce6e61210 RBX: 00007ffce6e61070 RCX: 0000000000000000
RDX: 00007ffce6e611f0 RSI: 0000000000000025 RDI: 00007f502e8120f9
RBP: 00000000fbad8001 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f502e8120f9
R13: 00007ffce6e611f0 R14: 0000000000000000 R15: 00007ffce6e61070
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   7:	00
   8:	41 c7 44 24 08 00 00 	movl   $0x0,0x8(%r12)
   f:	00 00
  11:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  15:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
  1c:	00 00
  1e:	0f 85 2b 01 00 00    	jne    0x14f
  24:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  28:	5b                   	pop    %rbx
* 29:	41 5c                	pop    %r12 <-- trapping instruction
  2b:	41 5d                	pop    %r13
  2d:	41 5e                	pop    %r14
  2f:	41 5f                	pop    %r15
  31:	5d                   	pop    %rbp
  32:	c3                   	ret
  33:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  3a:	fc ff df
  3d:	48                   	rex.W
  3e:	89                   	.byte 0x89
