ext4 filesystem being mounted at /40/file1 supports timestamps until 2038 (0x7fffffff)
EXT4-fs (loop1): 1 truncate cleaned up
EXT4-fs (loop1): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
modprobe/3633 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888010cc34a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888010cc34a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 1402
hardirqs last  enabled at (1402): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (1402): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (1401): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (1401): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (838): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (1367): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by modprobe/3633:
 #0: ffff88800be16668 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_read_trylock include/linux/mmap_lock.h:56 [inline]
 #0: ffff88800be16668 (&mm->mmap_lock#2){++++}-{3:3}, at: do_user_addr_fault+0x339/0xc40 arch/x86/mm/fault.c:1313
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 3633 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:compound_head include/linux/page-flags.h:185 [inline]
RIP: 0010:PageSwapBacked include/linux/page-flags.h:357 [inline]
RIP: 0010:PageSwapCache include/linux/page-flags.h:402 [inline]
RIP: 0010:mem_cgroup_charge+0x13f/0x830 mm/memcontrol.c:6813
Code: 00 00 48 89 df be 01 00 00 00 e8 ac c4 fe ff 48 89 ee 48 89 df e8 e1 e5 fe ff e8 7c ba d6 ff fb 48 b8 00 00 00 00 00 fc ff df <4c> 89 f2 48 c1 ea 03 80 3c 02 00 0f 85 ae 05 00 00 48 8b 45 08 be
RSP: 0000:ffff888010637d30 EFLAGS: 00000206
RAX: dffffc0000000000 RBX: ffff8880081a6000 RCX: ffffffff812a3195
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffea000078e2c0 R08: 0000000000000001 R09: ffffffff86e5f6cf
R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000000
R13: ffff88800be16540 R14: ffffea000078e2c8 R15: ffff8880081a6054
 do_cow_fault mm/memory.c:4029 [inline]
 do_fault mm/memory.c:4136 [inline]
 handle_pte_fault mm/memory.c:4374 [inline]
 __handle_mm_fault mm/memory.c:4509 [inline]
 handle_mm_fault+0xf7c/0x37e0 mm/memory.c:4607
 do_user_addr_fault+0x645/0xc40 arch/x86/mm/fault.c:1372
 handle_page_fault arch/x86/mm/fault.c:1429 [inline]
 exc_page_fault+0xa2/0x1a0 arch/x86/mm/fault.c:1485
 asm_exc_page_fault+0x1e/0x30 arch/x86/include/asm/idtentry.h:583
RIP: 0033:0x7f21477d6c24
Code: 8b 8d 70 ff ff ff 48 8b 30 8b 50 08 48 01 ce 48 83 fa 26 74 0a 48 83 fa 08 0f 85 62 10 00 00 48 8b 50 10 48 83 c0 18 48 01 ca <48> 89 16 48 39 c3 77 d4 4d 8b 93 d0 01 00 00 4d 85 d2 0f 85 a3 fa
RSP: 002b:00007ffeadc18150 EFLAGS: 00010206
RAX: 00007f21474f6218 RBX: 00007f21475195b8 RCX: 00007f21474a8000
RDX: 00007f2147703b48 RSI: 00007f2147776000 RDI: 00007f214752d268
RBP: 00007ffeadc18250 R08: 00007f214752d268 R09: 0000000000000001
R10: 0000000000049170 R11: 00007f21477c4510 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f21477f6180 R15: 0000000000000010
----------------
Code disassembly (best guess):
   0:	00 00                	add    %al,(%rax)
   2:	48 89 df             	mov    %rbx,%rdi
   5:	be 01 00 00 00       	mov    $0x1,%esi
   a:	e8 ac c4 fe ff       	call   0xfffec4bb
   f:	48 89 ee             	mov    %rbp,%rsi
  12:	48 89 df             	mov    %rbx,%rdi
  15:	e8 e1 e5 fe ff       	call   0xfffee5fb
  1a:	e8 7c ba d6 ff       	call   0xffd6ba9b
  1f:	fb                   	sti
  20:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  27:	fc ff df
* 2a:	4c 89 f2             	mov    %r14,%rdx <-- trapping instruction
  2d:	48 c1 ea 03          	shr    $0x3,%rdx
  31:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
  35:	0f 85 ae 05 00 00    	jne    0x5e9
  3b:	48 8b 45 08          	mov    0x8(%rbp),%rax
  3f:	be                   	.byte 0xbe
