EXT4-fs (loop1): encrypted files will use data=ordered instead of data journaling mode
EXT4-fs (loop1): bad geometry: block count 2048 exceeds size of device (256 blocks)
Unable to read rock-ridge attributes
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.0.79/2555 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800caf48a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800caf48a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 6482
hardirqs last  enabled at (6482): [<ffffffff84000c42>] asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
hardirqs last disabled at (6481): [<ffffffff83eb135c>] sysvec_apic_timer_interrupt+0xc/0xf0 arch/x86/kernel/apic/apic.c:1091
softirqs last  enabled at (6392): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (6447): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz.0.79/2555:
 #0: ffff88800bc30120 (sk_lock-AF_INET6){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1581 [inline]
 #0: ffff88800bc30120 (sk_lock-AF_INET6){+.+.}-{0:0}, at: tcp_sendmsg+0x1d/0x40 net/ipv4/tcp.c:1443
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 2555 Comm: syz.0.79 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:orc_find arch/x86/kernel/unwind_orc.c:163 [inline]
RIP: 0010:unwind_next_frame+0x240/0x2640 arch/x86/kernel/unwind_orc.c:443
Code: ff 39 f0 0f 83 c3 15 00 00 48 be 00 00 00 00 00 fc ff df 41 89 c0 4a 8d 3c 85 94 e0 44 86 49 89 f9 49 c1 e9 03 45 0f b6 0c 31 <48> 89 fe 83 e6 07 83 c6 03 44 38 ce 7c 30 45 84 c9 74 2b 4c 89 44
RSP: 0018:ffff8880110cf1b8 EFLAGS: 00000216
RAX: 0000000000027abd RBX: 1ffff11002219e41 RCX: ffffffff837abda4
RDX: 0000000000032042 RSI: dffffc0000000000 RDI: ffffffff864ecb88
RBP: 0000000000000001 R08: 0000000000027abd R09: 0000000000000000
R10: ffffed1002219e5f R11: 0000000000000001 R12: ffff8880110cf2e8
R13: ffff8880110cf2d5 R14: ffff8880110cf2f0 R15: ffff8880110cf2a0
 arch_stack_walk+0x83/0xf0 arch/x86/kernel/stacktrace.c:25
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 kmem_cache_alloc_node+0x155/0x340 mm/slub.c:2927
 __alloc_skb+0x6d/0x590 net/core/skbuff.c:198
 alloc_skb_fclone include/linux/skbuff.h:1144 [inline]
 sk_stream_alloc_skb+0x10b/0xbf0 net/ipv4/tcp.c:888
 tcp_connect+0xe47/0x4760 net/ipv4/tcp_output.c:3839
 tcp_v6_connect+0x13d2/0x19a0 net/ipv6/tcp_ipv6.c:334
 __inet_stream_connect+0x856/0xd90 net/ipv4/af_inet.c:661
 tcp_sendmsg_fastopen net/ipv4/tcp.c:1176 [inline]
 tcp_sendmsg_locked+0x20bf/0x2f30 net/ipv4/tcp.c:1218
 tcp_sendmsg+0x2b/0x40 net/ipv4/tcp.c:1444
 inet6_sendmsg+0xb5/0x140 net/ipv6/af_inet6.c:638
 sock_sendmsg_nosec net/socket.c:651 [inline]
 sock_sendmsg+0xee/0x190 net/socket.c:671
 __sys_sendto+0x21c/0x320 net/socket.c:1992
 __do_sys_sendto net/socket.c:2004 [inline]
 __se_sys_sendto net/socket.c:2000 [inline]
 __x64_sys_sendto+0xdd/0x1b0 net/socket.c:2000
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fc7327a8ef9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fc731422038 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
RAX: ffffffffffffffda RBX: 00007fc732960f80 RCX: 00007fc7327a8ef9
RDX: 000000000000001e RSI: 0000000000000000 RDI: 0000000000000009
RBP: 00007fc73281bb76 R08: 0000000020b63fe4 R09: 000000000000001c
R10: 000000002200c851 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007fc732960f80 R15: 00007ffea60bd458
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	39 f0                	cmp    %esi,%eax
   2:	0f 83 c3 15 00 00    	jae    0x15cb
   8:	48 be 00 00 00 00 00 	movabs $0xdffffc0000000000,%rsi
   f:	fc ff df
  12:	41 89 c0             	mov    %eax,%r8d
  15:	4a 8d 3c 85 94 e0 44 	lea    -0x79bb1f6c(,%r8,4),%rdi
  1c:	86
  1d:	49 89 f9             	mov    %rdi,%r9
  20:	49 c1 e9 03          	shr    $0x3,%r9
  24:	45 0f b6 0c 31       	movzbl (%r9,%rsi,1),%r9d
* 29:	48 89 fe             	mov    %rdi,%rsi <-- trapping instruction
  2c:	83 e6 07             	and    $0x7,%esi
  2f:	83 c6 03             	add    $0x3,%esi
  32:	44 38 ce             	cmp    %r9b,%sil
  35:	7c 30                	jl     0x67
  37:	45 84 c9             	test   %r9b,%r9b
  3a:	74 2b                	je     0x67
  3c:	4c                   	rex.WR
  3d:	89                   	.byte 0x89
  3e:	44                   	rex.R
