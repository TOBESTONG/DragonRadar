Contact linux-ext4@vger.kernel.org if you think we should keep it.
EXT4-fs (loop3): mounted filesystem without journal. Opts: noacl,block_validity,errors=continue,block_validity,debug_want_extra_isize=0x0000000000000006,init_itable=0x0000000000000004,usrquota,usrquota,,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/10431 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800d2c28a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800d2c28a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 87132
hardirqs last  enabled at (87132): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (87132): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (87131): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (87131): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (86626): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (86893): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz-executor/10431:
 #0: ffff8880199e80e0 (&type->s_umount_key#42){++++}-{3:3}, at: deactivate_super+0xa5/0xd0 fs/super.c:365
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 10431 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:161 [inline]
RIP: 0010:_raw_spin_unlock_irqrestore+0x25/0x50 kernel/locking/spinlock.c:191
Code: fd 5d c3 66 90 55 48 89 fd 48 83 c7 18 53 48 89 f3 48 8b 74 24 10 e8 6a 1f 3e fd 48 89 ef e8 42 e2 3e fd f6 c7 02 75 1a 53 9d <bf> 01 00 00 00 e8 41 08 34 fd 65 8b 05 ba 3d 15 7c 85 c0 74 0a 5b
RSP: 0018:ffff888019e77ce0 EFLAGS: 00000293
RAX: 000000000001536b RBX: 0000000000000293 RCX: ffffffff812a3195
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000000
RBP: ffffffff852043a0 R08: 0000000000000001 R09: ffffffff86e5f707
R10: 0000000000000001 R11: 0000000000000001 R12: 0000607f92e0d0f8
R13: 0000000000100000 R14: 0000000000000293 R15: ffff88800a982938
 spin_unlock_irqrestore include/linux/spinlock.h:409 [inline]
 free_percpu mm/percpu.c:2120 [inline]
 free_percpu+0x411/0xa60 mm/percpu.c:2080
 percpu_counter_destroy+0x11a/0x1c0 lib/percpu_counter.c:179
 ext4_es_unregister_shrinker+0x15/0x50 fs/ext4/extents_status.c:1677
 ext4_put_super+0xafe/0x11b0 fs/ext4/super.c:1202
 generic_shutdown_super+0x142/0x370 fs/super.c:464
 kill_block_super+0x9d/0xf0 fs/super.c:1446
 deactivate_locked_super+0x95/0x110 fs/super.c:335
 deactivate_super+0xad/0xd0 fs/super.c:366
 cleanup_mnt+0x3c8/0x580 fs/namespace.c:1118
 task_work_run+0xe2/0x1a0 kernel/task_work.c:151
 tracehook_notify_resume include/linux/tracehook.h:188 [inline]
 exit_to_user_mode_loop kernel/entry/common.c:164 [inline]
 exit_to_user_mode_prepare+0x155/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f6d594ee227
Code: a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 0f 1f 44 00 00 31 f6 e9 09 00 00 00 66 0f 1f 84 00 00 00 00 00 b8 a6 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 c7 c2 a8 ff ff ff f7 d8 64 89 02 b8
RSP: 002b:00007fff78caf1f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
RAX: 0000000000000000 RBX: 00007f6d5955fa14 RCX: 00007f6d594ee227
RDX: 0000000000000000 RSI: 0000000000000009 RDI: 00007fff78caf2b0
RBP: 00007fff78caf2b0 R08: 0000000000000000 R09: 0000000000000000
R10: 00000000ffffffff R11: 0000000000000246 R12: 00007fff78cb0330
R13: 00007f6d5955fa14 R14: 000000000001eb62 R15: 00007fff78cb0370
----------------
Code disassembly (best guess):
   0:	fd                   	std
   1:	5d                   	pop    %rbp
   2:	c3                   	ret
   3:	66 90                	xchg   %ax,%ax
   5:	55                   	push   %rbp
   6:	48 89 fd             	mov    %rdi,%rbp
   9:	48 83 c7 18          	add    $0x18,%rdi
   d:	53                   	push   %rbx
   e:	48 89 f3             	mov    %rsi,%rbx
  11:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  16:	e8 6a 1f 3e fd       	call   0xfd3e1f85
  1b:	48 89 ef             	mov    %rbp,%rdi
  1e:	e8 42 e2 3e fd       	call   0xfd3ee265
  23:	f6 c7 02             	test   $0x2,%bh
  26:	75 1a                	jne    0x42
  28:	53                   	push   %rbx
  29:	9d                   	popf
* 2a:	bf 01 00 00 00       	mov    $0x1,%edi <-- trapping instruction
  2f:	e8 41 08 34 fd       	call   0xfd340875
  34:	65 8b 05 ba 3d 15 7c 	mov    %gs:0x7c153dba(%rip),%eax        # 0x7c153df5
  3b:	85 c0                	test   %eax,%eax
  3d:	74 0a                	je     0x49
  3f:	5b                   	pop    %rbx
