EXT4-fs (loop2): mounted filesystem without journal. Opts: dioread_nolock,user_xattr,debug_want_extra_isize=0x000000000000005c,resuid=0x000000000000ee01,mblk_io_submit,errors=continue,usrjquota=,prjquota,nodiscard,,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/5637 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800aa43ea8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800aa43ea8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 476
hardirqs last  enabled at (476): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (476): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (475): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (475): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (0): [<ffffffff8115f59c>] copy_process+0x185c/0x69f0 kernel/fork.c:2044
softirqs last disabled at (411): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by syz-executor/5637:
 #0: ffff88800a4a8438 (sb_writers#8){.+.+}-{0:0}, at: filename_create+0x104/0x490 fs/namei.c:3462
 #1: ffff88801101ae30 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:809 [inline]
 #1: ffff88801101ae30 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: filename_create+0x15a/0x490 fs/namei.c:3467
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: security_compute_sid.part.0+0x0/0x17e0
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 5637 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:preempt_count arch/x86/include/asm/preempt.h:26 [inline]
RIP: 0010:check_kcov_mode kernel/kcov.c:163 [inline]
RIP: 0010:__sanitizer_cov_trace_pc+0xd/0x60 kernel/kcov.c:197
Code: 04 24 e8 26 e8 c4 00 48 8b 4c 24 08 48 8b 04 24 e9 ef fd ff ff 0f 1f 84 00 00 00 00 00 48 8b 34 24 65 48 8b 14 25 40 ef 01 00 <65> 8b 05 2c e0 bb 7e a9 00 01 ff 00 74 0f f6 c4 01 74 35 8b 82 14
RSP: 0018:ffff88800af4f988 EFLAGS: 00000202
RAX: 0000000000000000 RBX: 0000000000000001 RCX: ffffffff81eb2a93
RDX: ffff888010634e00 RSI: ffffffff81eb28f4 RDI: 0000000000000005
RBP: 0000000000000001 R08: 0000000000000001 R09: ffff88800af4fbe0
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000001
R13: ffff88800af4fbc8 R14: ffff88800af4fbd8 R15: 0000000000001032
 mls_range_isvalid+0x94/0x2b0 security/selinux/ss/mls.c:185
 mls_context_isvalid+0x71/0x340 security/selinux/ss/mls.c:200
 policydb_context_isvalid+0x31b/0x3d0 security/selinux/ss/policydb.c:968
 security_compute_sid.part.0+0xd6d/0x17e0 security/selinux/ss/services.c:1864
 security_compute_sid security/selinux/ss/services.c:1897 [inline]
 security_transition_sid+0x14b/0x1c0 security/selinux/ss/services.c:1897
 selinux_determine_inode_label+0x24b/0x340 security/selinux/hooks.c:1755
 may_create+0x286/0x3b0 security/selinux/hooks.c:1790
 security_inode_symlink+0xa0/0x100 security/security.c:1196
 vfs_symlink fs/namei.c:3956 [inline]
 vfs_symlink+0x340/0x600 fs/namei.c:3946
 do_symlinkat+0x13c/0x280 fs/namei.c:3987
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fe4ecaff477
Code: 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 0a 01 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffc496666e8 EFLAGS: 00000246 ORIG_RAX: 000000000000010a
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fe4ecaff477
RDX: 00007fe4ecb74210 RSI: 00000000ffffff9c RDI: 00007fe4ecb73148
RBP: 00007ffc4966671c R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000032
R13: 000000000001076d R14: 0000000000010740 R15: 00007ffc49666770
----------------
Code disassembly (best guess):
   0:	04 24                	add    $0x24,%al
   2:	e8 26 e8 c4 00       	call   0xc4e82d
   7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   c:	48 8b 04 24          	mov    (%rsp),%rax
  10:	e9 ef fd ff ff       	jmp    0xfffffe04
  15:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  1c:	00
  1d:	48 8b 34 24          	mov    (%rsp),%rsi
  21:	65 48 8b 14 25 40 ef 	mov    %gs:0x1ef40,%rdx
  28:	01 00
* 2a:	65 8b 05 2c e0 bb 7e 	mov    %gs:0x7ebbe02c(%rip),%eax        # 0x7ebbe05d <-- trapping instruction
  31:	a9 00 01 ff 00       	test   $0xff0100,%eax
  36:	74 0f                	je     0x47
  38:	f6 c4 01             	test   $0x1,%ah
  3b:	74 35                	je     0x72
  3d:	8b                   	.byte 0x8b
  3e:	82                   	.byte 0x82
  3f:	14                   	.byte 0x14
