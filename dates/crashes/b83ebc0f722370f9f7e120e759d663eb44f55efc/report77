audit: type=1400 audit(1731243529.844:103): avc:  denied  { read } for  pid=7202 comm="syz.1.319" scontext=system_u:system_r:kernel_t:s0 tcontext=system_u:system_r:kernel_t:s0 tclass=perf_event permissive=1
netlink: 'syz.0.326': attribute type 4 has an invalid length.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800feb00a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800feb00a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 2637514
hardirqs last  enabled at (2637514): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (2637514): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (2637513): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (2637513): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (2636198): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (2637435): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/116:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__sanitizer_cov_trace_pc+0x0/0x60 kernel/kcov.c:193
Code: c7 c7 80 e2 16 85 48 89 4c 24 08 48 89 04 24 e8 26 e8 c4 00 48 8b 4c 24 08 48 8b 04 24 e9 ef fd ff ff 0f 1f 84 00 00 00 00 00 <48> 8b 34 24 65 48 8b 14 25 40 ef 01 00 65 8b 05 2c e0 bb 7e a9 00
RSP: 0018:ffff88800c8a7bf0 EFLAGS: 00000246
RAX: ffffffff8152a916 RBX: dffffc0000000000 RCX: ffffffff815298a8
RDX: 0000000000000000 RSI: ffffffff84caa068 RDI: ffffffff84caa068
RBP: ffff88800c8a7cc8 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000005 R11: 0000000000000001 R12: 000000007b356448
R13: 0000000000000095 R14: ffffc900006a81f0 R15: ffff88800c8a7cc8
 ___bpf_prog_run+0x37fb/0x70f0 kernel/bpf/core.c:1563
 __bpf_prog_run32+0x8f/0xd0 kernel/bpf/core.c:1686
 bpf_dispatcher_nop_func include/linux/bpf.h:644 [inline]
 bpf_prog_run_pin_on_cpu include/linux/filter.h:597 [inline]
 seccomp_run_filters kernel/seccomp.c:328 [inline]
 __seccomp_filter+0x164/0x1560 kernel/seccomp.c:940
 __secure_computing+0xac/0x290 kernel/seccomp.c:1073
 syscall_trace_enter.constprop.0+0x80/0x240 kernel/entry/common.c:58
 do_syscall_64+0xf/0x40 arch/x86/entry/common.c:41
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f8620cce9d5
Code: c1 34 0e 00 64 c7 00 16 00 00 00 b8 ff ff ff ff c3 0f 1f 40 00 41 89 f8 89 f7 48 89 d6 41 83 f8 01 77 2a b8 05 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 03 c3 66 90 48 8b 15 89 34 0e 00 f7 d8 64 89
RSP: 002b:00007ffcc996a0b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000005
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007f8620cce9d5
RDX: 00007ffcc996a0f0 RSI: 00007ffcc996a0f0 RDI: 0000000000000010
RBP: 0000556ac68b33f0 R08: 0000000000000001 R09: 006c617574726976
R10: 0000000000000000 R11: 0000000000000246 R12: 0000556ac68dd46a
R13: 0000000000000011 R14: 0000000000000010 R15: 0000556ac68b33f1
----------------
Code disassembly (best guess):
   0:	c7 c7 80 e2 16 85    	mov    $0x8516e280,%edi
   6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   b:	48 89 04 24          	mov    %rax,(%rsp)
   f:	e8 26 e8 c4 00       	call   0xc4e83a
  14:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  19:	48 8b 04 24          	mov    (%rsp),%rax
  1d:	e9 ef fd ff ff       	jmp    0xfffffe11
  22:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  29:	00
* 2a:	48 8b 34 24          	mov    (%rsp),%rsi <-- trapping instruction
  2e:	65 48 8b 14 25 40 ef 	mov    %gs:0x1ef40,%rdx
  35:	01 00
  37:	65 8b 05 2c e0 bb 7e 	mov    %gs:0x7ebbe02c(%rip),%eax        # 0x7ebbe06a
  3e:	a9                   	.byte 0xa9
