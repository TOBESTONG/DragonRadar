EXT4-fs (loop0): Delayed block allocation failed for inode 18 at logical offset 0 with max blocks 6 with error 28
EXT4-fs (loop0): This should not happen!! Data will be lost
EXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.3.251/9708 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800d2a88a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800d2a88a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 394
hardirqs last  enabled at (394): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (394): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (393): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (393): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (72): [<ffffffff81099056>] memcpy include/linux/string.h:399 [inline]
softirqs last  enabled at (72): [<ffffffff81099056>] fpu__copy+0x176/0x640 arch/x86/kernel/fpu/core.c:240
softirqs last disabled at (339): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by syz.3.251/9708:
 #0: ffffffff851c5430 (dup_mmap_sem){++++}-{0:0}, at: dup_mmap kernel/fork.c:478 [inline]
 #0: ffffffff851c5430 (dup_mmap_sem){++++}-{0:0}, at: dup_mm+0x100/0x1110 kernel/fork.c:1357
 #1: ffff88800903a2e8 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_write_lock_killable include/linux/mmap_lock.h:26 [inline]
 #1: ffff88800903a2e8 (&mm->mmap_lock#2){++++}-{3:3}, at: dup_mmap kernel/fork.c:479 [inline]
 #1: ffff88800903a2e8 (&mm->mmap_lock#2){++++}-{3:3}, at: dup_mm+0x118/0x1110 kernel/fork.c:1357
 #2: ffff88800903f3e8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: mmap_write_lock_nested include/linux/mmap_lock.h:21 [inline]
 #2: ffff88800903f3e8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: dup_mmap kernel/fork.c:488 [inline]
 #2: ffff88800903f3e8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: dup_mm+0x159/0x1110 kernel/fork.c:1357
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 9708 Comm: syz.3.251 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:preempt_count arch/x86/include/asm/preempt.h:26 [inline]
RIP: 0010:check_preemption_disabled+0x22/0x130 lib/smp_processor_id.c:16
Code: e8 53 74 11 fe eb 9f cc 41 56 41 55 49 89 f5 41 54 55 48 89 fd 53 0f 1f 44 00 00 65 44 8b 25 05 64 16 7c 65 8b 1d 9e bd 16 7c <81> e3 ff ff ff 7f 31 ff 89 de 0f 1f 44 00 00 85 db 74 11 0f 1f 44
RSP: 0018:ffff88800ba2f710 EFLAGS: 00000282
RAX: 0000000000000001 RBX: 0000000080000002 RCX: 00000000000000c0
RDX: 0000000000000001 RSI: ffffffff845d0900 RDI: ffffffff845d0940
RBP: ffffffff845d0940 R08: 0000000000000100 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000001
R13: ffffffff845d0900 R14: ffff88800abc5b00 R15: 0000000000000cc0
 rcu_lockdep_current_cpu_online kernel/rcu/tree.c:1150 [inline]
 rcu_lockdep_current_cpu_online+0x2d/0x160 kernel/rcu/tree.c:1141
 rcu_read_lock_held_common kernel/rcu/update.c:110 [inline]
 rcu_read_lock_held_common kernel/rcu/update.c:100 [inline]
 rcu_read_lock_sched_held+0x25/0x70 kernel/rcu/update.c:121
 trace_kmem_cache_alloc include/trace/events/kmem.h:54 [inline]
 kmem_cache_alloc+0x302/0x330 mm/slub.c:2906
 vm_area_dup+0x78/0x290 kernel/fork.c:356
 dup_mmap kernel/fork.c:532 [inline]
 dup_mm+0x44d/0x1110 kernel/fork.c:1357
 copy_mm kernel/fork.c:1413 [inline]
 copy_process+0x2668/0x69f0 kernel/fork.c:2095
 kernel_clone+0xe7/0xa80 kernel/fork.c:2456
 __do_sys_clone+0xc8/0x110 kernel/fork.c:2573
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f76552aaef9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f7653f23fe8 EFLAGS: 00000206 ORIG_RAX: 0000000000000038
RAX: ffffffffffffffda RBX: 00007f7655462f80 RCX: 00007f76552aaef9
RDX: 00000000200000c0 RSI: 00000000200002a0 RDI: 0000000020000000
RBP: 00007f765531db76 R08: 00000000200002c0 R09: 00000000200002c0
R10: 0000000020000140 R11: 0000000000000206 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f7655462f80 R15: 00007ffe1d5e1af8
kernel write not supported for file /tty1 (pid: 2818 comm: kworker/1:3)
EXT4-fs (loop1): Ignoring removed oldalloc option
[EXT4 FS bs=4096, gc=1, bpg=32768, ipg=32, mo=c842c018, mo2=0002]
EXT4-fs error (device loop1): ext4_mb_mark_diskspace_used:3233: comm syz.1.252: Allocating blocks 41-42 which overlap fs metadata
Quota error (device loop1): write_blk: dquota write failed
Quota error (device loop1): qtree_write_dquot: Error -117 occurred while creating quota
EXT4-fs (loop1): ext4_orphan_cleanup: truncating inode 16 to 9000 bytes
EXT4-fs (loop1): 1 truncate cleaned up
EXT4-fs (loop1): mounting with "discard" option, but the device does not support discard
EXT4-fs (loop1): mounted filesystem without journal. Opts: oldalloc,noblock_validity,stripe=0x0000000000000006,barrier=0x000000007fff0038,discard,sysvgroups,resuid=0x000000000000ee00,resgid=0x000000000000ee01,barrier=0x00000000000041db2,errors=continue
ext4 filesystem being mounted at /1/file0 supports timestamps until 2038 (0x7fffffff)
EXT4-fs (loop1): re-mounted. Opts: (null)
netlink: 'syz.3.251': attribute type 4 has an invalid length.
----------------
Code disassembly (best guess):
   0:	e8 53 74 11 fe       	call   0xfe117458
   5:	eb 9f                	jmp    0xffffffa6
   7:	cc                   	int3
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	49 89 f5             	mov    %rsi,%r13
   f:	41 54                	push   %r12
  11:	55                   	push   %rbp
  12:	48 89 fd             	mov    %rdi,%rbp
  15:	53                   	push   %rbx
  16:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  1b:	65 44 8b 25 05 64 16 	mov    %gs:0x7c166405(%rip),%r12d        # 0x7c166428
  22:	7c
  23:	65 8b 1d 9e bd 16 7c 	mov    %gs:0x7c16bd9e(%rip),%ebx        # 0x7c16bdc8
* 2a:	81 e3 ff ff ff 7f    	and    $0x7fffffff,%ebx <-- trapping instruction
  30:	31 ff                	xor    %edi,%edi
  32:	89 de                	mov    %ebx,%esi
  34:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  39:	85 db                	test   %ebx,%ebx
  3b:	74 11                	je     0x4e
  3d:	0f                   	.byte 0xf
  3e:	1f                   	(bad)
  3f:	44                   	rex.R
