netlink: 'syz.1.248': attribute type 4 has an invalid length.
9pnet: Insufficient options for proto=fd
sr 1:0:0:0: [sr0] CDROM not ready.  Make sure there is a disc in the drive.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
modprobe/4986 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880113706a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880113706a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 742
hardirqs last  enabled at (742): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (742): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (741): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (741): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (172): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (647): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by modprobe/4986:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 4986 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:orc_find arch/x86/kernel/unwind_orc.c:163 [inline]
RIP: 0010:unwind_next_frame+0x240/0x2640 arch/x86/kernel/unwind_orc.c:443
Code: ff 39 f0 0f 83 c3 15 00 00 48 be 00 00 00 00 00 fc ff df 41 89 c0 4a 8d 3c 85 94 e0 44 86 49 89 f9 49 c1 e9 03 45 0f b6 0c 31 <48> 89 fe 83 e6 07 83 c6 03 44 38 ce 7c 30 45 84 c9 74 2b 4c 89 44
RSP: 0018:ffff8880119c75c8 EFLAGS: 00000217
RAX: 000000000002eae4 RBX: 1ffff11002338ec3 RCX: ffffffff83eae432
RDX: 0000000000032042 RSI: dffffc0000000000 RDI: ffffffff86508c24
RBP: 0000000000000001 R08: 000000000002eae4 R09: 0000000000000000
R10: ffffed1002338ee1 R11: 0000000000000001 R12: ffff8880119c76f8
R13: ffff8880119c76e5 R14: ffff8880119c7700 R15: ffff8880119c76b0
 arch_stack_walk+0x83/0xf0 arch/x86/kernel/stacktrace.c:25
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc+0x145/0x330 mm/slub.c:2904
 kmem_cache_zalloc include/linux/slab.h:654 [inline]
 lsm_file_alloc security/security.c:568 [inline]
 security_file_alloc+0x34/0x170 security/security.c:1456
 __alloc_file+0xb6/0x310 fs/file_table.c:106
 alloc_empty_file+0x6d/0x170 fs/file_table.c:151
 path_openat+0x125/0x26f0 fs/namei.c:3355
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f65f4f33cb4
Code: f9 41 89 f0 41 83 e2 40 75 2c 89 f0 25 00 00 41 00 3d 00 00 41 00 74 1e 44 89 c2 4c 89 ce bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2c c3 0f 1f 00 48 8d 44 24 08 c7 44 24 b8 10
RSP: 002b:00007ffdd6c1a8f8 EFLAGS: 00000287 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f65f4f33cb4
RDX: 0000000000080000 RSI: 00007f65f4f12a00 RDI: 00000000ffffff9c
RBP: 00007ffdd6c1a960 R08: 0000000000080000 R09: 00007f65f4f12a00
R10: 0000000000000000 R11: 0000000000000287 R12: 00007ffdd6c1a9bf
R13: 00007f65f4f12a00 R14: 00007f65f4f43060 R15: 00007ffdd6c1a9d0
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	39 f0                	cmp    %esi,%eax
   2:	0f 83 c3 15 00 00    	jae    0x15cb
   8:	48 be 00 00 00 00 00 	movabs $0xdffffc0000000000,%rsi
   f:	fc ff df
  12:	41 89 c0             	mov    %eax,%r8d
  15:	4a 8d 3c 85 94 e0 44 	lea    -0x79bb1f6c(,%r8,4),%rdi
  1c:	86
  1d:	49 89 f9             	mov    %rdi,%r9
  20:	49 c1 e9 03          	shr    $0x3,%r9
  24:	45 0f b6 0c 31       	movzbl (%r9,%rsi,1),%r9d
* 29:	48 89 fe             	mov    %rdi,%rsi <-- trapping instruction
  2c:	83 e6 07             	and    $0x7,%esi
  2f:	83 c6 03             	add    $0x3,%esi
  32:	44 38 ce             	cmp    %r9b,%sil
  35:	7c 30                	jl     0x67
  37:	45 84 c9             	test   %r9b,%r9b
  3a:	74 2b                	je     0x67
  3c:	4c                   	rex.WR
  3d:	89                   	.byte 0x89
  3e:	44                   	rex.R
