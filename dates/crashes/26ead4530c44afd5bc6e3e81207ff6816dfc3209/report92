EXT4-fs error (device loop1): ext4_mb_generate_buddy:802: group 0, block bitmap and bg descriptor inconsistent: 43 vs 44 free clusters
EXT4-fs (loop1): 1 orphan inode deleted
EXT4-fs (loop1): mounting with "discard" option, but the device does not support discard
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/124 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800bea9ea8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800bea9ea8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 96648
hardirqs last  enabled at (96648): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (96648): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (96647): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (96647): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (96266): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (96615): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by systemd-udevd/124:
 #0: ffff88800ddda438 (sb_writers#8){.+.+}-{0:0}, at: open_last_lookups fs/namei.c:3165 [inline]
 #0: ffff88800ddda438 (sb_writers#8){.+.+}-{0:0}, at: path_openat+0x24cc/0x26f0 fs/namei.c:3366
 #1: ffff888010ea0d60 (&type->i_mutex_dir_key#5){++++}-{3:3}, at: inode_lock include/linux/fs.h:774 [inline]
 #1: ffff888010ea0d60 (&type->i_mutex_dir_key#5){++++}-{3:3}, at: open_last_lookups fs/namei.c:3175 [inline]
 #1: ffff888010ea0d60 (&type->i_mutex_dir_key#5){++++}-{3:3}, at: path_openat+0x925/0x26f0 fs/namei.c:3366
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: security_compute_sid.part.0+0x0/0x17e0
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 124 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__sanitizer_cov_trace_const_cmp4+0x4/0x20 kernel/kcov.c:284
Code: 84 00 00 00 00 00 48 8b 0c 24 0f b7 d6 0f b7 f7 bf 03 00 00 00 e9 cc fe ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 90 48 8b 0c 24 <89> f2 89 fe bf 05 00 00 00 e9 ae fe ff ff 66 66 2e 0f 1f 84 00 00
RSP: 0018:ffff888008e27418 EFLAGS: 00000246
RAX: 0000000000000000 RBX: ffff88800dcb03b8 RCX: ffffffff81e76a29
RDX: ffff88800faf4e00 RSI: 0000000000000055 RDI: 0000000000000000
RBP: 0000000000000055 R08: 0000000000000001 R09: ffffffff86e5f6a7
R10: 0000000000000000 R11: 0000000000000001 R12: ffff88800cfa4000
R13: 000000000000005f R14: 0000000000000007 R15: 0000000000000006
 sidtab_search_core security/selinux/ss/sidtab.c:239 [inline]
 sidtab_search_entry+0x19/0x230 security/selinux/ss/sidtab.c:255
 security_compute_sid.part.0+0x324/0x17e0 security/selinux/ss/services.c:1754
 security_compute_sid security/selinux/ss/services.c:1897 [inline]
 security_transition_sid+0x14b/0x1c0 security/selinux/ss/services.c:1897
 selinux_determine_inode_label+0x24b/0x340 security/selinux/hooks.c:1755
 selinux_inode_init_security+0x243/0x6f0 security/selinux/hooks.c:2897
 security_inode_init_security+0x151/0x350 security/security.c:1042
 shmem_mknod+0xc9/0x1f0 mm/shmem.c:2935
 lookup_open+0xf52/0x1330 fs/namei.c:3104
 open_last_lookups fs/namei.c:3178 [inline]
 path_openat+0x93f/0x26f0 fs/namei.c:3366
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f2e7663d1c7
Code: 25 00 00 41 00 3d 00 00 41 00 74 47 64 8b 04 25 18 00 00 00 85 c0 75 6b 44 89 e2 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 95 00 00 00 48 8b 4c 24 28 64 48 2b 0c 25
RSP: 002b:00007ffccda199e0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f2e7663d1c7
RDX: 00000000000800c2 RSI: 000055ca903eb550 RDI: 00000000ffffff9c
RBP: 000055ca903eb550 R08: 000000000000001f R09: 00007ffccdb8f090
R10: 0000000000000180 R11: 0000000000000246 R12: 00000000000800c2
R13: 00007f2e766eb200 R14: 00007ffccda19a80 R15: 8421084210842109
EXT4-fs (loop1): mounted filesystem without journal. Opts: usrjquota=./file0,,errors=continue
ext4 filesystem being mounted at /30/file1 supports timestamps until 2038 (0x7fffffff)
----------------
Code disassembly (best guess):
   0:	84 00                	test   %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	48 8b 0c 24          	mov    (%rsp),%rcx
   a:	0f b7 d6             	movzwl %si,%edx
   d:	0f b7 f7             	movzwl %di,%esi
  10:	bf 03 00 00 00       	mov    $0x3,%edi
  15:	e9 cc fe ff ff       	jmp    0xfffffee6
  1a:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  21:	00 00 00 00
  25:	90                   	nop
  26:	48 8b 0c 24          	mov    (%rsp),%rcx
* 2a:	89 f2                	mov    %esi,%edx <-- trapping instruction
  2c:	89 fe                	mov    %edi,%esi
  2e:	bf 05 00 00 00       	mov    $0x5,%edi
  33:	e9 ae fe ff ff       	jmp    0xfffffee6
  38:	66                   	data16
  39:	66                   	data16
  3a:	2e                   	cs
  3b:	0f                   	.byte 0xf
  3c:	1f                   	(bad)
  3d:	84 00                	test   %al,(%rax)
