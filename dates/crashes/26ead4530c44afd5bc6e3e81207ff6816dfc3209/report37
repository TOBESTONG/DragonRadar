EXT4-fs (loop2): mounted filesystem without journal. Opts: ,errors=continue
EXT4-fs (loop2): 1 truncate cleaned up
EXT4-fs (loop2): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.0.171/4888 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800b5c3ea8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800b5c3ea8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 46642
hardirqs last  enabled at (46642): [<ffffffff84000c42>] asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
hardirqs last disabled at (46641): [<ffffffff83eb135c>] sysvec_apic_timer_interrupt+0xc/0xf0 arch/x86/kernel/apic/apic.c:1091
softirqs last  enabled at (45926): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (46155): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by syz.0.171/4888:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 4888 Comm: syz.0.171 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:compound_head include/linux/page-flags.h:187 [inline]
RIP: 0010:PageSwapBacked include/linux/page-flags.h:357 [inline]
RIP: 0010:PageSwapCache include/linux/page-flags.h:402 [inline]
RIP: 0010:free_swap_cache mm/swap_state.c:326 [inline]
RIP: 0010:free_pages_and_swap_cache+0x9b/0x290 mm/swap_state.c:354
Code: 42 80 3c 28 00 0f 85 e9 01 00 00 48 8b 2b 48 8d 45 08 48 89 44 24 10 48 c1 e8 03 42 80 3c 28 00 0f 85 bf 01 00 00 48 8b 45 08 <31> ff 49 89 ef 48 89 44 24 08 83 e0 01 48 89 c6 48 89 04 24 e8 dc
RSP: 0018:ffff88802133f6c8 EFLAGS: 00000246
RAX: dead000000000100 RBX: ffff8880105682a8 RCX: ffffffff816e1f6c
RDX: ffff888010e61a00 RSI: ffffffff816e1f7a RDI: 0000000000000004
RBP: ffffea00005a9a00 R08: 0000000000000000 R09: ffffea00005adbc7
R10: 00000000000001fe R11: 0000000000000001 R12: 0000000000000053
R13: dffffc0000000000 R14: 00000000000001fe R15: 0000000000000000
 tlb_batch_pages_flush mm/mmu_gather.c:49 [inline]
 tlb_flush_mmu_free mm/mmu_gather.c:242 [inline]
 tlb_flush_mmu+0x8d/0x620 mm/mmu_gather.c:249
 zap_pte_range mm/memory.c:1319 [inline]
 zap_pmd_range mm/memory.c:1357 [inline]
 zap_pud_range mm/memory.c:1386 [inline]
 zap_p4d_range mm/memory.c:1407 [inline]
 unmap_page_range+0x16b8/0x2070 mm/memory.c:1428
 unmap_single_vma+0x198/0x300 mm/memory.c:1473
 unmap_vmas+0x168/0x2f0 mm/memory.c:1505
 exit_mmap+0x27f/0x4e0 mm/mmap.c:3220
 __mmput kernel/fork.c:1079 [inline]
 mmput+0xc5/0x350 kernel/fork.c:1100
 exit_mm kernel/exit.c:486 [inline]
 do_exit+0xa5e/0x28e0 kernel/exit.c:796
 do_group_exit+0x125/0x310 kernel/exit.c:906
 get_signal+0x462/0x2480 kernel/signal.c:2758
 arch_do_signal+0x88/0x1a90 arch/x86/kernel/signal.c:811
 exit_to_user_mode_loop kernel/entry/common.c:161 [inline]
 exit_to_user_mode_prepare+0xf7/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fbed61d9ef9
Code: Unable to access opcode bytes at RIP 0x7fbed61d9ecf.
RSP: 002b:00007fbed4e530e8 EFLAGS: 00000246 ORIG_RAX: 00000000000000ca
RAX: fffffffffffffe00 RBX: 00007fbed6391f88 RCX: 00007fbed61d9ef9
RDX: 0000000000000000 RSI: 0000000000000080 RDI: 00007fbed6391f88
RBP: 00007fbed6391f80 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007fbed6391f8c
R13: 0000000000000000 R14: 00007fffb88fd400 R15: 00007fffb88fd4e8
----------------
Code disassembly (best guess):
   0:	42 80 3c 28 00       	cmpb   $0x0,(%rax,%r13,1)
   5:	0f 85 e9 01 00 00    	jne    0x1f4
   b:	48 8b 2b             	mov    (%rbx),%rbp
   e:	48 8d 45 08          	lea    0x8(%rbp),%rax
  12:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  17:	48 c1 e8 03          	shr    $0x3,%rax
  1b:	42 80 3c 28 00       	cmpb   $0x0,(%rax,%r13,1)
  20:	0f 85 bf 01 00 00    	jne    0x1e5
  26:	48 8b 45 08          	mov    0x8(%rbp),%rax
* 2a:	31 ff                	xor    %edi,%edi <-- trapping instruction
  2c:	49 89 ef             	mov    %rbp,%r15
  2f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  34:	83 e0 01             	and    $0x1,%eax
  37:	48 89 c6             	mov    %rax,%rsi
  3a:	48 89 04 24          	mov    %rax,(%rsp)
  3e:	e8                   	.byte 0xe8
  3f:	dc                   	.byte 0xdc
