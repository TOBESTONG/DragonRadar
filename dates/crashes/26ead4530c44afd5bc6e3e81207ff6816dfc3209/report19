EXT4-fs (loop3): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /4/file0 supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888019cb78a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888019cb78a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 2817906
hardirqs last  enabled at (2817906): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (2817906): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (2817905): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (2817905): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (2817354): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (2817895): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/116:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:debug_smp_processor_id+0x0/0x20 lib/smp_processor_id.c:59
Code: e9 01 e8 01 50 f1 ff 48 8b 74 24 28 48 c7 c7 c0 08 5d 84 e8 f0 4f f1 ff e8 40 68 f5 ff eb a2 66 66 2e 0f 1f 84 00 00 00 00 00 <0f> 1f 44 00 00 48 c7 c6 00 09 5d 84 48 c7 c7 40 09 5d 84 e9 b8 fe
RSP: 0018:ffff88801108f650 EFLAGS: 00000282
RAX: 0000000000000007 RBX: 00007f37a162f767 RCX: 1ffffffff0bac708
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 00007f37a162f767
RBP: 00007f37a162f767 R08: ffffffff86424ab2 R09: ffffffff86424ab6
R10: ffffed1002211ee1 R11: 0000000000000001 R12: ffff88801108f768
R13: 0000000000000000 R14: ffff88800fa80000 R15: 0000000000000010
 rcu_dynticks_curr_cpu_in_eqs kernel/rcu/tree.c:319 [inline]
 rcu_is_watching+0xe/0x100 kernel/rcu/tree.c:1102
 kernel_text_address kernel/extable.c:139 [inline]
 kernel_text_address+0x56/0x120 kernel/extable.c:120
 __kernel_text_address+0x9/0x30 kernel/extable.c:105
 unwind_get_return_address+0x51/0x90 arch/x86/kernel/unwind_orc.c:318
 arch_stack_walk+0x99/0xf0 arch/x86/kernel/stacktrace.c:26
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc+0x145/0x330 mm/slub.c:2904
 kmem_cache_zalloc include/linux/slab.h:654 [inline]
 lsm_file_alloc security/security.c:568 [inline]
 security_file_alloc+0x34/0x170 security/security.c:1456
 __alloc_file+0xb6/0x310 fs/file_table.c:106
 alloc_empty_file+0x6d/0x170 fs/file_table.c:151
 path_openat+0x125/0x26f0 fs/namei.c:3355
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f37a162f767
Code: 25 00 00 41 00 3d 00 00 41 00 74 47 64 8b 04 25 18 00 00 00 85 c0 75 6b 44 89 e2 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 95 00 00 00 48 8b 4c 24 28 64 48 2b 0c 25
RSP: 002b:00007fffb4a6aed0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 000055cc5015d140 RCX: 00007f37a162f767
RDX: 0000000000290000 RSI: 000055cc4ee5695a RDI: 00000000ffffff9c
RBP: 000055cc4ee5695a R08: 000055cc5012fda0 R09: 00007f37a1617be0
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000290000
R13: 00000000ffffffff R14: 000055cc5015d140 R15: 0000000000000000
----------------
Code disassembly (best guess):
   0:	e9 01 e8 01 50       	jmp    0x5001e806
   5:	f1                   	int1
   6:	ff 48 8b             	decl   -0x75(%rax)
   9:	74 24                	je     0x2f
   b:	28 48 c7             	sub    %cl,-0x39(%rax)
   e:	c7 c0 08 5d 84 e8    	mov    $0xe8845d08,%eax
  14:	f0 4f f1             	lock rex.WRXB int1
  17:	ff                   	ljmp   (bad)
  18:	e8 40 68 f5 ff       	call   0xfff5685d
  1d:	eb a2                	jmp    0xffffffc1
  1f:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  26:	00 00 00 00
* 2a:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1) <-- trapping instruction
  2f:	48 c7 c6 00 09 5d 84 	mov    $0xffffffff845d0900,%rsi
  36:	48 c7 c7 40 09 5d 84 	mov    $0xffffffff845d0940,%rdi
  3d:	e9                   	.byte 0xe9
  3e:	b8                   	.byte 0xb8
  3f:	fe                   	.byte 0xfe
