FAT-fs (loop3): Filesystem has been set read-only
netlink: 188 bytes leftover after parsing attributes in process `syz.2.334'.
Failed to initialize the IGMP autojoin socket (err -2)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------

inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800b3452a8 (
=============================
&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
WARNING: suspicious RCU usage
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 2722558
hardirqs last  enabled at (2722558): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (2722558): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (2722557): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (2722557): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (2721606): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (2722123): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by systemd-udevd/116:
 #0: 
5.10.0 #1 Not tainted
ffff88800febab08 (&p->lock){+.+.}-{3:3}, at: seq_read_iter+0xe5/0x11c0 fs/seq_file.c:179
-----------------------------
 #1: ffff88800cf3a488 (&of->mutex){+.+.}-{3:3}, at: kernfs_seq_start+0x4b/0x260 fs/kernfs/file.c:111
 #2: ffff88800b96eae8 (kn->active
kernel/sched/core.c:7270 Illegal context switch in RCU-sched read-side critical section!
#2){++++}-{0:0}, at: kernfs_seq_start+0x75/0x260 fs/kernfs/file.c:112
 #3: ffffffff850e7de0 (

other info that might help us debug this:

rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411

rcu_scheduler_active = 2, debug_locks = 0
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
no locks held by syz.1.337/7267.
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711

stack backtrace:
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:get_current arch/x86/include/asm/current.h:15 [inline]
RIP: 0010:__sanitizer_cov_trace_pc+0x4/0x60 kernel/kcov.c:196
Code: 16 85 48 89 4c 24 08 48 89 04 24 e8 26 e8 c4 00 48 8b 4c 24 08 48 8b 04 24 e9 ef fd ff ff 0f 1f 84 00 00 00 00 00 48 8b 34 24 <65> 48 8b 14 25 40 ef 01 00 65 8b 05 2c e0 bb 7e a9 00 01 ff 00 74
RSP: 0018:ffff8880113e7ba8 EFLAGS: 00000212
RAX: 0000000000000000 RBX: ffff88800febaa68 RCX: ffffffff819ccd34
RDX: 0000000000001000 RSI: ffffffff819ccd46 RDI: 0000000000000007
RBP: 0000000000001000 R08: 0000000000000000 R09: ffff88800d32c707
R10: 0000000000000fff R11: 0000000000000001 R12: 0000000000000000
R13: 0000000000001000 R14: ffff88800cf3a400 R15: ffff888018fc8000
 memset include/linux/string.h:384 [inline]
 sysfs_kf_seq_show+0x166/0x460 fs/sysfs/file.c:54
 seq_read_iter+0x4f3/0x11c0 fs/seq_file.c:227
 seq_read+0x3dd/0x5b0 fs/seq_file.c:159
 kernfs_fop_read+0xe9/0x590 fs/kernfs/file.c:251
 vfs_read+0x228/0x580 fs/read_write.c:494
 ksys_read+0x12d/0x250 fs/read_write.c:634
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f1e2154d46e
Code: c0 e9 b6 fe ff ff 50 48 8d 3d ce 07 0b 00 e8 69 01 02 00 66 0f 1f 84 00 00 00 00 00 64 8b 04 25 18 00 00 00 85 c0 75 14 0f 05 <48> 3d 00 f0 ff ff 77 5a c3 66 0f 1f 84 00 00 00 00 00 48 83 ec 28
RSP: 002b:00007ffcd45b7ce8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
RAX: ffffffffffffffda RBX: 0000562d5e1c1850 RCX: 00007f1e2154d46e
RDX: 0000000000001000 RSI: 0000562d5e1afcc0 RDI: 000000000000000f
RBP: 00007f1e2162d480 R08: 000000000000000f R09: 00007f1e21630be0
R10: 0000000004000000 R11: 0000000000000246 R12: 0000000000001001
R13: 0000562d5e1afcc0 R14: 0000000000000d68 R15: 00007f1e2162c880
CPU: 0 PID: 7267 Comm: syz.1.337 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 ___might_sleep+0x42a/0x4d0 kernel/sched/core.c:7270
 zap_pte_range mm/memory.c:1323 [inline]
 zap_pmd_range mm/memory.c:1357 [inline]
 zap_pud_range mm/memory.c:1386 [inline]
 zap_p4d_range mm/memory.c:1407 [inline]
 unmap_page_range+0xff8/0x2070 mm/memory.c:1428
 unmap_single_vma+0x198/0x300 mm/memory.c:1473
 unmap_vmas+0x168/0x2f0 mm/memory.c:1505
 exit_mmap+0x27f/0x4e0 mm/mmap.c:3220
 __mmput kernel/fork.c:1079 [inline]
 mmput+0xc5/0x350 kernel/fork.c:1100
 exit_mm kernel/exit.c:486 [inline]
 do_exit+0xa5e/0x28e0 kernel/exit.c:796
 do_group_exit+0x125/0x310 kernel/exit.c:906
 get_signal+0x462/0x2480 kernel/signal.c:2758
 arch_do_signal+0x88/0x1a90 arch/x86/kernel/signal.c:811
 exit_to_user_mode_loop kernel/entry/common.c:161 [inline]
 exit_to_user_mode_prepare+0xf7/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f0257797ef9
Code: Unable to access opcode bytes at RIP 0x7f0257797ecf.
RSP: 002b:00007f02563f0038 EFLAGS: 00000246 ORIG_RAX: 000000000000012a
RAX: 0000000000000006 RBX: 00007f0257950058 RCX: 00007f0257797ef9
RDX: ffffffffffffffff RSI: 0000000000000000 RDI: 000000002001d000
RBP: 00007f025780ab76 R08: 0000000000000000 R09: 0000000000000000
R10: ffffffffffffffff R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f0257950058 R15: 00007ffc3cafa428
 loop2: p1 p2 p3
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	85 48 89             	test   %ecx,-0x77(%rax)
   3:	4c 24 08             	rex.WR and $0x8,%al
   6:	48 89 04 24          	mov    %rax,(%rsp)
   a:	e8 26 e8 c4 00       	call   0xc4e835
   f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  14:	48 8b 04 24          	mov    (%rsp),%rax
  18:	e9 ef fd ff ff       	jmp    0xfffffe0c
  1d:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  24:	00
  25:	48 8b 34 24          	mov    (%rsp),%rsi
* 29:	65 48 8b 14 25 40 ef 	mov    %gs:0x1ef40,%rdx <-- trapping instruction
  30:	01 00
  32:	65 8b 05 2c e0 bb 7e 	mov    %gs:0x7ebbe02c(%rip),%eax        # 0x7ebbe065
  39:	a9 00 01 ff 00       	test   $0xff0100,%eax
  3e:	74                   	.byte 0x74
