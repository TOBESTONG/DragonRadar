EXT4-fs error (device loop3): ext4_empty_dir:2901: inode #11: block 1: comm syz-executor: Directory block failed checksum
EXT4-fs (loop3): Unrecognized mount option "measure" or missing value
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/127 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888018929ea8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888018929ea8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 1939268
hardirqs last  enabled at (1939268): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (1939268): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (1939267): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (1939267): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (1938918): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (1939215): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/127:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 127 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__sanitizer_cov_trace_pc+0x30/0x60 kernel/kcov.c:197
Code: 8b 14 25 40 ef 01 00 65 8b 05 2c e0 bb 7e a9 00 01 ff 00 74 0f f6 c4 01 74 35 8b 82 14 14 00 00 85 c0 74 2b 8b 82 f0 13 00 00 <83> f8 02 75 20 48 8b 8a f8 13 00 00 8b 92 f4 13 00 00 48 8b 01 48
RSP: 0018:ffff888010e7fbf0 EFLAGS: 00000246
RAX: 0000000000000000 RBX: dffffc0000000000 RCX: 1ffffffff0e3d934
RDX: ffff88800cf20000 RSI: ffffffff81527171 RDI: ffffc900006aa052
RBP: ffff888010e7fcc8 R08: 0000000000000001 R09: 0000000000000001
R10: 000000007fff0000 R11: 0000000000000001 R12: 000000007b356448
R13: 00000000c000003e R14: ffffc900006aa058 R15: ffff888010e7fcc8
 ___bpf_prog_run+0x51/0x70f0 kernel/bpf/core.c:1396
 __bpf_prog_run32+0x8f/0xd0 kernel/bpf/core.c:1686
 bpf_dispatcher_nop_func include/linux/bpf.h:644 [inline]
 bpf_prog_run_pin_on_cpu include/linux/filter.h:597 [inline]
 seccomp_run_filters kernel/seccomp.c:328 [inline]
 __seccomp_filter+0x164/0x1560 kernel/seccomp.c:940
 __secure_computing+0xac/0x290 kernel/seccomp.c:1073
 syscall_trace_enter.constprop.0+0x80/0x240 kernel/entry/common.c:58
 do_syscall_64+0xf/0x40 arch/x86/entry/common.c:41
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f83395d2fe7
Code: 00 75 17 48 83 ec 80 5d 41 5c 41 5d c3 66 0f 1f 44 00 00 b8 ff ff ff ff eb d9 e8 d4 05 02 00 0f 1f 40 00 b8 5f 00 00 00 0f 05 <c3> 0f 1f 84 00 00 00 00 00 b8 5a 00 00 00 0f 05 48 3d 01 f0 ff ff
RSP: 002b:00007fff66fe1d88 EFLAGS: 00000206 ORIG_RAX: 000000000000005f
RAX: ffffffffffffffda RBX: 0000000000000012 RCX: 00007f83395d2fe7
RDX: 00000000000800c2 RSI: 0000561bf467dca0 RDI: 0000000000000012
RBP: 0000561bf467dca0 R08: 000000000000000a R09: 00007fff66ff1090
R10: 0000000000000180 R11: 0000000000000206 R12: 00007fff66fe1e48
R13: 00007fff66fe1e40 R14: 0000000000000010 R15: 0000561bf467dca0
----------------
Code disassembly (best guess):
   0:	8b 14 25 40 ef 01 00 	mov    0x1ef40,%edx
   7:	65 8b 05 2c e0 bb 7e 	mov    %gs:0x7ebbe02c(%rip),%eax        # 0x7ebbe03a
   e:	a9 00 01 ff 00       	test   $0xff0100,%eax
  13:	74 0f                	je     0x24
  15:	f6 c4 01             	test   $0x1,%ah
  18:	74 35                	je     0x4f
  1a:	8b 82 14 14 00 00    	mov    0x1414(%rdx),%eax
  20:	85 c0                	test   %eax,%eax
  22:	74 2b                	je     0x4f
  24:	8b 82 f0 13 00 00    	mov    0x13f0(%rdx),%eax
* 2a:	83 f8 02             	cmp    $0x2,%eax <-- trapping instruction
  2d:	75 20                	jne    0x4f
  2f:	48 8b 8a f8 13 00 00 	mov    0x13f8(%rdx),%rcx
  36:	8b 92 f4 13 00 00    	mov    0x13f4(%rdx),%edx
  3c:	48 8b 01             	mov    (%rcx),%rax
  3f:	48                   	rex.W
