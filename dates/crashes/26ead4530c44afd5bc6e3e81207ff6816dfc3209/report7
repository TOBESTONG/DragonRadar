ext4 filesystem being mounted at /28/file0 supports timestamps until 2038 (0x7fffffff)
EXT4-fs (loop2): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /29/mnt supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
modprobe/3378 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880082a08a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880082a08a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 2808
hardirqs last  enabled at (2808): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (2808): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (2807): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (2807): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (2568): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (2781): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by modprobe/3378:
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: __is_insn_slot_addr+0x0/0x270
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 3378 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:rcu_read_unlock include/linux/rcupdate.h:691 [inline]
RIP: 0010:__is_insn_slot_addr+0x17b/0x270 kernel/kprobes.c:307
Code: 85 db 74 36 e8 76 7d ff ff 0f b6 1d a0 94 8d 04 bf 01 00 00 00 89 de e8 e3 74 ff ff 80 fb 01 0f 87 5d ca 96 02 e8 55 7d ff ff <83> e3 01 31 ff 89 de e8 c9 74 ff ff 84 db 74 39 e8 40 7d ff ff e8
RSP: 0018:ffff88801058f6b0 EFLAGS: 00000293
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff8146915d
RDX: ffff888008c79a00 RSI: ffffffff8146916b RDI: 0000000000000001
RBP: 0000000000000001 R08: 0000000000000000 R09: ffffffff86e5f6a7
R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000000
R13: 0000000000000000 R14: ffffffff8516fde8 R15: 0000000000000246
 is_kprobe_insn_slot include/linux/kprobes.h:307 [inline]
 kernel_text_address kernel/extable.c:149 [inline]
 kernel_text_address+0xea/0x120 kernel/extable.c:120
 __kernel_text_address+0x9/0x30 kernel/extable.c:105
 unwind_get_return_address+0x51/0x90 arch/x86/kernel/unwind_orc.c:318
 arch_stack_walk+0x99/0xf0 arch/x86/kernel/stacktrace.c:26
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track+0x1c/0x30 mm/kasan/common.c:56
 kasan_set_free_info+0x1b/0x30 mm/kasan/generic.c:355
 __kasan_slab_free+0x110/0x150 mm/kasan/common.c:422
 slab_free_hook mm/slub.c:1544 [inline]
 slab_free_freelist_hook+0x53/0x130 mm/slub.c:1577
 slab_free mm/slub.c:3142 [inline]
 kmem_cache_free+0x97/0x340 mm/slub.c:3158
 pgtable_pte_page_dtor include/linux/mm.h:2212 [inline]
 ___pte_free_tlb+0x19/0xc0 arch/x86/mm/pgtable.c:55
 __pte_free_tlb arch/x86/include/asm/pgalloc.h:61 [inline]
 free_pte_range mm/memory.c:220 [inline]
 free_pmd_range mm/memory.c:238 [inline]
 free_pud_range mm/memory.c:272 [inline]
 free_p4d_range mm/memory.c:306 [inline]
 free_pgd_range+0x7be/0x1480 mm/memory.c:386
 free_pgtables+0x209/0x2f0 mm/memory.c:418
 exit_mmap+0x28e/0x4e0 mm/mmap.c:3221
 __mmput kernel/fork.c:1079 [inline]
 mmput+0xc5/0x350 kernel/fork.c:1100
 exit_mm kernel/exit.c:486 [inline]
 do_exit+0xa5e/0x28e0 kernel/exit.c:796
 do_group_exit+0x125/0x310 kernel/exit.c:906
 __do_sys_exit_group kernel/exit.c:917 [inline]
 __se_sys_exit_group kernel/exit.c:915 [inline]
 __x64_sys_exit_group+0x3a/0x50 kernel/exit.c:915
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f2325e05c79
Code: Unable to access opcode bytes at RIP 0x7f2325e05c4f.
RSP: 002b:00007ffeb2527b68 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 00007f2325f08880 RCX: 00007f2325e05c79
RDX: 000000000000003c RSI: 00000000000000e7 RDI: 0000000000000001
RBP: 0000000000000001 R08: ffffffffffffff80 R09: 0000000000000001
R10: 0000000000000004 R11: 0000000000000246 R12: 00007f2325f08880
R13: 0000000000000001 R14: 00007f2325f0de08 R15: 0000000000000000
----------------
Code disassembly (best guess):
   0:	85 db                	test   %ebx,%ebx
   2:	74 36                	je     0x3a
   4:	e8 76 7d ff ff       	call   0xffff7d7f
   9:	0f b6 1d a0 94 8d 04 	movzbl 0x48d94a0(%rip),%ebx        # 0x48d94b0
  10:	bf 01 00 00 00       	mov    $0x1,%edi
  15:	89 de                	mov    %ebx,%esi
  17:	e8 e3 74 ff ff       	call   0xffff74ff
  1c:	80 fb 01             	cmp    $0x1,%bl
  1f:	0f 87 5d ca 96 02    	ja     0x296ca82
  25:	e8 55 7d ff ff       	call   0xffff7d7f
* 2a:	83 e3 01             	and    $0x1,%ebx <-- trapping instruction
  2d:	31 ff                	xor    %edi,%edi
  2f:	89 de                	mov    %ebx,%esi
  31:	e8 c9 74 ff ff       	call   0xffff74ff
  36:	84 db                	test   %bl,%bl
  38:	74 39                	je     0x73
  3a:	e8 40 7d ff ff       	call   0xffff7d7f
  3f:	e8                   	.byte 0xe8
