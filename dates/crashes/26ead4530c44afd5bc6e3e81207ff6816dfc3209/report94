ext4 filesystem being mounted at /22/file1 supports timestamps until 2038 (0x7fffffff)
netlink: 768 bytes leftover after parsing attributes in process `syz.3.178'.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/3032 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88801103e8a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88801103e8a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 12437796
hardirqs last  enabled at (12437796): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (12437796): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (12437795): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (12437795): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (12433018): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (12437705): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz-executor/3032:
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: path_init+0xaf1/0x17f0 fs/namei.c:2212
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 3032 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__seqprop_spinlock_sequence include/linux/seqlock.h:277 [inline]
RIP: 0010:__follow_mount_rcu fs/namei.c:1342 [inline]
RIP: 0010:handle_mounts fs/namei.c:1373 [inline]
RIP: 0010:step_into+0xe7a/0x1c90 fs/namei.c:1691
Code: 00 00 00 41 b8 01 00 00 00 31 d2 31 f6 4c 89 e7 e8 5b cb af ff 48 8b 75 08 4c 89 e7 e8 5f c4 af ff 58 e8 89 02 cb ff 41 55 9d <48> b9 00 00 00 00 00 fc ff df 49 8d 47 08 48 89 85 20 ff ff ff 48
RSP: 0018:ffff888016e9f840 EFLAGS: 00000202
RAX: 0000000000000000 RBX: ffff888016e9fc48 RCX: ffffffff817b3161
RDX: ffff888008854e00 RSI: ffffffff817b0c37 RDI: 0000000000000000
RBP: ffff888016e9f938 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000001 R12: ffff8880135a0010
R13: 0000000000000202 R14: 0000000000000200 R15: ffff8880135a0000
 walk_component+0x171/0x6a0 fs/namei.c:1867
 link_path_walk+0x6c4/0xc90 fs/namei.c:2184
 path_openat+0x1fa/0x26f0 fs/namei.c:3365
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fb4ff8ce811
Code: 75 57 89 f0 25 00 00 41 00 3d 00 00 41 00 74 49 80 3d 3a fd 18 00 00 74 6d 89 da 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 93 00 00 00 48 8b 54 24 28 64 48 2b 14 25
RSP: 002b:00007fff4a5abcd0 EFLAGS: 00000202 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fb4ff8ce811
RDX: 0000000000000000 RSI: 00007fff4a5abe00 RDI: 00000000ffffff9c
RBP: 00007fff4a5abe00 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000202 R12: 00007fff4a5acef0
R13: 00007fb4ff942a14 R14: 00005555561354a8 R15: 0000000000000006
----------------
Code disassembly (best guess):
   0:	00 00                	add    %al,(%rax)
   2:	00 41 b8             	add    %al,-0x48(%rcx)
   5:	01 00                	add    %eax,(%rax)
   7:	00 00                	add    %al,(%rax)
   9:	31 d2                	xor    %edx,%edx
   b:	31 f6                	xor    %esi,%esi
   d:	4c 89 e7             	mov    %r12,%rdi
  10:	e8 5b cb af ff       	call   0xffafcb70
  15:	48 8b 75 08          	mov    0x8(%rbp),%rsi
  19:	4c 89 e7             	mov    %r12,%rdi
  1c:	e8 5f c4 af ff       	call   0xffafc480
  21:	58                   	pop    %rax
  22:	e8 89 02 cb ff       	call   0xffcb02b0
  27:	41 55                	push   %r13
  29:	9d                   	popf
* 2a:	48 b9 00 00 00 00 00 	movabs $0xdffffc0000000000,%rcx <-- trapping instruction
  31:	fc ff df
  34:	49 8d 47 08          	lea    0x8(%r15),%rax
  38:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  3f:	48                   	rex.W
