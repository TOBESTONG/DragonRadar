EXT4-fs (loop1): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /3/file1 supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.3.17/2172 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888008a25ca8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888008a25ca8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 38306
hardirqs last  enabled at (38306): [<ffffffff84000c42>] asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
hardirqs last disabled at (38305): [<ffffffff83eb135c>] sysvec_apic_timer_interrupt+0xc/0xf0 arch/x86/kernel/apic/apic.c:1091
softirqs last  enabled at (37960): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (38091): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by syz.3.17/2172:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 2172 Comm: syz.3.17 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:pgd_offset_pgd include/linux/pgtable.h:106 [inline]
RIP: 0010:free_pgd_range+0x128/0x1480 mm/memory.c:381
Code: 00 00 00 00 fc ff df 49 8b 1f 48 8d 7b 50 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 2e 13 00 00 48 c7 c2 9c a7 ca 84 48 8b 5b 50 <48> b8 00 00 00 00 00 fc ff df 48 c1 ea 03 0f b6 14 02 48 c7 c0 9c
RSP: 0018:ffff8880168bf8f0 EFLAGS: 00000246
RAX: dffffc0000000000 RBX: ffff88800c5aa000 RCX: ffffffff81660d02
RDX: ffffffff84caa79c RSI: ffffffff81660d10 RDI: ffff88800c4fe590
RBP: 00007f28cc821fff R08: 00007ffdd8c45000 R09: 0000000000000001
R10: 00007f28cc821fff R11: 0000000000000001 R12: 00007ffdd8c45000
R13: ffff888019884800 R14: 00007f28ca600000 R15: ffff8880168bfa50
 free_pgtables+0x209/0x2f0 mm/memory.c:418
 exit_mmap+0x28e/0x4e0 mm/mmap.c:3221
 __mmput kernel/fork.c:1079 [inline]
 mmput+0xc5/0x350 kernel/fork.c:1100
 exit_mm kernel/exit.c:486 [inline]
 do_exit+0xa5e/0x28e0 kernel/exit.c:796
 do_group_exit+0x125/0x310 kernel/exit.c:906
 get_signal+0x462/0x2480 kernel/signal.c:2758
 arch_do_signal+0x88/0x1a90 arch/x86/kernel/signal.c:811
 exit_to_user_mode_loop kernel/entry/common.c:161 [inline]
 exit_to_user_mode_prepare+0xf7/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f28cbb31ef9
Code: Unable to access opcode bytes at RIP 0x7f28cbb31ecf.
RSP: 002b:00007f28ca78a038 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
RAX: 0000000000000000 RBX: 00007f28cbcea058 RCX: 00007f28cbb31ef9
RDX: 0000000020000100 RSI: 0000000020000380 RDI: 0000000000000000
RBP: 00007f28cbba4b76 R08: 0000000020000400 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f28cbcea058 R15: 00007ffdd8c652e8
syz-executor (231) used greatest stack depth: 23832 bytes left
----------------
Code disassembly (best guess), 7 bytes skipped:
   0:	49 8b 1f             	mov    (%r15),%rbx
   3:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
   7:	48 89 fa             	mov    %rdi,%rdx
   a:	48 c1 ea 03          	shr    $0x3,%rdx
   e:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
  12:	0f 85 2e 13 00 00    	jne    0x1346
  18:	48 c7 c2 9c a7 ca 84 	mov    $0xffffffff84caa79c,%rdx
  1f:	48 8b 5b 50          	mov    0x50(%rbx),%rbx
* 23:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax <-- trapping instruction
  2a:	fc ff df
  2d:	48 c1 ea 03          	shr    $0x3,%rdx
  31:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  35:	48                   	rex.W
  36:	c7                   	.byte 0xc7
  37:	c0                   	.byte 0xc0
  38:	9c                   	pushf
