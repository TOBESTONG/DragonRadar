EXT4-fs (loop3): mounted filesystem without journal. Opts: ,errors=continue
fuse: Unknown parameter 'f¹'
EXT4-fs (loop2): couldn't mount as ext3 due to feature incompatibilities
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
modprobe/4344 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888018c068a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888018c068a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 2236
hardirqs last  enabled at (2236): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (2236): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (2235): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (2235): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (74): [<ffffffff810984ea>] fpu__clear+0xda/0x260 arch/x86/kernel/fpu/core.c:378
softirqs last disabled at (2135): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by modprobe/4344:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 4344 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__sanitizer_cov_trace_pc+0x0/0x60 kernel/kcov.c:193
Code: c7 c7 80 e2 16 85 48 89 4c 24 08 48 89 04 24 e8 26 e8 c4 00 48 8b 4c 24 08 48 8b 04 24 e9 ef fd ff ff 0f 1f 84 00 00 00 00 00 <48> 8b 34 24 65 48 8b 14 25 40 ef 01 00 65 8b 05 2c e0 bb 7e a9 00
RSP: 0018:ffff888018cf7c10 EFLAGS: 00000202
RAX: 0000000000000000 RBX: 0000000000000fe0 RCX: ffffffff81761adf
RDX: 0000000000000001 RSI: ffff888008c70000 RDI: 0000000000000001
RBP: 0000000000000001 R08: 0000000000000000 R09: ffffea0000316007
R10: 0000000000000000 R11: 0000000000000001 R12: ffff88800c581120
R13: ffff88800c582100 R14: ffffea0000316000 R15: ffffea0000316000
 check_heap_object mm/usercopy.c:240 [inline]
 __check_object_size mm/usercopy.c:286 [inline]
 __check_object_size+0x386/0x440 mm/usercopy.c:256
 check_object_size include/linux/thread_info.h:119 [inline]
 strncpy_from_user+0x11e/0x490 lib/strncpy_from_user.c:137
 getname_flags.part.0+0x95/0x4f0 fs/namei.c:149
 getname_flags fs/namei.c:2647 [inline]
 user_path_at_empty+0xa1/0x100 fs/namei.c:2647
 user_path_at include/linux/namei.h:59 [inline]
 vfs_statx+0x142/0x390 fs/stat.c:185
 vfs_fstatat fs/stat.c:207 [inline]
 __do_sys_newfstatat+0x96/0x120 fs/stat.c:376
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fbfac3ace5b
Code: 00 16 00 00 00 b8 ff ff ff ff c3 0f 1f 40 00 41 89 f9 45 89 c2 89 f7 48 89 d6 48 89 ca 41 83 f9 01 77 2c b8 06 01 00 00 0f 05 <48> 3d 00 f0 ff ff 77 05 c3 0f 1f 40 00 48 8b 15 01 30 0e 00 f7 d8
RSP: 002b:00007ffc1bd3a0a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000106
RAX: ffffffffffffffda RBX: 00007ffc1bd3a150 RCX: 00007fbfac3ace5b
RDX: 00007ffc1bd3a1e0 RSI: 000055bce8f1d57b RDI: 0000000000000000
RBP: 000055bce71f4c59 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000246 R12: 000055bce8f1d4c0
R13: 000055bce8f1d57b R14: 00007ffc1bd3a140 R15: 000055bce8f1d310
----------------
Code disassembly (best guess):
   0:	c7 c7 80 e2 16 85    	mov    $0x8516e280,%edi
   6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   b:	48 89 04 24          	mov    %rax,(%rsp)
   f:	e8 26 e8 c4 00       	call   0xc4e83a
  14:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  19:	48 8b 04 24          	mov    (%rsp),%rax
  1d:	e9 ef fd ff ff       	jmp    0xfffffe11
  22:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  29:	00
* 2a:	48 8b 34 24          	mov    (%rsp),%rsi <-- trapping instruction
  2e:	65 48 8b 14 25 40 ef 	mov    %gs:0x1ef40,%rdx
  35:	01 00
  37:	65 8b 05 2c e0 bb 7e 	mov    %gs:0x7ebbe02c(%rip),%eax        # 0x7ebbe06a
  3e:	a9                   	.byte 0xa9
