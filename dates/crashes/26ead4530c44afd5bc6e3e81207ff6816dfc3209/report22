EXT4-fs (loop3): mounted filesystem without journal. Opts: nouid32,norecovery,oldalloc,nouser_xattr,noauto_da_alloc,init_itable=0x00000000000007ff,barrier,auto_da_alloc,max_dir_size_kb=0x00000000000004e1,,errors=continue
ext4 filesystem being mounted at /11/file1 supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/14204 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888008ad54a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888008ad54a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 125970
hardirqs last  enabled at (125970): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (125970): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (125969): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (125969): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (125596): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (125937): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz-executor/14204:
 #0: ffffffff85262e30 (memcg_cache_ids_sem){++++}-{3:3}, at: list_lru_destroy+0x40/0x310 mm/list_lru.c:636
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 14204 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:deref_stack_reg+0xee/0x150 arch/x86/kernel/unwind_orc.c:355
Code: 4c 89 e2 48 89 ef e8 21 46 f5 ff 41 89 c0 31 c0 45 85 c0 75 27 48 ba 00 00 00 00 00 fc ff df 48 89 d9 48 89 ef e8 12 f9 ff ff <48> c1 e9 03 80 3c 11 00 75 31 48 89 03 b8 01 00 00 00 48 83 c4 08
RSP: 0018:ffff888029acf8b8 EFLAGS: 00000283
RAX: ffff888029acff58 RBX: ffff888029acfa10 RCX: ffff888029acfa10
RDX: dffffc0000000000 RSI: ffff888029acff28 RDI: ffff888029acff28
RBP: ffff888029acff28 R08: ffffffff860a3200 R09: 0000000000000001
R10: ffffed1005359f45 R11: 0000000000000001 R12: ffff888029acf9d0
R13: ffff888029ac8000 R14: ffff888029acfa20 R15: ffff888029acf9d0
 unwind_next_frame+0xbd9/0x2640 arch/x86/kernel/unwind_orc.c:589
 arch_stack_walk+0x83/0xf0 arch/x86/kernel/stacktrace.c:25
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track+0x1c/0x30 mm/kasan/common.c:56
 kasan_set_free_info+0x1b/0x30 mm/kasan/generic.c:355
 __kasan_slab_free+0x110/0x150 mm/kasan/common.c:422
 slab_free_hook mm/slub.c:1544 [inline]
 slab_free_freelist_hook+0x53/0x130 mm/slub.c:1577
 slab_free mm/slub.c:3142 [inline]
 kfree+0xc7/0x370 mm/slub.c:4124
 __memcg_destroy_list_lru_node mm/list_lru.c:328 [inline]
 memcg_destroy_list_lru_node+0xe0/0x130 mm/list_lru.c:379
 memcg_destroy_list_lru mm/list_lru.c:469 [inline]
 list_lru_destroy+0x259/0x310 mm/list_lru.c:640
 deactivate_locked_super+0xa1/0x110 fs/super.c:342
 deactivate_super+0xad/0xd0 fs/super.c:366
 cleanup_mnt+0x3c8/0x580 fs/namespace.c:1118
 task_work_run+0xe2/0x1a0 kernel/task_work.c:151
 tracehook_notify_resume include/linux/tracehook.h:188 [inline]
 exit_to_user_mode_loop kernel/entry/common.c:164 [inline]
 exit_to_user_mode_prepare+0x155/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f3795893227
Code: a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 0f 1f 44 00 00 31 f6 e9 09 00 00 00 66 0f 1f 84 00 00 00 00 00 b8 a6 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 c7 c2 a8 ff ff ff f7 d8 64 89 02 b8
RSP: 002b:00007fff213dd838 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
RAX: 0000000000000000 RBX: 00007f3795904a14 RCX: 00007f3795893227
RDX: 0000000000000000 RSI: 0000000000000009 RDI: 00007fff213dd8f0
RBP: 00007fff213dd8f0 R08: 0000000000000000 R09: 0000000000000000
R10: 00000000ffffffff R11: 0000000000000246 R12: 00007fff213de970
R13: 00007f3795904a14 R14: 0000000000029b22 R15: 00007fff213de9b0
----------------
Code disassembly (best guess):
   0:	4c 89 e2             	mov    %r12,%rdx
   3:	48 89 ef             	mov    %rbp,%rdi
   6:	e8 21 46 f5 ff       	call   0xfff5462c
   b:	41 89 c0             	mov    %eax,%r8d
   e:	31 c0                	xor    %eax,%eax
  10:	45 85 c0             	test   %r8d,%r8d
  13:	75 27                	jne    0x3c
  15:	48 ba 00 00 00 00 00 	movabs $0xdffffc0000000000,%rdx
  1c:	fc ff df
  1f:	48 89 d9             	mov    %rbx,%rcx
  22:	48 89 ef             	mov    %rbp,%rdi
  25:	e8 12 f9 ff ff       	call   0xfffff93c
* 2a:	48 c1 e9 03          	shr    $0x3,%rcx <-- trapping instruction
  2e:	80 3c 11 00          	cmpb   $0x0,(%rcx,%rdx,1)
  32:	75 31                	jne    0x65
  34:	48 89 03             	mov    %rax,(%rbx)
  37:	b8 01 00 00 00       	mov    $0x1,%eax
  3c:	48 83 c4 08          	add    $0x8,%rsp
