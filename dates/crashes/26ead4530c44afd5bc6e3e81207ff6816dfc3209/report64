EXT4-fs (loop3): mounted filesystem without journal. Opts: noload,orlov,debug_want_extra_isize=0x000000000000002e,jqfmt=vfsv1,i_version,nomblk_io_submit,,errors=continue
perf: interrupt took too long (7836 > 7827), lowering kernel.perf_event_max_sample_rate to 25000
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.1.20/3238 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800aaa3aa8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800aaa3aa8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 71054
hardirqs last  enabled at (71054): [<ffffffff84000c42>] asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
hardirqs last disabled at (71053): [<ffffffff83eb135c>] sysvec_apic_timer_interrupt+0xc/0xf0 arch/x86/kernel/apic/apic.c:1091
softirqs last  enabled at (70572): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (70699): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by syz.1.20/3238:
 #0: ffff888008411470 (&bdev->bd_fsfreeze_mutex){+.+.}-{3:3}, at: mount_bdev+0x90/0x410 fs/super.c:1386
 #1: ffff888008d900e0 (&type->s_umount_key#21/1){+.+.}-{3:3}, at: alloc_super+0x1b4/0xac0 fs/super.c:229
 #2: ffffffff85262e30 (memcg_cache_ids_sem){++++}-{3:3}, at: __list_lru_init+0x8b/0x740 mm/list_lru.c:602
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 3238 Comm: syz.1.20 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:stack_trace_consume_entry+0xb/0x160 kernel/stacktrace.c:82
Code: 24 78 65 48 2b 0c 25 28 00 00 00 75 06 48 83 ec 80 5b c3 e8 57 33 b6 02 0f 1f 80 00 00 00 00 48 b8 00 00 00 00 00 fc ff df 55 <53> 48 89 fb 48 83 c7 10 48 89 fa 48 c1 ea 03 48 83 ec 08 0f b6 04
RSP: 0018:ffff88800b59f7f0 EFLAGS: 00000282
RAX: dffffc0000000000 RBX: ffffffff8134e860 RCX: 0000000000000000
RDX: 1ffff110016b3f09 RSI: ffffffff81781e20 RDI: ffff88800b59f8b8
RBP: ffff88800b59f888 R08: ffffffff860ee09e R09: 0000000000000001
R10: ffffed10016b3f0b R11: 0000000000000001 R12: ffff88800b59f8b8
R13: 0000000000000000 R14: ffff88800cc39a00 R15: 0000000000000020
 arch_stack_walk+0x73/0xf0 arch/x86/kernel/stacktrace.c:27
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc_trace+0x13d/0x270 mm/slub.c:2916
 kmalloc include/linux/slab.h:552 [inline]
 __memcg_init_list_lru_node+0x8b/0x1e0 mm/list_lru.c:339
 memcg_init_list_lru_node mm/list_lru.c:362 [inline]
 memcg_init_list_lru mm/list_lru.c:448 [inline]
 __list_lru_init+0x41f/0x740 mm/list_lru.c:615
 alloc_super+0x860/0xac0 fs/super.c:272
 sget+0x146/0x540 fs/super.c:613
 mount_bdev+0xf8/0x410 fs/super.c:1392
 legacy_get_tree+0x105/0x220 fs/fs_context.c:592
 vfs_get_tree+0x8e/0x360 fs/super.c:1549
 do_new_mount fs/namespace.c:2875 [inline]
 path_mount+0x1318/0x2060 fs/namespace.c:3205
 do_mount fs/namespace.c:3218 [inline]
 __do_sys_mount fs/namespace.c:3426 [inline]
 __se_sys_mount fs/namespace.c:3403 [inline]
 __x64_sys_mount+0x27e/0x300 fs/namespace.c:3403
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f05a1a3569a
Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb a6 e8 de 1a 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f05a06ace68 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 00007f05a06acef0 RCX: 00007f05a1a3569a
RDX: 0000000020000040 RSI: 0000000020000240 RDI: 00007f05a06aceb0
RBP: 0000000020000040 R08: 00007f05a06acef0 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000020000240
R13: 00007f05a06aceb0 R14: 000000000000079e R15: 00000000200001c0
EXT4-fs warning (device loop1): ext4_multi_mount_protect:385: Unable to create kmmpd thread for loop1.
----------------
Code disassembly (best guess):
   0:	24 78                	and    $0x78,%al
   2:	65 48 2b 0c 25 28 00 	sub    %gs:0x28,%rcx
   9:	00 00
   b:	75 06                	jne    0x13
   d:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
  11:	5b                   	pop    %rbx
  12:	c3                   	ret
  13:	e8 57 33 b6 02       	call   0x2b6336f
  18:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  1f:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  26:	fc ff df
  29:	55                   	push   %rbp
* 2a:	53                   	push   %rbx <-- trapping instruction
  2b:	48 89 fb             	mov    %rdi,%rbx
  2e:	48 83 c7 10          	add    $0x10,%rdi
  32:	48 89 fa             	mov    %rdi,%rdx
  35:	48 c1 ea 03          	shr    $0x3,%rdx
  39:	48 83 ec 08          	sub    $0x8,%rsp
  3d:	0f                   	.byte 0xf
  3e:	b6 04                	mov    $0x4,%dh
