EXT4-fs (loop3): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /11/file0 supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.2.272/6093 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800d2884a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800d2884a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 4244
hardirqs last  enabled at (4244): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (4244): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (4243): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (4243): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (1976): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (4187): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by syz.2.272/6093:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 6093 Comm: syz.2.272 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:put_page_testzero include/linux/mm.h:707 [inline]
RIP: 0010:__free_pages+0x4e/0x150 mm/page_alloc.c:5012
Code: 00 00 00 00 00 fc ff df 48 c1 ea 03 0f b6 14 02 48 89 e8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 e6 00 00 00 41 8b 44 24 34 <85> c0 0f 84 bc 00 00 00 be 04 00 00 00 48 89 ef e8 8d 74 06 00 f0
RSP: 0018:ffff8880115cf9c8 EFLAGS: 00000246
RAX: 0000000000000001 RBX: 00000000000000f9 RCX: ffffffff816ca4af
RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffea000066b5f4
RBP: ffffea000066b5f4 R08: 0000000000000000 R09: ffffea000066b5f7
R10: fffff940000cd6be R11: 0000000000000001 R12: ffffea000066b5c0
R13: ffffed1001f13724 R14: 0000000000000000 R15: ffffea000066b5c0
 __vunmap+0x608/0x990 mm/vmalloc.c:2270
 __vfree mm/vmalloc.c:2318 [inline]
 vfree+0x88/0x150 mm/vmalloc.c:2349
 kcov_put kernel/kcov.c:408 [inline]
 kcov_put+0x26/0x40 kernel/kcov.c:404
 kcov_close+0xc/0x10 kernel/kcov.c:510
 __fput+0x280/0x980 fs/file_table.c:281
 task_work_run+0xe2/0x1a0 kernel/task_work.c:151
 exit_task_work include/linux/task_work.h:30 [inline]
 do_exit+0xb29/0x28e0 kernel/exit.c:809
 do_group_exit+0x125/0x310 kernel/exit.c:906
 get_signal+0x462/0x2480 kernel/signal.c:2758
 arch_do_signal+0x88/0x1a90 arch/x86/kernel/signal.c:811
 exit_to_user_mode_loop kernel/entry/common.c:161 [inline]
 exit_to_user_mode_prepare+0xf7/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 ret_from_fork+0x15/0x30 arch/x86/entry/entry_64.S:289
RIP: 0033:0x7fb43d404ef9
Code: Unable to access opcode bytes at RIP 0x7fb43d404ecf.
RSP: 002b:00007fb43c07dfe8 EFLAGS: 00000246 ORIG_RAX: 0000000000000038
RAX: 0000000000000000 RBX: 00007fb43d5bcf80 RCX: 00007fb43d404ef9
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: 00007fb43d477b76 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000001 R14: 00007fb43d5bcf80 R15: 00007ffd314c0658
netlink: 'syz.3.336': attribute type 4 has an invalid length.
hpet: Lost 1 RTC interrupts
hpet: Lost 1 RTC interrupts
hpet: Lost 2 RTC interrupts
----------------
Code disassembly (best guess):
   0:	00 00                	add    %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	00 fc                	add    %bh,%ah
   6:	ff                   	lcall  (bad)
   7:	df 48 c1             	fisttps -0x3f(%rax)
   a:	ea                   	(bad)
   b:	03 0f                	add    (%rdi),%ecx
   d:	b6 14                	mov    $0x14,%dh
   f:	02 48 89             	add    -0x77(%rax),%cl
  12:	e8 83 e0 07 83       	call   0x8307e09a
  17:	c0 03 38             	rolb   $0x38,(%rbx)
  1a:	d0 7c 08 84          	sarb   $1,-0x7c(%rax,%rcx,1)
  1e:	d2 0f                	rorb   %cl,(%rdi)
  20:	85 e6                	test   %esp,%esi
  22:	00 00                	add    %al,(%rax)
  24:	00 41 8b             	add    %al,-0x75(%rcx)
  27:	44 24 34             	rex.R and $0x34,%al
* 2a:	85 c0                	test   %eax,%eax <-- trapping instruction
  2c:	0f 84 bc 00 00 00    	je     0xee
  32:	be 04 00 00 00       	mov    $0x4,%esi
  37:	48 89 ef             	mov    %rbp,%rdi
  3a:	e8 8d 74 06 00       	call   0x674cc
  3f:	f0                   	lock
