EXT4-fs (loop1): mounted filesystem without journal. Opts: inlinecrypt,jqfmt=vfsv0,,errors=continue
EXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue
netlink: 642 bytes leftover after parsing attributes in process `syz.1.214'.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/233 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888008a250a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888008a250a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 360496
hardirqs last  enabled at (360496): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (360496): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (360495): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (360495): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (360256): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (360465): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

7 locks held by syz-executor/233:
 #0: ffffffff851c5430 (dup_mmap_sem){.+.+}-{0:0}, at: dup_mmap kernel/fork.c:478 [inline]
 #0: ffffffff851c5430 (dup_mmap_sem){.+.+}-{0:0}, at: dup_mm+0x100/0x1110 kernel/fork.c:1357
 #1: ffff88801196b728 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_write_lock_killable include/linux/mmap_lock.h:26 [inline]
 #1: ffff88801196b728 (&mm->mmap_lock#2){++++}-{3:3}, at: dup_mmap kernel/fork.c:479 [inline]
 #1: ffff88801196b728 (&mm->mmap_lock#2){++++}-{3:3}, at: dup_mm+0x118/0x1110 kernel/fork.c:1357
 #2: ffff88801196dfa8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: mmap_write_lock_nested include/linux/mmap_lock.h:21 [inline]
 #2: ffff88801196dfa8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: dup_mmap kernel/fork.c:488 [inline]
 #2: ffff88801196dfa8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: dup_mm+0x159/0x1110 kernel/fork.c:1357
 #3: ffff88800813bd38 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
 #3: ffff88800813bd38 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: copy_pte_range mm/memory.c:941 [inline]
 #3: ffff88800813bd38 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: copy_pmd_range mm/memory.c:1058 [inline]
 #3: ffff88800813bd38 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: copy_pud_range mm/memory.c:1095 [inline]
 #3: ffff88800813bd38 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: copy_p4d_range mm/memory.c:1119 [inline]
 #3: ffff88800813bd38 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: copy_page_range+0xe05/0x38d0 mm/memory.c:1183
 #4: ffff888019149618 (ptlock_ptr(page)#2/1){+.+.}-{2:2}, at: copy_pte_range mm/memory.c:948 [inline]
 #4: ffff888019149618 (ptlock_ptr(page)#2/1){+.+.}-{2:2}, at: copy_pmd_range mm/memory.c:1058 [inline]
 #4: ffff888019149618 (ptlock_ptr(page)#2/1){+.+.}-{2:2}, at: copy_pud_range mm/memory.c:1095 [inline]
 #4: ffff888019149618 (ptlock_ptr(page)#2/1){+.+.}-{2:2}, at: copy_p4d_range mm/memory.c:1119 [inline]
 #4: ffff888019149618 (ptlock_ptr(page)#2/1){+.+.}-{2:2}, at: copy_page_range+0xf06/0x38d0 mm/memory.c:1183
 #5: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #6: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 233 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:get_current arch/x86/include/asm/current.h:15 [inline]
RIP: 0010:__sanitizer_cov_trace_pc+0x4/0x60 kernel/kcov.c:196
Code: 16 85 48 89 4c 24 08 48 89 04 24 e8 26 e8 c4 00 48 8b 4c 24 08 48 8b 04 24 e9 ef fd ff ff 0f 1f 84 00 00 00 00 00 48 8b 34 24 <65> 48 8b 14 25 40 ef 01 00 65 8b 05 2c e0 bb 7e a9 00 01 ff 00 74
RSP: 0018:ffff8880191c7818 EFLAGS: 00000282
RAX: 0000000000000000 RBX: 8000000016017007 RCX: ffffffff816724e9
RDX: ffff888011bece00 RSI: ffffffff816724fc RDI: 0000000000000007
RBP: ffff88801915cb58 R08: 0000000000000000 R09: ffffea00005805c7
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000008
R13: dffffc0000000000 R14: 0000000000000018 R15: 000000000000016c
 pte_clear_flags arch/x86/include/asm/pgtable.h:314 [inline]
 pte_mkold arch/x86/include/asm/pgtable.h:341 [inline]
 copy_present_pte mm/memory.c:889 [inline]
 copy_pte_range mm/memory.c:978 [inline]
 copy_pmd_range mm/memory.c:1058 [inline]
 copy_pud_range mm/memory.c:1095 [inline]
 copy_p4d_range mm/memory.c:1119 [inline]
 copy_page_range+0x121c/0x38d0 mm/memory.c:1183
 dup_mmap kernel/fork.c:593 [inline]
 dup_mm+0x8b9/0x1110 kernel/fork.c:1357
 copy_mm kernel/fork.c:1413 [inline]
 copy_process+0x2668/0x69f0 kernel/fork.c:2095
 kernel_clone+0xe7/0xa80 kernel/fork.c:2456
 __do_sys_clone+0xc8/0x110 kernel/fork.c:2573
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fd6d46e5753
Code: 1f 84 00 00 00 00 00 64 48 8b 04 25 10 00 00 00 45 31 c0 31 d2 31 f6 bf 11 00 20 01 4c 8d 90 d0 02 00 00 b8 38 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 35 89 c2 85 c0 75 2c 64 48 8b 04 25 10 00 00
RSP: 002b:00007fff1ece3028 EFLAGS: 00000246 ORIG_RAX: 0000000000000038
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fd6d46e5753
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000001200011
RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
R10: 00005555566697d0 R11: 0000000000000246 R12: 0000000000000001
R13: 000000000000e2be R14: 000000000000e263 R15: 00007fff1ece31b0
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	85 48 89             	test   %ecx,-0x77(%rax)
   3:	4c 24 08             	rex.WR and $0x8,%al
   6:	48 89 04 24          	mov    %rax,(%rsp)
   a:	e8 26 e8 c4 00       	call   0xc4e835
   f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  14:	48 8b 04 24          	mov    (%rsp),%rax
  18:	e9 ef fd ff ff       	jmp    0xfffffe0c
  1d:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  24:	00
  25:	48 8b 34 24          	mov    (%rsp),%rsi
* 29:	65 48 8b 14 25 40 ef 	mov    %gs:0x1ef40,%rdx <-- trapping instruction
  30:	01 00
  32:	65 8b 05 2c e0 bb 7e 	mov    %gs:0x7ebbe02c(%rip),%eax        # 0x7ebbe065
  39:	a9 00 01 ff 00       	test   $0xff0100,%eax
  3e:	74                   	.byte 0x74
