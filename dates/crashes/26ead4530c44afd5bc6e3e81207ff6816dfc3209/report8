ext4 filesystem being mounted at /7/file0 supports timestamps until 2038 (0x7fffffff)
EXT4-fs (loop3): 1 truncate cleaned up
EXT4-fs (loop3): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888008b466a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888008b466a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 287742
hardirqs last  enabled at (287742): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (287742): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (287741): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (287741): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (287202): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (287677): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by systemd-udevd/116:
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: rcu_read_unlock include/linux/rcupdate.h:691 [inline]
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_get_many include/linux/percpu-refcount.h:209 [inline]
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_get include/linux/percpu-refcount.h:222 [inline]
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: obj_cgroup_get include/linux/memcontrol.h:512 [inline]
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: memcg_slab_post_alloc_hook+0x1f2/0x410 mm/slab.h:343
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:rcu_read_unlock include/linux/rcupdate.h:691 [inline]
RIP: 0010:mod_objcg_state mm/slab.h:316 [inline]
RIP: 0010:memcg_slab_post_alloc_hook+0x60/0x410 mm/slab.h:345
Code: 24 14 48 85 c9 75 68 48 83 c4 28 4c 89 ef 5b 5d 41 5c 41 5d 41 5e 41 5f e9 8d fb ff ff 89 da 44 89 fe e8 33 94 02 00 41 56 9d <e8> fb 9b 78 02 85 c0 74 19 0f b6 1d 3b a2 61 04 80 fb 01 0f 87 c4
RSP: 0018:ffff88800c2479f8 EFLAGS: 00000246
RAX: 00000000000463bb RBX: 0000000000000288 RCX: 1ffffffff0bac709
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffff888008144000 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000
R13: ffff88800d33a680 R14: 0000000000000246 R15: 0000000000000006
 slab_post_alloc_hook mm/slab.h:541 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc+0x15f/0x330 mm/slub.c:2904
 kmem_cache_zalloc include/linux/slab.h:654 [inline]
 __alloc_file+0x21/0x310 fs/file_table.c:101
 alloc_empty_file+0x6d/0x170 fs/file_table.c:151
 path_openat+0x125/0x26f0 fs/namei.c:3355
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f1e30ba8342
Code: c0 f6 c2 40 75 52 89 d0 45 31 d2 25 00 00 41 00 3d 00 00 41 00 74 41 64 8b 04 25 18 00 00 00 85 c0 75 65 b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 a2 00 00 00 48 8b 4c 24 38 64 48 2b 0c 25
RSP: 002b:00007fff55df4a80 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007f1e30ba8342
RDX: 00000000002a0000 RSI: 0000562f52957891 RDI: 0000000000000010
RBP: 0000562f52957890 R08: 0000562f51caf950 R09: 00007f1e30c8bbe0
R10: 0000000000000000 R11: 0000000000000246 R12: 0000562f52986314
R13: 0000000000000010 R14: 0000000000000004 R15: 0000562f52957891
----------------
Code disassembly (best guess):
   0:	24 14                	and    $0x14,%al
   2:	48 85 c9             	test   %rcx,%rcx
   5:	75 68                	jne    0x6f
   7:	48 83 c4 28          	add    $0x28,%rsp
   b:	4c 89 ef             	mov    %r13,%rdi
   e:	5b                   	pop    %rbx
   f:	5d                   	pop    %rbp
  10:	41 5c                	pop    %r12
  12:	41 5d                	pop    %r13
  14:	41 5e                	pop    %r14
  16:	41 5f                	pop    %r15
  18:	e9 8d fb ff ff       	jmp    0xfffffbaa
  1d:	89 da                	mov    %ebx,%edx
  1f:	44 89 fe             	mov    %r15d,%esi
  22:	e8 33 94 02 00       	call   0x2945a
  27:	41 56                	push   %r14
  29:	9d                   	popf
* 2a:	e8 fb 9b 78 02       	call   0x2789c2a <-- trapping instruction
  2f:	85 c0                	test   %eax,%eax
  31:	74 19                	je     0x4c
  33:	0f b6 1d 3b a2 61 04 	movzbl 0x461a23b(%rip),%ebx        # 0x461a275
  3a:	80 fb 01             	cmp    $0x1,%bl
  3d:	0f                   	.byte 0xf
  3e:	87 c4                	xchg   %eax,%esp
