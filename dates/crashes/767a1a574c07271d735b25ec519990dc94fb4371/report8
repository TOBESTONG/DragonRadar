EXT4-fs (loop2): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /9/file1 supports timestamps until 2038 (0x7fffffff)
=============================
================================
WARNING: suspicious RCU usage
5.10.0 #1 Not tainted
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-journal/101 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800b36c8a8
-----------------------------
 (
kernel/sched/core.c:7270 Illegal context switch in RCU-bh read-side critical section!
&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 788368
hardirqs last  enabled at (788368): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (788368): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (788367): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (788367): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (784950): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (788313): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

4 locks held by systemd-journal/101:
 #0: ffff88800a7a6cb8 (kn->active#2){++++}-{0:0}, at: kernfs_fop_open+0xa8/0xdc0 fs/kernfs/file.c:625
 #1: ffffffff852e31e8 (kernfs_open_file_mutex){+.+.}-{3:3}, at: kernfs_get_open_node fs/kernfs/file.c:548 [inline]
 #1: ffffffff852e31e8 (kernfs_open_file_mutex){+.+.}-{3:3}, at: kernfs_fop_open+0x592/0xdc0 fs/kernfs/file.c:717
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: 

other info that might help us debug this:

ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 101 Comm: systemd-journal Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786

rcu_scheduler_active = 2, debug_locks = 0
no locks held by modprobe/4499.
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402

stack backtrace:
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__raw_spin_unlock_irq include/linux/spinlock_api_smp.h:169 [inline]
RIP: 0010:_raw_spin_unlock_irq+0x25/0x40 kernel/locking/spinlock.c:199
Code: 0f 1f 44 00 00 55 48 8b 74 24 08 48 89 fd 48 83 c7 18 e8 ae 1f 3e fd 48 89 ef e8 86 e2 3e fd e8 11 e6 5f fd fb bf 01 00 00 00 <e8> 86 08 34 fd 65 8b 05 ff 3d 15 7c 85 c0 74 02 5d c3 e8 bb 9c 13
RSP: 0018:ffff88800bd9f9f0 EFLAGS: 00000202
RAX: 00000000000c0757 RBX: dffffc0000000000 RCX: ffffffff812a3195
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001
RBP: ffffffff852e3240 R08: 0000000000000001 R09: ffffffff86e5f707
R10: 0000000000000001 R11: 0000000000000001 R12: ffffffff84521920
R13: ffff88800a7a6cb0 R14: 0000000000000000 R15: 0000000000000000
 spin_unlock_irq include/linux/spinlock.h:404 [inline]
 kernfs_get_open_node fs/kernfs/file.c:562 [inline]
 kernfs_fop_open+0x794/0xdc0 fs/kernfs/file.c:717
 do_dentry_open+0x650/0x1090 fs/open.c:817
 do_open fs/namei.c:3252 [inline]
 path_openat+0x196a/0x26f0 fs/namei.c:3369
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f4262613244
Code: 84 00 00 00 00 00 44 89 54 24 0c e8 46 58 f9 ff 44 8b 54 24 0c 44 89 e2 48 89 ee 41 89 c0 bf 9c ff ff ff b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 77 34 44 89 c7 89 44 24 0c e8 78 58 f9 ff 8b 44
RSP: 002b:00007ffdd82e7d30 EFLAGS: 00000293 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 000055a37e0d52f0 RCX: 00007f4262613244
RDX: 0000000000080000 RSI: 00007ffdd82e8010 RDI: 00000000ffffff9c
RBP: 00007ffdd82e8010 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000080000
R13: 000055a37e0d52f0 R14: 0000000000000001 R15: 000055a37e0dd720
CPU: 0 PID: 4499 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 ___might_sleep+0x3ed/0x4d0 kernel/sched/core.c:7270
 remove_vma+0x44/0x170 mm/mmap.c:178
 exit_mmap+0x31f/0x4e0 mm/mmap.c:3231
 __mmput kernel/fork.c:1079 [inline]
 mmput+0xc5/0x350 kernel/fork.c:1100
 exit_mm kernel/exit.c:486 [inline]
 do_exit+0xa5e/0x28e0 kernel/exit.c:796
 do_group_exit+0x125/0x310 kernel/exit.c:906
 __do_sys_exit_group kernel/exit.c:917 [inline]
 __se_sys_exit_group kernel/exit.c:915 [inline]
 __x64_sys_exit_group+0x3a/0x50 kernel/exit.c:915
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f1ba60b5c79
Code: Unable to access opcode bytes at RIP 0x7f1ba60b5c4f.
RSP: 002b:00007ffc033709b8 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 00007f1ba61b8880 RCX: 00007f1ba60b5c79
RDX: 000000000000003c RSI: 00000000000000e7 RDI: 0000000000000001
RBP: 0000000000000001 R08: ffffffffffffff80 R09: 0000000000000001
R10: 0000000000000004 R11: 0000000000000246 R12: 00007f1ba61b8880
R13: 0000000000000001 R14: 00007f1ba61bde08 R15: 0000000000000000
EXT4-fs: failed to create workqueue
EXT4-fs (loop2): mount failed
----------------
Code disassembly (best guess):
   0:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   5:	55                   	push   %rbp
   6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   b:	48 89 fd             	mov    %rdi,%rbp
   e:	48 83 c7 18          	add    $0x18,%rdi
  12:	e8 ae 1f 3e fd       	call   0xfd3e1fc5
  17:	48 89 ef             	mov    %rbp,%rdi
  1a:	e8 86 e2 3e fd       	call   0xfd3ee2a5
  1f:	e8 11 e6 5f fd       	call   0xfd5fe635
  24:	fb                   	sti
  25:	bf 01 00 00 00       	mov    $0x1,%edi
* 2a:	e8 86 08 34 fd       	call   0xfd3408b5 <-- trapping instruction
  2f:	65 8b 05 ff 3d 15 7c 	mov    %gs:0x7c153dff(%rip),%eax        # 0x7c153e35
  36:	85 c0                	test   %eax,%eax
  38:	74 02                	je     0x3c
  3a:	5d                   	pop    %rbp
  3b:	c3                   	ret
  3c:	e8                   	.byte 0xe8
  3d:	bb                   	.byte 0xbb
  3e:	9c                   	pushf
  3f:	13                   	.byte 0x13
