audit: type=1400 audit(1731313559.263:125): avc:  denied  { create } for  pid=5544 comm="syz.3.232" scontext=system_u:system_r:kernel_t:s0 tcontext=system_u:system_r:kernel_t:s0 tclass=dccp_socket permissive=1
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880169824a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880169824a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 1843470
hardirqs last  enabled at (1843470): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (1843470): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (1843469): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (1843469): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (1842438): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (1843459): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by systemd-udevd/116:
 #0: ffffffff852e21c8 (kernfs_mutex){+.+.}-{3:3}, at: kernfs_dop_revalidate+0x98/0x3a0 fs/kernfs/dir.c:563
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
syz.3.235 uses obsolete (PF_INET,SOCK_PACKET)
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:d_really_is_negative include/linux/dcache.h:472 [inline]
RIP: 0010:kernfs_dentry_node fs/kernfs/kernfs-internal.h:79 [inline]
RIP: 0010:kernfs_dop_revalidate+0xf4/0x3a0 fs/kernfs/dir.c:570
Code: c1 ea 03 80 3c 02 00 0f 85 51 02 00 00 48 b8 00 00 00 00 00 fc ff df 48 8b 5d 50 48 8d 7b 68 48 89 fa 48 c1 ea 03 80 3c 02 00 <0f> 85 38 02 00 00 48 8b 5b 68 48 85 db 74 2e e8 68 08 aa ff 48 8d
RSP: 0018:ffff888011207a18 EFLAGS: 00000246
RAX: dffffc0000000000 RBX: ffff888013d48758 RCX: ffffffff819c05fb
RDX: 1ffff110027a90f8 RSI: ffffffff819c0608 RDI: ffff888013d487c0
RBP: ffff888013d71d60 R08: 0000000000000000 R09: ffff88800cad6747
R10: 0000000000000000 R11: 0000000000000001 R12: ffff88800cad6740
R13: 0000000000000004 R14: ffff888013d48758 R15: 0000000000000000
 d_revalidate fs/namei.c:768 [inline]
 lookup_fast+0x390/0x6e0 fs/namei.c:1505
 walk_component+0xc6/0x6a0 fs/namei.c:1857
 link_path_walk+0x6c4/0xc90 fs/namei.c:2184
 path_lookupat+0x15e/0x6c0 fs/namei.c:2333
 filename_lookup+0x19f/0x560 fs/namei.c:2367
 user_path_at include/linux/namei.h:59 [inline]
 do_faccessat+0x11b/0x830 fs/open.c:423
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f64c64f05d7
Code: 77 01 c3 48 8b 15 b9 28 0e 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 15 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 8b 15 89 28 0e 00 f7 d8 64 89 02 b8
RSP: 002b:00007fff3d3214c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000015
RAX: ffffffffffffffda RBX: 00005591df68cb00 RCX: 00007f64c64f05d7
RDX: 000000000000000a RSI: 0000000000000000 RDI: 00007fff3d3214d0
RBP: 00007fff3d321550 R08: 00005591ddff26e0 R09: 00307570632f302f
R10: 0000000000000000 R11: 0000000000000246 R12: 00005591df68bd10
R13: 00007fff3d3214d0 R14: 00005591df6879d0 R15: 00005591df697230
sg_write: process 70 (syz.0.238) changed security contexts after opening file descriptor, this is not allowed.
----------------
Code disassembly (best guess):
   0:	c1 ea 03             	shr    $0x3,%edx
   3:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   7:	0f 85 51 02 00 00    	jne    0x25e
   d:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  14:	fc ff df
  17:	48 8b 5d 50          	mov    0x50(%rbp),%rbx
  1b:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
  1f:	48 89 fa             	mov    %rdi,%rdx
  22:	48 c1 ea 03          	shr    $0x3,%rdx
  26:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
* 2a:	0f 85 38 02 00 00    	jne    0x268 <-- trapping instruction
  30:	48 8b 5b 68          	mov    0x68(%rbx),%rbx
  34:	48 85 db             	test   %rbx,%rbx
  37:	74 2e                	je     0x67
  39:	e8 68 08 aa ff       	call   0xffaa08a6
  3e:	48                   	rex.W
  3f:	8d                   	.byte 0x8d
