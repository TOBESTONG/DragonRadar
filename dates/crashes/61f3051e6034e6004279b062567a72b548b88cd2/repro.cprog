// autogenerated by syzkaller (https://github.com/google/syzkaller)

#define _GNU_SOURCE

#include <endian.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/syscall.h>
#include <sys/types.h>
#include <unistd.h>

uint64_t r[1] = {0xffffffffffffffff};

int main(void)
{
  syscall(__NR_mmap, /*addr=*/0x1ffff000ul, /*len=*/0x1000ul, /*prot=*/0ul,
          /*flags=MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE*/ 0x32ul, /*fd=*/-1,
          /*offset=*/0ul);
  syscall(__NR_mmap, /*addr=*/0x20000000ul, /*len=*/0x1000000ul,
          /*prot=PROT_WRITE|PROT_READ|PROT_EXEC*/ 7ul,
          /*flags=MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE*/ 0x32ul, /*fd=*/-1,
          /*offset=*/0ul);
  syscall(__NR_mmap, /*addr=*/0x21000000ul, /*len=*/0x1000ul, /*prot=*/0ul,
          /*flags=MAP_FIXED|MAP_ANONYMOUS|MAP_PRIVATE*/ 0x32ul, /*fd=*/-1,
          /*offset=*/0ul);
  const char* reason;
  (void)reason;
  intptr_t res = 0;
  if (write(1, "executing program\n", sizeof("executing program\n") - 1)) {
  }
  res = syscall(__NR_socket, /*domain=*/0x11ul, /*type=SOCK_RAW*/ 3ul,
                /*proto=*/0x300);
  if (res != -1)
    r[0] = res;
  *(uint32_t*)0x20000340 = 0x8000;
  *(uint32_t*)0x20000344 = 6;
  *(uint32_t*)0x20000348 = 0x8000;
  *(uint32_t*)0x2000034c = 6;
  *(uint32_t*)0x20000350 = 0;
  *(uint32_t*)0x20000354 = 0;
  *(uint32_t*)0x20000358 = 0;
  syscall(__NR_setsockopt, /*fd=*/r[0], /*level=*/0x107, /*optname=*/5,
          /*optval=*/0x20000340ul, /*optlen=*/0x1cul);
  syscall(__NR_mmap, /*addr=*/0x20000000ul, /*len=*/0x30000ul,
          /*prot=PROT_WRITE*/ 2ul, /*flags=MAP_FIXED|MAP_SHARED*/ 0x11ul,
          /*fd=*/r[0], /*offset=*/0ul);
  syscall(__NR_madvise, /*addr=*/0x20000000ul, /*len=*/0x600003ul,
          /*advice=MADV_PAGEOUT*/ 0x15ul);
  return 0;
}
