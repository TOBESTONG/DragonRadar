EXT4-fs (loop2): warning: checktime reached, running e2fsck is recommended
EXT4-fs (loop2): mounted filesystem without journal. Opts: ,errors=continue
Unable to read rock-ridge attributes
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.3.38/2243 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800abdaca8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800abdaca8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 157504
hardirqs last  enabled at (157504): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (157504): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (157503): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (157503): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (156360): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (157441): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by syz.3.38/2243:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 2243 Comm: syz.3.38 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__put_user_nocheck_4+0xa/0x11
Code: 0f 01 cb 66 89 01 31 c9 0f 01 ca c3 0f 1f 44 00 00 48 bb fd ef ff ff ff 7f 00 00 48 39 d9 73 34 0f 01 cb 89 01 31 c9 0f 01 ca <c3> 66 0f 1f 44 00 00 48 bb f9 ef ff ff ff 7f 00 00 48 39 d9 73 14
RSP: 0018:ffff88801e46f9c8 EFLAGS: 00000246
RAX: 0000000000000020 RBX: ffffffff83443d70 RCX: 0000000000000000
RDX: 1ffff11003c8dfc3 RSI: ffffffff832563ca RDI: 0000000000000005
RBP: ffff88801e46fdc8 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000020223ab0
R13: 0000000020223a80 R14: 0000000000000002 R15: 0000000000000000
 ____sys_recvmsg+0x2dd/0x590 net/socket.c:2589
 ___sys_recvmsg+0x127/0x200 net/socket.c:2618
 do_recvmmsg+0x24c/0x6c0 net/socket.c:2718
 __sys_recvmmsg net/socket.c:2797 [inline]
 __do_sys_recvmmsg net/socket.c:2820 [inline]
 __se_sys_recvmmsg net/socket.c:2813 [inline]
 __x64_sys_recvmmsg+0x20b/0x260 net/socket.c:2813
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f07db1aeef9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f07d9e07038 EFLAGS: 00000246 ORIG_RAX: 000000000000012b
RAX: ffffffffffffffda RBX: 00007f07db367058 RCX: 00007f07db1aeef9
RDX: 03ffffffffffff81 RSI: 0000000020000780 RDI: 0000000000000004
RBP: 00007f07db221b76 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000002 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000001 R14: 00007f07db367058 R15: 00007ffd5a6af7c8
----------------
Code disassembly (best guess):
   0:	0f 01 cb             	stac
   3:	66 89 01             	mov    %ax,(%rcx)
   6:	31 c9                	xor    %ecx,%ecx
   8:	0f 01 ca             	clac
   b:	c3                   	ret
   c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  11:	48 bb fd ef ff ff ff 	movabs $0x7fffffffeffd,%rbx
  18:	7f 00 00
  1b:	48 39 d9             	cmp    %rbx,%rcx
  1e:	73 34                	jae    0x54
  20:	0f 01 cb             	stac
  23:	89 01                	mov    %eax,(%rcx)
  25:	31 c9                	xor    %ecx,%ecx
  27:	0f 01 ca             	clac
* 2a:	c3                   	ret <-- trapping instruction
  2b:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  31:	48 bb f9 ef ff ff ff 	movabs $0x7fffffffeff9,%rbx
  38:	7f 00 00
  3b:	48 39 d9             	cmp    %rbx,%rcx
  3e:	73 14                	jae    0x54
