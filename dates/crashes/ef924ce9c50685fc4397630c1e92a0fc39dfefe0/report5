EXT4-fs error (device loop1): ext4_readdir:243: inode #2: block 13: comm syz-executor: path /0/file0: bad entry in directory: rec_len % 4 != 0 - offset=108, inode=4294901777, rec_len=65535, name_len=9, size=1024
EXT4-fs (loop3): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
modprobe/6113 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800c9a56a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800c9a56a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 1032
hardirqs last  enabled at (1032): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (1032): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (1031): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (1031): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (560): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (999): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by modprobe/6113:
 #0: ffff8880111d3728 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_read_trylock include/linux/mmap_lock.h:56 [inline]
 #0: ffff8880111d3728 (&mm->mmap_lock#2){++++}-{3:3}, at: do_user_addr_fault+0x339/0xc40 arch/x86/mm/fault.c:1313
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: filemap_map_pages+0x17f/0xdf0 mm/filemap.c:2843
 #2: ffff88801987daf8 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
 #2: ffff88801987daf8 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: pte_alloc_one_map mm/memory.c:3688 [inline]
 #2: ffff88801987daf8 (ptlock_ptr(page)#2){+.+.}-{2:2}, at: alloc_set_pte+0xa09/0xf80 mm/memory.c:3801
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 6113 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:instrument_atomic_read include/linux/instrumented.h:71 [inline]
RIP: 0010:test_bit include/asm-generic/bitops/instrumented-non-atomic.h:134 [inline]
RIP: 0010:PageCompound include/linux/page-flags.h:199 [inline]
RIP: 0010:PageHuge+0xc/0x170 mm/hugetlb.c:1551
Code: 00 e9 42 fe ff ff 48 89 ef e8 10 91 03 00 e9 ff fd ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 41 54 55 53 48 89 fb e8 a4 60 d6 ff <be> 08 00 00 00 48 89 df e8 47 6b 03 00 48 89 da 48 b8 00 00 00 00
RSP: 0000:ffff88801a9e7c08 EFLAGS: 00000293
RAX: 0000000000000000 RBX: ffffea000010ca40 RCX: ffffffff81598030
RDX: ffff88801ad78000 RSI: ffffffff816fae1c RDI: ffffea000010ca40
RBP: ffffea000010ca74 R08: 0000000000000001 R09: ffffea000010ca77
R10: 0000000000000000 R11: 0000000000000001 R12: ffffea000010ca40
R13: ffffea000010ca48 R14: ffff88801a9e7cc8 R15: dffffc0000000000
 find_subpage include/linux/pagemap.h:446 [inline]
 filemap_map_pages+0x465/0xdf0 mm/filemap.c:2864
 do_fault_around mm/memory.c:3967 [inline]
 do_read_fault mm/memory.c:4001 [inline]
 do_fault mm/memory.c:4134 [inline]
 handle_pte_fault mm/memory.c:4374 [inline]
 __handle_mm_fault mm/memory.c:4509 [inline]
 handle_mm_fault+0x24f6/0x37e0 mm/memory.c:4607
 do_user_addr_fault+0x645/0xc40 arch/x86/mm/fault.c:1372
 handle_page_fault arch/x86/mm/fault.c:1429 [inline]
 exc_page_fault+0xa2/0x1a0 arch/x86/mm/fault.c:1485
 asm_exc_page_fault+0x1e/0x30 arch/x86/include/asm/idtentry.h:583
RIP: 0033:0x7f4f2a2892ce
Code: f6 00 10 0f 85 d3 01 00 00 48 8b 85 70 01 00 00 48 85 c0 0f 84 7b 01 00 00 48 8b 50 08 48 85 d2 0f 84 9a 05 00 00 48 03 55 00 <66> 83 3a 01 75 4f 48 89 6c 24 20 44 89 ed 4d 89 dd 4c 89 74 24 28
RSP: 002b:00007fff8ea67e30 EFLAGS: 00010202
RAX: 00007f4f2a23eda8 RBX: 0000560aad62b718 RCX: 0000000000000000
RDX: 00007f4f29f91dc8 RSI: 00007f4f2a2729c0 RDI: 0000560aad62b4dc
RBP: 00007f4f2a272510 R08: 000000000000ffff R09: 0000000000000000
R10: 00000000066d1f10 R11: 00007f4f29f7a120 R12: 0000560aad62b544
R13: 000000000000000b R14: 00007fff8ea69f99 R15: 00007f4f2a29dd30
EXT4-fs warning (device loop2): ext4_multi_mount_protect:385: Unable to create kmmpd thread for loop2.
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	e9 42 fe ff ff       	jmp    0xfffffe47
   5:	48 89 ef             	mov    %rbp,%rdi
   8:	e8 10 91 03 00       	call   0x3911d
   d:	e9 ff fd ff ff       	jmp    0xfffffe11
  12:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  19:	00 00 00 00
  1d:	41 54                	push   %r12
  1f:	55                   	push   %rbp
  20:	53                   	push   %rbx
  21:	48 89 fb             	mov    %rdi,%rbx
  24:	e8 a4 60 d6 ff       	call   0xffd660cd
* 29:	be 08 00 00 00       	mov    $0x8,%esi <-- trapping instruction
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	e8 47 6b 03 00       	call   0x36b7d
  36:	48 89 da             	mov    %rbx,%rdx
  39:	48                   	rex.W
  3a:	b8 00 00 00 00       	mov    $0x0,%eax
