EXT4-fs (loop3): mounted filesystem without journal. Opts: jqfmt=vfsold,resgid=0x000000000000ee00,bh,noload,data_err=ignore,usrjquota=,,errors=continue
EXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/127 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880194e2ca8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880194e2ca8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 13409326
hardirqs last  enabled at (13409326): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (13409326): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (13409325): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (13409325): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (13408082): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (13409265): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by systemd-udevd/127:
 #0: ffff88800ddca438 (sb_writers#8){.+.+}-{0:0}, at: do_renameat2+0x353/0xb80 fs/namei.c:4402
 #1: ffff8880107612d8 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:809 [inline]
 #1: ffff8880107612d8 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: lock_rename+0x225/0x280 fs/namei.c:2756
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: INIT_LIST_HEAD include/linux/list.h:36 [inline]
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: avc_compute_av.isra.0+0xe4/0x760 security/selinux/avc.c:1008
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 127 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:161 [inline]
RIP: 0010:_raw_spin_unlock_irqrestore+0x25/0x50 kernel/locking/spinlock.c:191
Code: fd 5d c3 66 90 55 48 89 fd 48 83 c7 18 53 48 89 f3 48 8b 74 24 10 e8 6a 1f 3e fd 48 89 ef e8 42 e2 3e fd f6 c7 02 75 1a 53 9d <bf> 01 00 00 00 e8 41 08 34 fd 65 8b 05 ba 3d 15 7c 85 c0 74 0a 5b
RSP: 0018:ffff888013c47890 EFLAGS: 00000206
RAX: 0000000000cc9bef RBX: 0000000000000206 RCX: ffffffff812a3195
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000000
RBP: ffffffff8721c1e8 R08: 0000000000000001 R09: ffffffff86e5f707
R10: 0000000000000001 R11: 0000000000000001 R12: ffffffff8721a020
R13: ffffffff87223028 R14: ffff88800ada1dd0 R15: 0000000000000122
 spin_unlock_irqrestore include/linux/spinlock.h:409 [inline]
 avc_reclaim_node security/selinux/avc.c:493 [inline]
 avc_alloc_node+0x3dc/0x560 security/selinux/avc.c:512
 avc_insert security/selinux/avc.c:629 [inline]
 avc_compute_av.isra.0+0x26a/0x760 security/selinux/avc.c:1011
 avc_has_perm_noaudit+0x3ba/0x3e0 security/selinux/avc.c:1154
 avc_has_perm+0xb1/0x1b0 security/selinux/avc.c:1189
 may_rename security/selinux/hooks.c:1881 [inline]
 selinux_inode_rename+0x2d1/0x670 security/selinux/hooks.c:2968
 security_inode_rename+0x1c8/0x2f0 security/security.c:1236
 vfs_rename+0x339/0x1960 fs/namei.c:4276
 do_renameat2+0x732/0xb80 fs/namei.c:4457
 __do_sys_rename fs/namei.c:4503 [inline]
 __se_sys_rename fs/namei.c:4501 [inline]
 __x64_sys_rename+0x5d/0x80 fs/namei.c:4501
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f3cf39f0f87
Code: e8 5e 82 09 00 85 c0 0f 95 c0 0f b6 c0 f7 d8 5d c3 66 90 b8 ff ff ff ff 5d c3 66 0f 1f 84 00 00 00 00 00 b8 52 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 8b 15 d9 8e 17 00 f7 d8 64 89 02 b8
RSP: 002b:00007ffd91f2af68 EFLAGS: 00000246 ORIG_RAX: 0000000000000052
RAX: ffffffffffffffda RBX: 0000560139011aa0 RCX: 00007f3cf39f0f87
RDX: 0000000000000000 RSI: 00007ffd91f2af70 RDI: 0000560138fdf870
RBP: 00007ffd91f2b020 R08: 0000000000000000 R09: 00007f3cf3b2b000
R10: 00007ffd91f2afd0 R11: 0000000000000246 R12: 00007ffd91f2af70
R13: 0000000000000001 R14: 0000000000000000 R15: 00007ffd91f2afb8
----------------
Code disassembly (best guess):
   0:	fd                   	std
   1:	5d                   	pop    %rbp
   2:	c3                   	ret
   3:	66 90                	xchg   %ax,%ax
   5:	55                   	push   %rbp
   6:	48 89 fd             	mov    %rdi,%rbp
   9:	48 83 c7 18          	add    $0x18,%rdi
   d:	53                   	push   %rbx
   e:	48 89 f3             	mov    %rsi,%rbx
  11:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  16:	e8 6a 1f 3e fd       	call   0xfd3e1f85
  1b:	48 89 ef             	mov    %rbp,%rdi
  1e:	e8 42 e2 3e fd       	call   0xfd3ee265
  23:	f6 c7 02             	test   $0x2,%bh
  26:	75 1a                	jne    0x42
  28:	53                   	push   %rbx
  29:	9d                   	popf
* 2a:	bf 01 00 00 00       	mov    $0x1,%edi <-- trapping instruction
  2f:	e8 41 08 34 fd       	call   0xfd340875
  34:	65 8b 05 ba 3d 15 7c 	mov    %gs:0x7c153dba(%rip),%eax        # 0x7c153df5
  3b:	85 c0                	test   %eax,%eax
  3d:	74 0a                	je     0x49
  3f:	5b                   	pop    %rbx
