EXT4-fs error (device loop0): ext4_find_dest_de:1947: inode #12: block 32: comm syz.0.32: bad entry in directory: rec_len is smaller than minimal - offset=0, inode=3, rec_len=0, name_len=0, size=2048
EXT4-fs (loop1): mounted filesystem without journal. Opts: ,errors=continue
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800d1e22a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800d1e22a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 436002
hardirqs last  enabled at (436002): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (436002): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (436001): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (436001): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (435500): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (435949): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/116:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:deref_stack_reg+0xe3/0x150 arch/x86/kernel/unwind_orc.c:355
Code: 80 3c 02 00 75 7c 49 8b 74 24 28 4c 89 e2 48 89 ef e8 21 46 f5 ff 41 89 c0 31 c0 45 85 c0 75 27 48 ba 00 00 00 00 00 fc ff df <48> 89 d9 48 89 ef e8 12 f9 ff ff 48 c1 e9 03 80 3c 11 00 75 31 48
RSP: 0018:ffff888010c1f548 EFLAGS: 00000297
RAX: ffff888010c20000 RBX: ffff888010c1f6f8 RCX: ffffffff86058e17
RDX: dffffc0000000000 RSI: ffff888010c1f740 RDI: ffff888010c1f6c0
RBP: ffff888010c1f740 R08: ffffffff86058e12 R09: ffffffff86058e16
R10: ffffed1002183ee1 R11: 0000000000000001 R12: ffff888010c1f6b0
R13: ffff888010c18000 R14: ffff888010c1f700 R15: ffff888010c1f6b0
 unwind_next_frame+0xa08/0x2640 arch/x86/kernel/unwind_orc.c:531
 __unwind_start+0x544/0x810 arch/x86/kernel/unwind_orc.c:696
 unwind_start arch/x86/include/asm/unwind.h:60 [inline]
 arch_stack_walk+0x5f/0xf0 arch/x86/kernel/stacktrace.c:24
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc+0x145/0x330 mm/slub.c:2904
 kmem_cache_zalloc include/linux/slab.h:654 [inline]
 lsm_file_alloc security/security.c:568 [inline]
 security_file_alloc+0x34/0x170 security/security.c:1456
 __alloc_file+0xb6/0x310 fs/file_table.c:106
 alloc_empty_file+0x6d/0x170 fs/file_table.c:151
 path_openat+0x125/0x26f0 fs/namei.c:3355
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_openat fs/open.c:1200 [inline]
 __se_sys_openat fs/open.c:1195 [inline]
 __x64_sys_openat+0x13f/0x1f0 fs/open.c:1195
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f41f8795342
Code: c0 f6 c2 40 75 52 89 d0 45 31 d2 25 00 00 41 00 3d 00 00 41 00 74 41 64 8b 04 25 18 00 00 00 85 c0 75 65 b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 a2 00 00 00 48 8b 4c 24 38 64 48 2b 0c 25
RSP: 002b:00007ffcf8905520 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007f41f8795342
RDX: 00000000002a0000 RSI: 0000555ae7e07521 RDI: 0000000000000010
RBP: 0000555ae7e07520 R08: 0000555ae6554950 R09: 00007f41f8878be0
R10: 0000000000000000 R11: 0000000000000246 R12: 0000555ae7e06d44
R13: 0000000000000010 R14: 0000000000000004 R15: 0000555ae7e07521
EXT4-fs error (device loop1): ext4_mb_generate_buddy:802: group 0, block bitmap and bg descriptor inconsistent: 25 vs 150994969 free clusters
----------------
Code disassembly (best guess):
   0:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   4:	75 7c                	jne    0x82
   6:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   b:	4c 89 e2             	mov    %r12,%rdx
   e:	48 89 ef             	mov    %rbp,%rdi
  11:	e8 21 46 f5 ff       	call   0xfff54637
  16:	41 89 c0             	mov    %eax,%r8d
  19:	31 c0                	xor    %eax,%eax
  1b:	45 85 c0             	test   %r8d,%r8d
  1e:	75 27                	jne    0x47
  20:	48 ba 00 00 00 00 00 	movabs $0xdffffc0000000000,%rdx
  27:	fc ff df
* 2a:	48 89 d9             	mov    %rbx,%rcx <-- trapping instruction
  2d:	48 89 ef             	mov    %rbp,%rdi
  30:	e8 12 f9 ff ff       	call   0xfffff947
  35:	48 c1 e9 03          	shr    $0x3,%rcx
  39:	80 3c 11 00          	cmpb   $0x0,(%rcx,%rdx,1)
  3d:	75 31                	jne    0x70
  3f:	48                   	rex.W
