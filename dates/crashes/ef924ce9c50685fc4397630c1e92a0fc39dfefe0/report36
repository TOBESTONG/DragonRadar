audit: type=1400 audit(1731339545.528:41): avc:  denied  { read } for  pid=2864 comm="syz.3.61" scontext=system_u:system_r:kernel_t:s0 tcontext=system_u:system_r:kernel_t:s0 tclass=perf_event permissive=1
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/2882 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880107a7ea8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880107a7ea8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 246
hardirqs last  enabled at (246): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (246): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (245): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (245): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (0): [<ffffffff8115f59c>] copy_process+0x185c/0x69f0 kernel/fork.c:2044
softirqs last disabled at (233): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

4 locks held by syz-executor/2882:
 #0: ffff88801163a438 (sb_writers#8){.+.+}-{0:0}, at: filename_create+0x104/0x490 fs/namei.c:3462
 #1: ffff88800af62340 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:809 [inline]
 #1: ffff88800af62340 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: filename_create+0x15a/0x490 fs/namei.c:3467
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 2882 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:deref_stack_reg+0x106/0x150 arch/x86/kernel/unwind_orc.c:357
Code: 00 00 00 00 fc ff df 48 89 d9 48 89 ef e8 12 f9 ff ff 48 c1 e9 03 80 3c 11 00 75 31 48 89 03 b8 01 00 00 00 48 83 c4 08 5b 5d <41> 5c 41 5d c3 e8 a0 99 60 00 e9 1f ff ff ff e8 a6 99 60 00 e9 62
RSP: 0018:ffff88800ccff718 EFLAGS: 00000282
RAX: 0000000000000001 RBX: 1ffff1100199fef0 RCX: 1ffff1100199ff0c
RDX: dffffc0000000000 RSI: ffff88800ccffb48 RDI: ffff88800ccffb48
RBP: 0000000000000001 R08: ffffffff86101fbe R09: ffffffff86101fc2
R10: ffffed100199ff0e R11: 0000000000000001 R12: ffff88800ccff818
R13: ffff88800ccf8000 R14: ffff88800ccff868 R15: ffff88800ccff818
 unwind_next_frame+0xa08/0x2640 arch/x86/kernel/unwind_orc.c:531
 arch_stack_walk+0x83/0xf0 arch/x86/kernel/stacktrace.c:25
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 __kmalloc_node+0x16c/0x330 mm/slub.c:4014
 kmalloc_node include/linux/slab.h:575 [inline]
 kvmalloc_node+0x61/0xf0 mm/util.c:575
 kvmalloc include/linux/mm.h:765 [inline]
 simple_xattr_alloc+0x43/0xa0 fs/xattr.c:917
 shmem_initxattrs+0x10c/0x220 mm/shmem.c:3247
 security_inode_init_security+0x1a7/0x350 security/security.c:1053
 shmem_symlink+0x105/0x770 mm/shmem.c:3159
 vfs_symlink fs/namei.c:3960 [inline]
 vfs_symlink+0x3a8/0x600 fs/namei.c:3946
 do_symlinkat+0x13c/0x280 fs/namei.c:3987
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f52826cc477
Code: 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 0a 01 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffcb6f6fb98 EFLAGS: 00000202 ORIG_RAX: 000000000000010a
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f52826cc477
RDX: 00007f5282741224 RSI: 00000000ffffff9c RDI: 00007ffcb6f6fc20
RBP: 00007ffcb6f6fbcc R08: 0000000000000013 R09: 00007ffcb6f6f8e7
R10: 0000000000000000 R11: 0000000000000202 R12: 0000000000000032
R13: 0000000000009732 R14: 000000000000970f R15: 00007ffcb6f6fc20
----------------
Code disassembly (best guess):
   0:	00 00                	add    %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	fc                   	cld
   5:	ff                   	lcall  (bad)
   6:	df 48 89             	fisttps -0x77(%rax)
   9:	d9 48 89             	(bad)  -0x77(%rax)
   c:	ef                   	out    %eax,(%dx)
   d:	e8 12 f9 ff ff       	call   0xfffff924
  12:	48 c1 e9 03          	shr    $0x3,%rcx
  16:	80 3c 11 00          	cmpb   $0x0,(%rcx,%rdx,1)
  1a:	75 31                	jne    0x4d
  1c:	48 89 03             	mov    %rax,(%rbx)
  1f:	b8 01 00 00 00       	mov    $0x1,%eax
  24:	48 83 c4 08          	add    $0x8,%rsp
  28:	5b                   	pop    %rbx
  29:	5d                   	pop    %rbp
* 2a:	41 5c                	pop    %r12 <-- trapping instruction
  2c:	41 5d                	pop    %r13
  2e:	c3                   	ret
  2f:	e8 a0 99 60 00       	call   0x6099d4
  34:	e9 1f ff ff ff       	jmp    0xffffff58
  39:	e8 a6 99 60 00       	call   0x6099e4
  3e:	e9                   	.byte 0xe9
  3f:	62                   	.byte 0x62
