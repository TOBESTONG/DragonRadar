EXT4-fs error (device loop3): ext4_lookup:1708: inode #2: comm syz-executor: deleted inode referenced: 15
FAT-fs (loop2): mounting with "discard" option, but the device does not support discard
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
modprobe/11612 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888021216ca8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888021216ca8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 1298
hardirqs last  enabled at (1298): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (1298): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (1297): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (1297): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (888): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (1153): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by modprobe/11612:
 #0: ffff8880117ca9a8 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_read_trylock include/linux/mmap_lock.h:56 [inline]
 #0: ffff8880117ca9a8 (&mm->mmap_lock#2){++++}-{3:3}, at: do_user_addr_fault+0x339/0xc40 arch/x86/mm/fault.c:1313
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 11612 Comm: modprobe Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:lockdep_enabled kernel/locking/lockdep.c:90 [inline]
RIP: 0010:lockdep_enabled+0x74/0xa0 kernel/locking/lockdep.c:82
Code: 00 48 8d bb 4c 09 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 0f b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 04 <84> d2 75 1b 8b 83 4c 09 00 00 85 c0 0f 94 c0 5b c3 48 c7 c7 bc 7b
RSP: 0000:ffff88801a727e38 EFLAGS: 00000202
RAX: 0000000000000007 RBX: ffff888026659a00 RCX: 1ffffffff0bacf77
RDX: 0000000000000000 RSI: 00000000ffffffff RDI: ffff88802665a34c
RBP: ffffffff850e7e40 R08: 0000000000000000 R09: ffffffff86e5f6cf
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000532
R13: 0000000000000000 R14: 00000000ffffffff R15: 0000000000000000
 lock_is_held_type+0x19/0x100 kernel/locking/lockdep.c:5469
 lock_is_held include/linux/lockdep.h:271 [inline]
 ___might_sleep+0x403/0x4d0 kernel/sched/core.c:7270
 do_user_addr_fault+0x366/0xc40 arch/x86/mm/fault.c:1330
 handle_page_fault arch/x86/mm/fault.c:1429 [inline]
 exc_page_fault+0xa2/0x1a0 arch/x86/mm/fault.c:1485
 asm_exc_page_fault+0x1e/0x30 arch/x86/include/asm/idtentry.h:583
RIP: 0033:0x7f205c2d19b2
Code: 01 00 00 49 8b 44 24 10 48 8b a5 e0 fe ff ff 48 85 c0 0f 84 87 06 00 00 49 8b 3c 24 48 01 f8 49 89 44 24 10 0f 84 82 06 00 00 <48> 8b 10 49 8d 4c 24 40 48 85 d2 0f 84 5f 01 00 00 41 b8 ff ff ff
RSP: 002b:00007ffd84f0d090 EFLAGS: 00010202
RAX: 00007f205bfa1b80 RBX: 0000000000000004 RCX: 00007f205c2e5eb2
RDX: 0000000000000003 RSI: 0000000000003680 RDI: 00007f205bdd4000
RBP: 00007ffd84f0d1e0 R08: 00000000ffffffff R09: 0000000000000000
R10: 0000000000000032 R11: 0000000000000206 R12: 00007f205c2c4a20
R13: 00007ffd84f0ce50 R14: 00007ffd84f0cf10 R15: 00007ffd84f0d270
EXT4-fs (loop2): quotafile must be on filesystem root
----------------
Code disassembly (best guess):
   0:	00 48 8d             	add    %cl,-0x73(%rax)
   3:	bb 4c 09 00 00       	mov    $0x94c,%ebx
   8:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
   f:	fc ff df
  12:	48 89 fa             	mov    %rdi,%rdx
  15:	48 c1 ea 03          	shr    $0x3,%rdx
  19:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  1d:	48 89 f8             	mov    %rdi,%rax
  20:	83 e0 07             	and    $0x7,%eax
  23:	83 c0 03             	add    $0x3,%eax
  26:	38 d0                	cmp    %dl,%al
  28:	7c 04                	jl     0x2e
* 2a:	84 d2                	test   %dl,%dl <-- trapping instruction
  2c:	75 1b                	jne    0x49
  2e:	8b 83 4c 09 00 00    	mov    0x94c(%rbx),%eax
  34:	85 c0                	test   %eax,%eax
  36:	0f 94 c0             	sete   %al
  39:	5b                   	pop    %rbx
  3a:	c3                   	ret
  3b:	48                   	rex.W
  3c:	c7                   	.byte 0xc7
  3d:	c7                   	(bad)
  3e:	bc                   	.byte 0xbc
  3f:	7b                   	.byte 0x7b
