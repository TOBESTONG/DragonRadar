blk_update_request: I/O error, dev sr0, sector 1802 op 0x1:(WRITE) flags 0x8800 phys_seg 32 prio class 0
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
blk_update_request: I/O error, dev sr0, sector 2058 op 0x1:(WRITE) flags 0xc800 phys_seg 32 prio class 0
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-journal/102 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800c8f50a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800c8f50a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 351718
hardirqs last  enabled at (351718): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (351718): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (351717): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (351717): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (351114): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (351687): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by systemd-journal/102:
 #0: ffff88800b8d22e8 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_read_trylock include/linux/mmap_lock.h:56 [inline]
 #0: ffff88800b8d22e8 (&mm->mmap_lock#2){++++}-{3:3}, at: do_user_addr_fault+0x339/0xc40 arch/x86/mm/fault.c:1313
 #1: ffff88800cf8a530 (sb_pagefaults){.+.+}-{0:0}, at: do_page_mkwrite+0x1ac/0x480 mm/memory.c:2703
 #2: ffff88800cf8e8e0 (jbd2_handle){++++}-{0:0}, at: start_this_handle+0x100a/0x1440 fs/jbd2/transaction.c:444
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 102 Comm: systemd-journal Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__sanitizer_cov_trace_const_cmp4+0x4/0x20 kernel/kcov.c:284
Code: 84 00 00 00 00 00 48 8b 0c 24 0f b7 d6 0f b7 f7 bf 03 00 00 00 e9 cc fe ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 90 48 8b 0c 24 <89> f2 89 fe bf 05 00 00 00 e9 ae fe ff ff 66 66 2e 0f 1f 84 00 00
RSP: 0000:ffff888011247850 EFLAGS: 00000246
RAX: 0000000000000001 RBX: 0000000000000001 RCX: ffffffff81b76fa0
RDX: dffffc0000000000 RSI: 0000000000000001 RDI: 0000000000000000
RBP: ffff888010b40d10 R08: 0000000000000000 R09: ffffffff85d66c0f
R10: 0000000000000000 R11: 0000000000000001 R12: 00000000ffffffa1
R13: ffff8880112479a8 R14: 0000000000000020 R15: ffff8880112479a8
 trace_ext4_fc_track_inode include/trace/events/ext4.h:2967 [inline]
 ext4_fc_track_inode+0x240/0x330 fs/ext4/fast_commit.c:494
 ext4_mark_iloc_dirty+0xd4/0x3710 fs/ext4/inode.c:5703
 __ext4_mark_inode_dirty+0x201/0x860 fs/ext4/inode.c:5906
 ext4_dirty_inode+0xf3/0x130 fs/ext4/inode.c:5942
 __mark_inode_dirty+0x893/0x11a0 fs/fs-writeback.c:2260
 generic_update_time+0x21c/0x370 fs/inode.c:1764
 update_time fs/inode.c:1777 [inline]
 file_update_time+0x463/0x550 fs/inode.c:1992
 ext4_page_mkwrite+0x32c/0x18d0 fs/ext4/inode.c:6062
 do_page_mkwrite+0x1ac/0x480 mm/memory.c:2703
 wp_page_shared mm/memory.c:3032 [inline]
 do_wp_page+0x888/0x13c0 mm/memory.c:3125
 handle_pte_fault mm/memory.c:4392 [inline]
 __handle_mm_fault mm/memory.c:4509 [inline]
 handle_mm_fault+0x1d44/0x37e0 mm/memory.c:4607
 do_user_addr_fault+0x645/0xc40 arch/x86/mm/fault.c:1372
 handle_page_fault arch/x86/mm/fault.c:1429 [inline]
 exc_page_fault+0xa2/0x1a0 arch/x86/mm/fault.c:1485
 asm_exc_page_fault+0x1e/0x30 arch/x86/include/asm/idtentry.h:583
RIP: 0033:0x7f4fa532c0be
Code: 40 38 00 00 00 00 4c 89 e8 48 f7 f1 48 8b 85 d8 00 00 00 48 c1 e2 04 48 01 d0 49 89 d5 48 8b 50 08 48 85 d2 0f 85 32 03 00 00 <4c> 89 00 48 8b 85 d8 00 00 00 4e 89 44 28 08 48 8b 85 d0 00 00 00
RSP: 002b:00007ffef6214430 EFLAGS: 00010246
RAX: 00007f4fa3c0c3a0 RBX: 0000559fa41bfb40 RCX: 000000000000acf8
RDX: 0000000000000000 RSI: 0000559fa41bfb40 RDI: 00007f4fa3d23910
RBP: 0000559fa41ae060 R08: 00000000001a38d0 R09: 00000000001a38d0
R10: 0000000000000002 R11: 0000559fa41ae060 R12: 0000000000000024
R13: 000000000008adb0 R14: 0000000000000000 R15: 00007ffef6214450
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
blk_update_request: I/O error, dev sr0, sector 2314 op 0x1:(WRITE) flags 0xc800 phys_seg 32 prio class 0
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
sr 1:0:0:0: [sr0] tag#0 unaligned transfer
----------------
Code disassembly (best guess):
   0:	84 00                	test   %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	48 8b 0c 24          	mov    (%rsp),%rcx
   a:	0f b7 d6             	movzwl %si,%edx
   d:	0f b7 f7             	movzwl %di,%esi
  10:	bf 03 00 00 00       	mov    $0x3,%edi
  15:	e9 cc fe ff ff       	jmp    0xfffffee6
  1a:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  21:	00 00 00 00
  25:	90                   	nop
  26:	48 8b 0c 24          	mov    (%rsp),%rcx
* 2a:	89 f2                	mov    %esi,%edx <-- trapping instruction
  2c:	89 fe                	mov    %edi,%esi
  2e:	bf 05 00 00 00       	mov    $0x5,%edi
  33:	e9 ae fe ff ff       	jmp    0xfffffee6
  38:	66                   	data16
  39:	66                   	data16
  3a:	2e                   	cs
  3b:	0f                   	.byte 0xf
  3c:	1f                   	(bad)
  3d:	84 00                	test   %al,(%rax)
