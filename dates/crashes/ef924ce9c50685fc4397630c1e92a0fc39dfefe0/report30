EXT4-fs (loop1): mounted filesystem without journal. Opts: errors=remount-ro,grpquota,dioread_lock,debug,noblock_validity,barrier,orlov,init_itable=0x0000000000000100,acl,
ext4 filesystem being mounted at /56/file1 supports timestamps until 2038 (0x7fffffff)
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/116 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800acf06a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800acf06a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 4874302
hardirqs last  enabled at (4874302): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (4874302): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (4874301): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (4874301): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (4873946): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (4874235): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/116:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 116 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:lockdep_enabled+0x35/0xa0 kernel/locking/lockdep.c:84
Code: 00 00 00 00 fc ff df 48 89 c1 83 e0 07 48 c1 e9 03 83 c0 03 0f b6 14 11 38 d0 7c 04 84 d2 75 5a 8b 15 db 05 ad 04 31 c0 85 d2 <74> 4c 65 8b 15 92 89 d8 7e 85 d2 75 41 65 48 8b 1c 25 40 ef 01 00
RSP: 0018:ffff88800bbafe58 EFLAGS: 00000202
RAX: 0000000000000000 RBX: 0000000000000000 RCX: 1ffffffff0bacf77
RDX: 0000000000000001 RSI: 00000000ffffffff RDI: ffffffff850e7e40
RBP: ffffffff850e7e40 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000099
R13: 0000000000000000 R14: 00000000ffffffff R15: ffff88800b763180
 lock_is_held_type+0x19/0x100 kernel/locking/lockdep.c:5469
 lock_is_held include/linux/lockdep.h:271 [inline]
 ___might_sleep+0x403/0x4d0 kernel/sched/core.c:7270
 task_work_run+0xf5/0x1a0 kernel/task_work.c:153
 tracehook_notify_resume include/linux/tracehook.h:188 [inline]
 exit_to_user_mode_loop kernel/entry/common.c:164 [inline]
 exit_to_user_mode_prepare+0x155/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f70d0b9f0f3
Code: 8b 15 d9 ae 00 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 64 8b 04 25 18 00 00 00 85 c0 75 14 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 45 c3 0f 1f 40 00 48 83 ec 18 89 7c 24 0c e8
RSP: 002b:00007ffd1a2d8738 EFLAGS: 00000246 ORIG_RAX: 0000000000000003
RAX: 0000000000000000 RBX: 00007f70d05f86c0 RCX: 00007f70d0b9f0f3
RDX: 00000000002a0000 RSI: 0000560019de3f21 RDI: 000000000000000f
RBP: 000000000000000f R08: 000056001b251ef0 R09: 00007f70d0b87be0
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000010 R14: 0000000000000000 R15: 000056001b227210
----------------
Code disassembly (best guess):
   0:	00 00                	add    %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	fc                   	cld
   5:	ff                   	lcall  (bad)
   6:	df 48 89             	fisttps -0x77(%rax)
   9:	c1 83 e0 07 48 c1 e9 	roll   $0xe9,-0x3eb7f820(%rbx)
  10:	03 83 c0 03 0f b6    	add    -0x49f0fc40(%rbx),%eax
  16:	14 11                	adc    $0x11,%al
  18:	38 d0                	cmp    %dl,%al
  1a:	7c 04                	jl     0x20
  1c:	84 d2                	test   %dl,%dl
  1e:	75 5a                	jne    0x7a
  20:	8b 15 db 05 ad 04    	mov    0x4ad05db(%rip),%edx        # 0x4ad0601
  26:	31 c0                	xor    %eax,%eax
  28:	85 d2                	test   %edx,%edx
* 2a:	74 4c                	je     0x78 <-- trapping instruction
  2c:	65 8b 15 92 89 d8 7e 	mov    %gs:0x7ed88992(%rip),%edx        # 0x7ed889c5
  33:	85 d2                	test   %edx,%edx
  35:	75 41                	jne    0x78
  37:	65 48 8b 1c 25 40 ef 	mov    %gs:0x1ef40,%rbx
  3e:	01 00
