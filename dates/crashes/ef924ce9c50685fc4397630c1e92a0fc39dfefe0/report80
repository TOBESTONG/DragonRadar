EXT4-fs error (device loop2): ext4_get_journal_inode:5233: comm syz.2.201: inode #1: comm syz.2.201: iget: illegal inode #
EXT4-fs (loop2): no journal found
netlink: 76 bytes leftover after parsing attributes in process `syz.1.204'.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/3675 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88801834a6a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88801834a6a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 140904
hardirqs last  enabled at (140904): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (140904): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (140903): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (140903): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (140526): [<ffffffff81099056>] memcpy include/linux/string.h:399 [inline]
softirqs last  enabled at (140526): [<ffffffff81099056>] fpu__copy+0x176/0x640 arch/x86/kernel/fpu/core.c:240
softirqs last disabled at (140731): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by syz-executor/3675:
 #0: ffffffff851c5430 (dup_mmap_sem){.+.+}-{0:0}, at: dup_mmap kernel/fork.c:478 [inline]
 #0: ffffffff851c5430 (dup_mmap_sem){.+.+}-{0:0}, at: dup_mm+0x100/0x1110 kernel/fork.c:1357
 #1: ffff8880196b3de8 (&mm->mmap_lock#2){++++}-{3:3}, at: mmap_write_lock_killable include/linux/mmap_lock.h:26 [inline]
 #1: ffff8880196b3de8 (&mm->mmap_lock#2){++++}-{3:3}, at: dup_mmap kernel/fork.c:479 [inline]
 #1: ffff8880196b3de8 (&mm->mmap_lock#2){++++}-{3:3}, at: dup_mm+0x118/0x1110 kernel/fork.c:1357
 #2: ffff88800ceed8e8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: mmap_write_lock_nested include/linux/mmap_lock.h:21 [inline]
 #2: ffff88800ceed8e8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: dup_mmap kernel/fork.c:488 [inline]
 #2: ffff88800ceed8e8 (&mm->mmap_lock/1){+.+.}-{3:3}, at: dup_mm+0x159/0x1110 kernel/fork.c:1357
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 3675 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:unwind_next_frame+0x9f5/0x2640 arch/x86/kernel/unwind_orc.c:529
Code: 20 4c 8b 4c 24 18 e9 a8 f9 ff ff e8 4c 9e ed ff e9 30 fb ff ff 48 8b 44 24 70 4c 89 e2 4c 89 ff 48 89 4c 24 30 4c 89 4c 24 28 <48> 8d 70 f8 4c 89 44 24 20 48 89 44 24 18 e8 a8 f4 ff ff 84 c0 0f
RSP: 0018:ffff8880185af300 EFLAGS: 00000246
RAX: ffff8880185aff58 RBX: 1ffff110030b5e6a RCX: ffffffff86420aa3
RDX: ffff8880185af430 RSI: 0000000000000001 RDI: ffff8880185af3e8
RBP: 0000000000000001 R08: ffffffff86420a9e R09: ffffffff86420aa2
R10: ffffed10030b5e88 R11: 0000000000000001 R12: ffff8880185af430
R13: ffff8880185af41d R14: ffff8880185af438 R15: ffff8880185af3e8
 arch_stack_walk+0x83/0xf0 arch/x86/kernel/stacktrace.c:25
 stack_trace_save+0x8c/0xc0 kernel/stacktrace.c:121
 kasan_save_stack+0x1b/0x40 mm/kasan/common.c:48
 kasan_set_track mm/kasan/common.c:56 [inline]
 __kasan_kmalloc.constprop.0+0xc2/0xd0 mm/kasan/common.c:461
 slab_post_alloc_hook mm/slab.h:535 [inline]
 slab_alloc_node mm/slub.c:2891 [inline]
 slab_alloc mm/slub.c:2899 [inline]
 kmem_cache_alloc+0x145/0x330 mm/slub.c:2904
 ptlock_alloc+0x1d/0x70 mm/memory.c:5228
 ptlock_init include/linux/mm.h:2176 [inline]
 pgtable_pte_page_ctor include/linux/mm.h:2203 [inline]
 __pte_alloc_one include/asm-generic/pgalloc.h:66 [inline]
 pte_alloc_one+0x68/0x1b0 arch/x86/mm/pgtable.c:33
 __pte_alloc+0x1d/0x330 mm/memory.c:428
 copy_pte_range mm/memory.c:941 [inline]
 copy_pmd_range mm/memory.c:1058 [inline]
 copy_pud_range mm/memory.c:1095 [inline]
 copy_p4d_range mm/memory.c:1119 [inline]
 copy_page_range+0x1fbf/0x38d0 mm/memory.c:1183
 dup_mmap kernel/fork.c:593 [inline]
 dup_mm+0x8b9/0x1110 kernel/fork.c:1357
 copy_mm kernel/fork.c:1413 [inline]
 copy_process+0x2668/0x69f0 kernel/fork.c:2095
 kernel_clone+0xe7/0xa80 kernel/fork.c:2456
 __do_sys_clone+0xc8/0x110 kernel/fork.c:2573
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f6f298b3753
Code: 1f 84 00 00 00 00 00 64 48 8b 04 25 10 00 00 00 45 31 c0 31 d2 31 f6 bf 11 00 20 01 4c 8d 90 d0 02 00 00 b8 38 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 35 89 c2 85 c0 75 2c 64 48 8b 04 25 10 00 00
RSP: 002b:00007fff77785188 EFLAGS: 00000246 ORIG_RAX: 0000000000000038
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f6f298b3753
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000001200011
RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
R10: 0000555556ad97d0 R11: 0000000000000246 R12: 0000000000000001
R13: 000000000000f1d5 R14: 000000000000f18e R15: 00007fff77785310
----------------
Code disassembly (best guess):
   0:	20 4c 8b 4c          	and    %cl,0x4c(%rbx,%rcx,4)
   4:	24 18                	and    $0x18,%al
   6:	e9 a8 f9 ff ff       	jmp    0xfffff9b3
   b:	e8 4c 9e ed ff       	call   0xffed9e5c
  10:	e9 30 fb ff ff       	jmp    0xfffffb45
  15:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
  1a:	4c 89 e2             	mov    %r12,%rdx
  1d:	4c 89 ff             	mov    %r15,%rdi
  20:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
  25:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
* 2a:	48 8d 70 f8          	lea    -0x8(%rax),%rsi <-- trapping instruction
  2e:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
  33:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  38:	e8 a8 f4 ff ff       	call   0xfffff4e5
  3d:	84 c0                	test   %al,%al
  3f:	0f                   	.byte 0xf
