EXT4-fs (loop1): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /14/file1 supports timestamps until 2038 (0x7fffffff)
syz.1.56 (2342) used greatest stack depth: 23352 bytes left
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/232 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800893b8a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800893b8a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 87434
hardirqs last  enabled at (87434): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (87434): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (87433): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (87433): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (87136): [<ffffffff8109c73e>] copy_kernel_to_xregs arch/x86/include/asm/fpu/internal.h:344 [inline]
softirqs last  enabled at (87136): [<ffffffff8109c73e>] __fpu__restore_sig+0xf0e/0x1690 arch/x86/kernel/fpu/signal.c:366
softirqs last disabled at (87331): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by syz-executor/232:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 232 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:arch_atomic_read arch/x86/include/asm/atomic.h:29 [inline]
RIP: 0010:atomic_read include/asm-generic/atomic-instrumented.h:28 [inline]
RIP: 0010:__fget_light+0x64/0x280 fs/file.c:901
Code: 00 4c 8b a3 88 07 00 00 be 04 00 00 00 4c 89 e7 e8 31 08 f4 ff 4c 89 e2 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 0f b6 14 02 <4c> 89 e0 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 a6 01 00 00 41
RSP: 0018:ffff8880191a7a60 EFLAGS: 00000216
RAX: dffffc0000000000 RBX: ffff888011974e00 RCX: ffffffff817f113f
RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff88800fa39a40
RBP: 0000000000000005 R08: 0000000000000000 R09: ffff88800fa39a43
R10: ffffed1001f47348 R11: 0000000000000001 R12: ffff88800fa39a40
R13: 0000000000000000 R14: ffffffff84e14600 R15: 0000000000000000
 fdget_raw include/linux/file.h:70 [inline]
 path_init+0xc23/0x17f0 fs/namei.c:2268
 path_lookupat+0x30/0x6c0 fs/namei.c:2324
 filename_lookup+0x19f/0x560 fs/namei.c:2367
 user_path_at include/linux/namei.h:59 [inline]
 vfs_statx+0x142/0x390 fs/stat.c:185
 vfs_fstatat fs/stat.c:207 [inline]
 __do_sys_newfstatat+0x96/0x120 fs/stat.c:376
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f2e360df70a
Code: 48 89 f2 b9 00 01 00 00 48 89 fe bf 9c ff ff ff e9 0b 00 00 00 66 2e 0f 1f 84 00 00 00 00 00 90 41 89 ca b8 06 01 00 00 0f 05 <3d> 00 f0 ff ff 77 07 31 c0 c3 0f 1f 40 00 48 c7 c2 a8 ff ff ff f7
RSP: 002b:00007ffd256fbaf8 EFLAGS: 00000206 ORIG_RAX: 0000000000000106
RAX: ffffffffffffffda RBX: 0000000000000005 RCX: 00007f2e360df70a
RDX: 00007ffd256fbb00 RSI: 00007f2e361895c2 RDI: 0000000000000005
RBP: 00007ffd256fbb00 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000001000 R11: 0000000000000206 R12: 00007ffd256fcd60
R13: 00007f2e36153a14 R14: 00000000000074e9 R15: 00007ffd256fde20
fuse: Unknown parameter 'fowner>00000000000000000000'
EXT4-fs (loop1): Ignoring removed bh option
EXT4-fs (loop1): Warning: mounting with an experimental mount option 'dioread_nolock' for blocksize < PAGE_SIZE
EXT4-fs (loop1): mounted filesystem without journal. Opts: quota,stripe=0x0000000000000005,min_batch_time=0x0000000000000005,bh,dioread_nolock,nombcache,,errors=continue
ext4 filesystem being mounted at /17/mnt supports timestamps until 2038 (0x7fffffff)
----------------
Code disassembly (best guess):
   0:	00 4c 8b a3          	add    %cl,-0x5d(%rbx,%rcx,4)
   4:	88 07                	mov    %al,(%rdi)
   6:	00 00                	add    %al,(%rax)
   8:	be 04 00 00 00       	mov    $0x4,%esi
   d:	4c 89 e7             	mov    %r12,%rdi
  10:	e8 31 08 f4 ff       	call   0xfff40846
  15:	4c 89 e2             	mov    %r12,%rdx
  18:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  1f:	fc ff df
  22:	48 c1 ea 03          	shr    $0x3,%rdx
  26:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
* 2a:	4c 89 e0             	mov    %r12,%rax <-- trapping instruction
  2d:	83 e0 07             	and    $0x7,%eax
  30:	83 c0 03             	add    $0x3,%eax
  33:	38 d0                	cmp    %dl,%al
  35:	7c 08                	jl     0x3f
  37:	84 d2                	test   %dl,%dl
  39:	0f 85 a6 01 00 00    	jne    0x1e5
  3f:	41                   	rex.B
