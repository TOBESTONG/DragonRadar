EXT4-fs (loop0): mounted filesystem without journal. Opts: noload,resuid=0x000000000000ee01,debug_want_extra_isize=0x000000000000002e,journal_ioprio=0x0000000000000003,errors=remount-ro,barrier=0x0000000000000001,
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/2145 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880110a6aa8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880110a6aa8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 154294
hardirqs last  enabled at (154294): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (154294): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (154293): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (154293): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (153202): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (154281): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

3 locks held by syz-executor/2145:
 #0: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: security_compute_av+0x0/0xf30
 #1: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #2: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 2145 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:avtab_search_node+0x1e1/0x450 security/selinux/ss/avtab.c:227
Code: 00 48 8b 55 00 48 98 48 8d 2c c2 48 b8 00 00 00 00 00 fc ff df 48 89 ea 48 c1 ea 03 80 3c 02 00 0f 85 12 02 00 00 4c 8b 65 00 <4d> 85 e4 0f 84 75 01 00 00 48 bd 00 00 00 00 00 fc ff df eb 42 e8
RSP: 0018:ffff888012a07870 EFLAGS: 00000246
RAX: dffffc0000000000 RBX: 000000000000010b RCX: 1ffff110019b6631
RDX: 1ffff11001b2de69 RSI: ffffffff81e7ac32 RDI: ffff888012a079fa
RBP: ffff88800d96f348 R08: 0000000000000000 R09: ffff888012a07b94
R10: 000000000000094c R11: 0000000000000001 R12: 0000000000000000
R13: 000000004a8b44e4 R14: 00000000000000fd R15: 0000000000000004
 cond_compute_av+0x55/0x340 security/selinux/ss/conditional.c:582
 context_struct_compute_av+0x81f/0x1270 security/selinux/ss/services.c:667
 security_compute_av+0x54a/0xf30 security/selinux/ss/services.c:1146
 avc_compute_av.isra.0+0x106/0x760 security/selinux/avc.c:1009
 avc_has_perm_noaudit+0x3ba/0x3e0 security/selinux/avc.c:1154
 cred_has_capability+0x155/0x2e0 security/selinux/hooks.c:1608
 security_capable+0x62/0xc0 security/security.c:781
 ns_capable_common+0xad/0x140 kernel/capability.c:375
 may_mount fs/namespace.c:1693 [inline]
 can_umount fs/namespace.c:1715 [inline]
 path_umount+0x139/0x1270 fs/namespace.c:1733
 ksys_umount fs/namespace.c:1754 [inline]
 __do_sys_umount fs/namespace.c:1759 [inline]
 __se_sys_umount fs/namespace.c:1757 [inline]
 __x64_sys_umount+0xfb/0x150 fs/namespace.c:1757
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fd4f6fc2227
Code: a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 0f 1f 44 00 00 31 f6 e9 09 00 00 00 66 0f 1f 84 00 00 00 00 00 b8 a6 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 01 c3 48 c7 c2 a8 ff ff ff f7 d8 64 89 02 b8
RSP: 002b:00007ffe991d03b8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fd4f6fc2227
RDX: 0000000000000000 RSI: 0000000000000009 RDI: 00007ffe991d0470
RBP: 00007ffe991d0470 R08: 0000000000000000 R09: 0000000000000000
R10: 00000000ffffffff R11: 0000000000000246 R12: 00007ffe991d14f0
R13: 00007fd4f7033a14 R14: 000000000000ac2f R15: 00007ffe991d1530
----------------
Code disassembly (best guess):
   0:	00 48 8b             	add    %cl,-0x75(%rax)
   3:	55                   	push   %rbp
   4:	00 48 98             	add    %cl,-0x68(%rax)
   7:	48 8d 2c c2          	lea    (%rdx,%rax,8),%rbp
   b:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  12:	fc ff df
  15:	48 89 ea             	mov    %rbp,%rdx
  18:	48 c1 ea 03          	shr    $0x3,%rdx
  1c:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
  20:	0f 85 12 02 00 00    	jne    0x238
  26:	4c 8b 65 00          	mov    0x0(%rbp),%r12
* 2a:	4d 85 e4             	test   %r12,%r12 <-- trapping instruction
  2d:	0f 84 75 01 00 00    	je     0x1a8
  33:	48 bd 00 00 00 00 00 	movabs $0xdffffc0000000000,%rbp
  3a:	fc ff df
  3d:	eb 42                	jmp    0x81
  3f:	e8                   	.byte 0xe8
