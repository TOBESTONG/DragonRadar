autofs4:pid:14008:autofs_fill_super: called with bogus options
EXT4-fs (loop0): couldn't mount as ext3 due to feature incompatibilities
netlink: 20 bytes leftover after parsing attributes in process `syz.3.816'.
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/14018 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880118300a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880118300a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 254
hardirqs last  enabled at (254): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (254): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (253): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (253): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (132): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (223): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

4 locks held by syz-executor/14018:
 #0: ffff88800a9c8438 (sb_writers#8){.+.+}-{0:0}, at: filename_create+0x104/0x490 fs/namei.c:3462
 #1: ffff888035266a58 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:809 [inline]
 #1: ffff888035266a58 (&type->i_mutex_dir_key#5/1){+.+.}-{3:3}, at: filename_create+0x15a/0x490 fs/namei.c:3467
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 14018 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:native_save_fl arch/x86/include/asm/irqflags.h:29 [inline]
RIP: 0010:arch_local_save_flags arch/x86/include/asm/irqflags.h:79 [inline]
RIP: 0010:arch_local_irq_save arch/x86/include/asm/irqflags.h:120 [inline]
RIP: 0010:debug_check_no_locks_freed+0x57/0x1a0 kernel/locking/lockdep.c:6209
Code: 8b 2c 25 40 ef 01 00 48 83 ec 10 0f b6 14 11 38 d0 7c 08 84 d2 0f 85 f8 00 00 00 8b 15 7e 70 ac 04 85 d2 0f 84 93 00 00 00 9c <41> 5e fa 49 8d bd 48 09 00 00 48 b8 00 00 00 00 00 fc ff df 48 89
RSP: 0018:ffff888034df7ca8 EFLAGS: 00000202
RAX: 0000000000000007 RBX: ffff88802dfc7850 RCX: 1ffffffff0bacf77
RDX: 0000000000000001 RSI: 0000000000000040 RDI: ffff88802dfc7850
RBP: ffffffff844cf2e0 R08: 0000000000000001 R09: ffff88802dfc7850
R10: ffffed1005bf8f2d R11: 0000000000000001 R12: ffff88802dfc7850
R13: ffff888008b4ce00 R14: ffff88802dfc7970 R15: ffff88802dfc7968
 __raw_spin_lock_init+0x1c/0x100 kernel/locking/spinlock_debug.c:23
 shmem_get_inode+0x330/0xd10 mm/shmem.c:2312
 shmem_symlink+0xdb/0x770 mm/shmem.c:3154
 vfs_symlink fs/namei.c:3960 [inline]
 vfs_symlink+0x3a8/0x600 fs/namei.c:3946
 do_symlinkat+0x13c/0x280 fs/namei.c:3987
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7ff4de226477
Code: 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 0a 01 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff821bc018 EFLAGS: 00000206 ORIG_RAX: 000000000000010a
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ff4de226477
RDX: 00007ff4de29b21b RSI: 00000000ffffff9c RDI: 00007fff821bc0a0
RBP: 00007fff821bc04c R08: 0000000000000017 R09: 00007fff821bbd67
R10: 0000000000000000 R11: 0000000000000206 R12: 0000000000000032
R13: 0000000000028ed7 R14: 0000000000028ec2 R15: 00007fff821bc0a0
----------------
Code disassembly (best guess):
   0:	8b 2c 25 40 ef 01 00 	mov    0x1ef40,%ebp
   7:	48 83 ec 10          	sub    $0x10,%rsp
   b:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   f:	38 d0                	cmp    %dl,%al
  11:	7c 08                	jl     0x1b
  13:	84 d2                	test   %dl,%dl
  15:	0f 85 f8 00 00 00    	jne    0x113
  1b:	8b 15 7e 70 ac 04    	mov    0x4ac707e(%rip),%edx        # 0x4ac709f
  21:	85 d2                	test   %edx,%edx
  23:	0f 84 93 00 00 00    	je     0xbc
  29:	9c                   	pushf
* 2a:	41 5e                	pop    %r14 <-- trapping instruction
  2c:	fa                   	cli
  2d:	49 8d bd 48 09 00 00 	lea    0x948(%r13),%rdi
  34:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  3b:	fc ff df
  3e:	48                   	rex.W
  3f:	89                   	.byte 0x89
