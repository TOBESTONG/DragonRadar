EXT4-fs error (device loop3): ext4_readdir:243: inode #2: block 16: comm syz-executor: path /15/file0: bad entry in directory: rec_len is smaller than minimal - offset=0, inode=0, rec_len=0, name_len=0, size=2048
FAT-fs (loop0): error, corrupted directory (invalid entries)
FAT-fs (loop0): error, corrupted directory (invalid entries)
9pnet: Insufficient options for proto=fd
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
systemd-udevd/117 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff888024cf0aa8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff888024cf0aa8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
netlink: 8 bytes leftover after parsing attributes in process `syz.3.444'.
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 3337042
hardirqs last  enabled at (3337042): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (3337042): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (3337041): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (3337041): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (3336636): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (3337009): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by systemd-udevd/117:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 117 Comm: systemd-udevd Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:___bpf_prog_run+0x3ce9/0x70f0 kernel/bpf/core.c:1591
Code: 38 d0 7f 08 84 c0 0f 85 3d 1f 00 00 41 0f b6 46 01 83 e0 0f 4c 8d 6c c5 00 4c 89 e8 48 c1 e8 03 80 3c 18 00 0f 85 c5 26 00 00 <41> 0f b6 46 01 4d 8b 7d 00 c0 e8 04 0f b6 c0 4c 8d 6c c5 00 4c 89
RSP: 0018:ffff888010ea7bf8 EFLAGS: 00000246
RAX: 1ffff110021d4f99 RBX: dffffc0000000000 RCX: 1ffffffff0e3d934
RDX: 0000000000000001 RSI: ffffffff8152adca RDI: ffffc900006ca061
RBP: ffff888010ea7cc8 R08: 0000000000000001 R09: 0000000000000001
R10: 0000000000000000 R11: 0000000000000001 R12: 000000007b356448
R13: ffff888010ea7cc8 R14: ffffc900006ca060 R15: ffff888010ea7cd8
 __bpf_prog_run32+0x8f/0xd0 kernel/bpf/core.c:1686
 bpf_dispatcher_nop_func include/linux/bpf.h:644 [inline]
 bpf_prog_run_pin_on_cpu include/linux/filter.h:597 [inline]
 seccomp_run_filters kernel/seccomp.c:328 [inline]
 __seccomp_filter+0x164/0x1560 kernel/seccomp.c:940
 __secure_computing+0xac/0x290 kernel/seccomp.c:1073
 syscall_trace_enter.constprop.0+0x80/0x240 kernel/entry/common.c:58
 do_syscall_64+0xf/0x40 arch/x86/entry/common.c:41
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fd68cce1342
Code: c0 f6 c2 40 75 52 89 d0 45 31 d2 25 00 00 41 00 3d 00 00 41 00 74 41 64 8b 04 25 18 00 00 00 85 c0 75 65 b8 01 01 00 00 0f 05 <48> 3d 00 f0 ff ff 0f 87 a2 00 00 00 48 8b 4c 24 38 64 48 2b 0c 25
RSP: 002b:00007fffc22f2bc0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007fd68cce1342
RDX: 00000000002a0000 RSI: 000055f661db1621 RDI: 000000000000000f
RBP: 000055f661db1620 R08: 000055f660ac7950 R09: 0073656369766564
R10: 0000000000000000 R11: 0000000000000246 R12: 000055f661ddfc56
R13: 000000000000000f R14: 0000000000000008 R15: 000055f661db1621
EXT4-fs (loop3): couldn't mount as ext3 due to feature incompatibilities
----------------
Code disassembly (best guess):
   0:	38 d0                	cmp    %dl,%al
   2:	7f 08                	jg     0xc
   4:	84 c0                	test   %al,%al
   6:	0f 85 3d 1f 00 00    	jne    0x1f49
   c:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
  11:	83 e0 0f             	and    $0xf,%eax
  14:	4c 8d 6c c5 00       	lea    0x0(%rbp,%rax,8),%r13
  19:	4c 89 e8             	mov    %r13,%rax
  1c:	48 c1 e8 03          	shr    $0x3,%rax
  20:	80 3c 18 00          	cmpb   $0x0,(%rax,%rbx,1)
  24:	0f 85 c5 26 00 00    	jne    0x26ef
* 2a:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax <-- trapping instruction
  2f:	4d 8b 7d 00          	mov    0x0(%r13),%r15
  33:	c0 e8 04             	shr    $0x4,%al
  36:	0f b6 c0             	movzbl %al,%eax
  39:	4c 8d 6c c5 00       	lea    0x0(%rbp,%rax,8),%r13
  3e:	4c                   	rex.WR
  3f:	89                   	.byte 0x89
