EXT4-fs error (device loop0) in ext4_reserve_inode_write:5740: Corrupt filesystem
EXT4-fs error (device loop0): ext4_dirty_inode:5942: inode #18: comm syz.0.200: mark_inode_dirty error
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.1.199/5357 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800d1b9ca8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800d1b9ca8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
EXT4-fs error (device loop0) in ext4_reserve_inode_write:5740: Corrupt filesystem
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 82678
hardirqs last  enabled at (82678): [<ffffffff84000c42>] asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
hardirqs last disabled at (82677): [<ffffffff83eb135c>] sysvec_apic_timer_interrupt+0xc/0xf0 arch/x86/kernel/apic/apic.c:1091
softirqs last  enabled at (81394): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (81525): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

4 locks held by syz.1.199/5357:
 #0: ffff88801fce6438 (sb_writers#3){.+.+}-{0:0}, at: open_last_lookups fs/namei.c:3165 [inline]
 #0: ffff88801fce6438 (sb_writers#3){.+.+}-{0:0}, at: path_openat+0x24cc/0x26f0 fs/namei.c:3366
 #1: ffff888013b870d0 (&type->i_mutex_dir_key#3){++++}-{3:3}, at: inode_lock include/linux/fs.h:774 [inline]
 #1: ffff888013b870d0 (&type->i_mutex_dir_key#3){++++}-{3:3}, at: open_last_lookups fs/namei.c:3175 [inline]
 #1: ffff888013b870d0 (&type->i_mutex_dir_key#3){++++}-{3:3}, at: path_openat+0x925/0x26f0 fs/namei.c:3366
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 1 PID: 5357 Comm: syz.1.199 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:___might_sleep+0x21/0x4d0 kernel/sched/core.c:7270
Code: 00 00 00 00 00 0f 1f 40 00 41 56 41 55 41 54 41 89 f4 55 48 89 fd 53 89 d3 e8 7b 4f ca 02 85 c0 74 1c 44 0f b6 2d 84 53 b3 04 <41> 80 fd 01 0f 87 a1 23 bb 02 41 83 e5 01 0f 84 80 03 00 00 e8 56
RSP: 0018:ffff88801f8cf3f0 EFLAGS: 00000202
RAX: 0000000000000001 RBX: 0000000000000000 RCX: ffffc90005e2e000
RDX: 0000000000000000 RSI: 0000000000000146 RDI: ffffffff84525240
RBP: ffffffff84525240 R08: ffff888013bffbc8 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000146
R13: 0000000000000000 R14: 0000000000000010 R15: ffff88801f8cf5a0
 __ext4_handle_dirty_metadata+0x37/0x9b0 fs/ext4/ext4_jbd2.c:326
 ext4_do_update_inode fs/ext4/inode.c:5135 [inline]
 ext4_mark_iloc_dirty+0x19bf/0x3710 fs/ext4/inode.c:5712
 __ext4_mark_inode_dirty+0x201/0x860 fs/ext4/inode.c:5906
 __ext4_new_inode+0x2b2a/0x55b0 fs/ext4/ialloc.c:1335
 ext4_create+0x2ce/0x4d0 fs/ext4/namei.c:2619
 lookup_open+0xf52/0x1330 fs/namei.c:3104
 open_last_lookups fs/namei.c:3178 [inline]
 path_openat+0x93f/0x26f0 fs/namei.c:3366
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_open fs/open.c:1192 [inline]
 __se_sys_open fs/open.c:1188 [inline]
 __x64_sys_open+0x119/0x1c0 fs/open.c:1188
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f229b86def9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f229a4e7038 EFLAGS: 00000246 ORIG_RAX: 0000000000000002
RAX: ffffffffffffffda RBX: 00007f229ba25f80 RCX: 00007f229b86def9
RDX: 0000000000000000 RSI: 0000000000064842 RDI: 00000000200005c0
RBP: 00007f229b8e0b76 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f229ba25f80 R15: 00007ffc424bec78

=============================
WARNING: suspicious RCU usage
5.10.0 #1 Not tainted
-----------------------------
kernel/sched/core.c:7270 Illegal context switch in RCU-bh read-side critical section!

other info that might help us debug this:


rcu_scheduler_active = 2, debug_locks = 0
4 locks held by syz.1.199/5357:
 #0: ffff88801fce6438 (sb_writers#3){.+.+}-{0:0}, at: open_last_lookups fs/namei.c:3165 [inline]
 #0: ffff88801fce6438 (sb_writers#3){.+.+}-{0:0}, at: path_openat+0x24cc/0x26f0 fs/namei.c:3366
 #1: ffff888013b870d0 (&type->i_mutex_dir_key#3){++++}-{3:3}, at: inode_lock include/linux/fs.h:774 [inline]
 #1: ffff888013b870d0 (&type->i_mutex_dir_key#3){++++}-{3:3}, at: open_last_lookups fs/namei.c:3175 [inline]
 #1: ffff888013b870d0 (&type->i_mutex_dir_key#3){++++}-{3:3}, at: path_openat+0x925/0x26f0 fs/namei.c:3366
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 5357 Comm: syz.1.199 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 ___might_sleep+0x3ed/0x4d0 kernel/sched/core.c:7270
 __ext4_handle_dirty_metadata+0x37/0x9b0 fs/ext4/ext4_jbd2.c:326
 ext4_do_update_inode fs/ext4/inode.c:5135 [inline]
 ext4_mark_iloc_dirty+0x19bf/0x3710 fs/ext4/inode.c:5712
 __ext4_mark_inode_dirty+0x201/0x860 fs/ext4/inode.c:5906
 __ext4_new_inode+0x2b2a/0x55b0 fs/ext4/ialloc.c:1335
 ext4_create+0x2ce/0x4d0 fs/ext4/namei.c:2619
 lookup_open+0xf52/0x1330 fs/namei.c:3104
 open_last_lookups fs/namei.c:3178 [inline]
 path_openat+0x93f/0x26f0 fs/namei.c:3366
 do_filp_open+0x17e/0x3c0 fs/namei.c:3396
 do_sys_openat2+0x16d/0x420 fs/open.c:1168
 do_sys_open fs/open.c:1184 [inline]
 __do_sys_open fs/open.c:1192 [inline]
 __se_sys_open fs/open.c:1188 [inline]
 __x64_sys_open+0x119/0x1c0 fs/open.c:1188
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f229b86def9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f229a4e7038 EFLAGS: 00000246 ORIG_RAX: 0000000000000002
RAX: ffffffffffffffda RBX: 00007f229ba25f80 RCX: 00007f229b86def9
RDX: 0000000000000000 RSI: 0000000000064842 RDI: 00000000200005c0
RBP: 00007f229b8e0b76 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f229ba25f80 R15: 00007ffc424bec78
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	00 00                	add    %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	0f 1f 40 00          	nopl   0x0(%rax)
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	41 54                	push   %r12
   e:	41 89 f4             	mov    %esi,%r12d
  11:	55                   	push   %rbp
  12:	48 89 fd             	mov    %rdi,%rbp
  15:	53                   	push   %rbx
  16:	89 d3                	mov    %edx,%ebx
  18:	e8 7b 4f ca 02       	call   0x2ca4f98
  1d:	85 c0                	test   %eax,%eax
  1f:	74 1c                	je     0x3d
  21:	44 0f b6 2d 84 53 b3 	movzbl 0x4b35384(%rip),%r13d        # 0x4b353ad
  28:	04
* 29:	41 80 fd 01          	cmp    $0x1,%r13b <-- trapping instruction
  2d:	0f 87 a1 23 bb 02    	ja     0x2bb23d4
  33:	41 83 e5 01          	and    $0x1,%r13d
  37:	0f 84 80 03 00 00    	je     0x3bd
  3d:	e8                   	.byte 0xe8
  3e:	56                   	push   %rsi
