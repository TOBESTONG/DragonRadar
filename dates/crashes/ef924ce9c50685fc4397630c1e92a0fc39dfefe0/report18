EXT4-fs (loop1): write access will be enabled during recovery
EXT4-fs (loop1): barriers disabled
JBD2: no valid journal superblock found
EXT4-fs (loop1): error loading journal
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.3.233/5049 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800dfea2a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800dfea2a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 86374
hardirqs last  enabled at (86374): [<ffffffff84000c42>] asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
hardirqs last disabled at (86373): [<ffffffff83eb135c>] sysvec_apic_timer_interrupt+0xc/0xf0 arch/x86/kernel/apic/apic.c:1091
softirqs last  enabled at (83624): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (85797): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

5 locks held by syz.3.233/5049:
 #0: ffff888008132438 (sb_writers#8){.+.+}-{0:0}, at: ksys_write+0x12d/0x250 fs/read_write.c:658
 #1: ffff888017fe87e8 (&sb->s_type->i_mutex_key#12){+.+.}-{3:3}, at: inode_lock include/linux/fs.h:774 [inline]
 #1: ffff888017fe87e8 (&sb->s_type->i_mutex_key#12){+.+.}-{3:3}, at: generic_file_write_iter+0x8a/0x220 mm/filemap.c:3487
 #2: ffffffff852321c0 (fs_reclaim){+.+.}-{0:0}, at: __need_fs_reclaim mm/page_alloc.c:4283 [inline]
 #2: ffffffff852321c0 (fs_reclaim){+.+.}-{0:0}, at: fs_reclaim_acquire+0xa1/0xf0 mm/page_alloc.c:4301
 #3: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #4: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 5049 Comm: syz.3.233 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:trace_lock_release include/trace/events/lock.h:58 [inline]
RIP: 0010:lock_release+0x46d/0x6f0 kernel/locking/lockdep.c:5448
Code: 05 28 1a d7 7e 48 8b 1d a1 8c a9 04 48 85 db 74 30 48 b8 00 00 00 00 00 fc ff df 48 8d 7b 08 48 89 fa 48 c1 ea 03 80 3c 02 00 <0f> 85 40 02 00 00 48 8b 7b 08 48 8b 54 24 08 4c 89 e6 e8 8c d2 fe
RSP: 0018:ffff888018147690 EFLAGS: 00000246
RAX: dffffc0000000000 RBX: ffff88800d31ec10 RCX: ffffffff812ad4c3
RDX: 1ffff11001a63d83 RSI: 0000000000000008 RDI: ffff88800d31ec18
RBP: 1ffff11003028ed4 R08: 0000000000000000 R09: ffffffff85d66c0f
R10: fffffbfff0bacd81 R11: 0000000000000001 R12: ffffffff852321c0
R13: 0000000000000000 R14: 0000000000000001 R15: 0000000000100cca
 prepare_alloc_pages mm/page_alloc.c:4890 [inline]
 __alloc_pages_nodemask+0x16c/0x6a0 mm/page_alloc.c:4936
 alloc_pages_vma+0xbb/0x490 mm/mempolicy.c:2234
 shmem_alloc_page+0x10f/0x1e0 mm/shmem.c:1565
 shmem_alloc_and_acct_page mm/shmem.c:1590 [inline]
 shmem_getpage_gfp.constprop.0+0x515/0x19a0 mm/shmem.c:1893
 shmem_getpage mm/shmem.c:155 [inline]
 shmem_write_begin+0xf7/0x1d0 mm/shmem.c:2533
 generic_perform_write+0x1fe/0x4d0 mm/filemap.c:3329
 __generic_file_write_iter+0x399/0x5d0 mm/filemap.c:3458
 generic_file_write_iter+0xd7/0x220 mm/filemap.c:3490
 call_write_iter include/linux/fs.h:1903 [inline]
 new_sync_write+0x42c/0x670 fs/read_write.c:518
 vfs_write+0x81b/0xac0 fs/read_write.c:605
 ksys_write+0x12d/0x250 fs/read_write.c:658
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f1c235fd9df
Code: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 c9 8d 02 00 48 8b 54 24 18 48 8b 74 24 10 41 89 c0 8b 7c 24 08 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 31 44 89 c7 48 89 44 24 08 e8 1c 8e 02 00 48
RSP: 002b:00007f1c22277df0 EFLAGS: 00000293 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 0000000000400000 RCX: 00007f1c235fd9df
RDX: 0000000000400000 RSI: 00007f1c19e37000 RDI: 0000000000000006
RBP: 0000000000000000 R08: 0000000000000000 R09: 00000000000011e4
R10: 0000000000000002 R11: 0000000000000293 R12: 0000000000000006
R13: 00007f1c22277ef0 R14: 00007f1c22277eb0 R15: 00007f1c19e37000
EXT4-fs (loop1): ext4_check_descriptors: Block bitmap for group 0 overlaps superblock
EXT4-fs (loop1): ext4_check_descriptors: Checksum for group 0 failed (4996!=20869)
EXT4-fs (loop1): INFO: recovery required on readonly filesystem
EXT4-fs (loop1): write access will be enabled during recovery
EXT4-fs (loop1): barriers disabled
JBD2: no valid journal superblock found
EXT4-fs (loop1): error loading journal
----------------
Code disassembly (best guess):
   0:	05 28 1a d7 7e       	add    $0x7ed71a28,%eax
   5:	48 8b 1d a1 8c a9 04 	mov    0x4a98ca1(%rip),%rbx        # 0x4a98cad
   c:	48 85 db             	test   %rbx,%rbx
   f:	74 30                	je     0x41
  11:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  18:	fc ff df
  1b:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  1f:	48 89 fa             	mov    %rdi,%rdx
  22:	48 c1 ea 03          	shr    $0x3,%rdx
  26:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
* 2a:	0f 85 40 02 00 00    	jne    0x270 <-- trapping instruction
  30:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  34:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  39:	4c 89 e6             	mov    %r12,%rsi
  3c:	e8                   	.byte 0xe8
  3d:	8c d2                	mov    %ss,%edx
  3f:	fe                   	.byte 0xfe
