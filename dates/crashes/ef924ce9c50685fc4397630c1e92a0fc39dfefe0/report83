IPv6: RTM_NEWROUTE with no NLM_F_CREATE or NLM_F_REPLACE
IPv6: NLM_F_CREATE should be set when creating new route
IPv6: NLM_F_CREATE should be set when creating new route
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz-executor/3632 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff88800c613aa8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff88800c613aa8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 13314
hardirqs last  enabled at (13314): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (13314): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (13313): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (13313): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (13138): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (13255): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

2 locks held by syz-executor/3632:
 #0: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #1: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 3632 Comm: syz-executor Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:bytes_is_nonzero mm/kasan/generic.c:91 [inline]
RIP: 0010:memory_is_nonzero mm/kasan/generic.c:108 [inline]
RIP: 0010:memory_is_poisoned_n mm/kasan/generic.c:134 [inline]
RIP: 0010:memory_is_poisoned mm/kasan/generic.c:165 [inline]
RIP: 0010:check_memory_region_inline mm/kasan/generic.c:183 [inline]
RIP: 0010:check_memory_region+0x18c/0x1e0 mm/kasan/generic.c:192
Code: 07 49 39 c1 7d 89 41 bb 01 00 00 00 5b 5d 44 89 d8 41 5c c3 48 85 d2 74 ed 48 01 ea eb 09 48 83 c0 01 48 39 d0 74 df 80 38 00 <74> f2 e9 34 ff ff ff 48 29 c3 48 89 da 49 89 d3 49 c1 fb 3f 49 c1
RSP: 0018:ffff888012de78b0 EFLAGS: 00000246
RAX: fffff940000c551e RBX: fffff940000c551f RCX: ffffffff815c909d
RDX: fffff940000c551f RSI: 0000000000000004 RDI: ffffea000062a8f4
RBP: fffff940000c551e R08: 0000000000000001 R09: ffffea000062a8f7
R10: fffff940000c551e R11: 0000000000000001 R12: ffffea000062a8f4
R13: dffffc0000000000 R14: ffff888011132798 R15: ffffea000062a8c0
 instrument_atomic_read_write include/linux/instrumented.h:101 [inline]
 atomic_dec_and_test include/asm-generic/atomic-instrumented.h:748 [inline]
 page_ref_dec_and_test include/linux/page_ref.h:148 [inline]
 put_page_testzero include/linux/mm.h:708 [inline]
 release_pages+0x15d/0xc40 mm/swap.c:914
 tlb_batch_pages_flush mm/mmu_gather.c:49 [inline]
 tlb_flush_mmu_free mm/mmu_gather.c:242 [inline]
 tlb_flush_mmu+0x8d/0x620 mm/mmu_gather.c:249
 tlb_finish_mmu+0x93/0x230 mm/mmu_gather.c:328
 exit_mmap+0x29f/0x4e0 mm/mmap.c:3222
 __mmput kernel/fork.c:1079 [inline]
 mmput+0xc5/0x350 kernel/fork.c:1100
 exit_mm kernel/exit.c:486 [inline]
 do_exit+0xa5e/0x28e0 kernel/exit.c:796
 do_group_exit+0x125/0x310 kernel/exit.c:906
 get_signal+0x462/0x2480 kernel/signal.c:2758
 arch_do_signal+0x88/0x1a90 arch/x86/kernel/signal.c:811
 exit_to_user_mode_loop kernel/entry/common.c:161 [inline]
 exit_to_user_mode_prepare+0xf7/0x160 kernel/entry/common.c:191
 syscall_exit_to_user_mode+0x3d/0x270 kernel/entry/common.c:266
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7f17a04b6113
Code: Unable to access opcode bytes at RIP 0x7f17a04b60e9.
RSP: 002b:00007fff32858218 EFLAGS: 00000202 ORIG_RAX: 000000000000003d
RAX: fffffffffffffe00 RBX: 0000000000000e32 RCX: 00007f17a04b6113
RDX: 0000000040000000 RSI: 00007fff3285822c RDI: 00000000ffffffff
RBP: 00007fff3285822c R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000202 R12: 000000000000000c
R13: 0000000000000003 R14: 0000000000000009 R15: 0000000000000000
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	49 39 c1             	cmp    %rax,%r9
   3:	7d 89                	jge    0xffffff8e
   5:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   b:	5b                   	pop    %rbx
   c:	5d                   	pop    %rbp
   d:	44 89 d8             	mov    %r11d,%eax
  10:	41 5c                	pop    %r12
  12:	c3                   	ret
  13:	48 85 d2             	test   %rdx,%rdx
  16:	74 ed                	je     0x5
  18:	48 01 ea             	add    %rbp,%rdx
  1b:	eb 09                	jmp    0x26
  1d:	48 83 c0 01          	add    $0x1,%rax
  21:	48 39 d0             	cmp    %rdx,%rax
  24:	74 df                	je     0x5
  26:	80 38 00             	cmpb   $0x0,(%rax)
* 29:	74 f2                	je     0x1d <-- trapping instruction
  2b:	e9 34 ff ff ff       	jmp    0xffffff64
  30:	48 29 c3             	sub    %rax,%rbx
  33:	48 89 da             	mov    %rbx,%rdx
  36:	49 89 d3             	mov    %rdx,%r11
  39:	49 c1 fb 3f          	sar    $0x3f,%r11
  3d:	49                   	rex.WB
  3e:	c1                   	.byte 0xc1
