EXT4-fs error (device loop3): ext4_xattr_inode_iget:392: comm syz.3.660: error while reading EA inode 1 err=-117
EXT4-fs error (device loop3): ext4_xattr_inode_iget:389: comm syz.3.660: inode #1: comm syz.3.660: iget: illegal inode #
================================
WARNING: inconsistent lock state
5.10.0 #1 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
syz.3.660/13956 [HC0[0]:SC1[1]:HE1:SE0] takes:
ffff8880197fc0a8 (&file_data->lock){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:354 [inline]
ffff8880197fc0a8 (&file_data->lock){+.?.}-{2:2}, at: io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
{SOFTIRQ-ON-W} state was registered at:
  lock_acquire kernel/locking/lockdep.c:5437 [inline]
  lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
  __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
  _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
  spin_lock include/linux/spinlock.h:354 [inline]
  io_sqe_files_register fs/io_uring.c:7496 [inline]
  __io_uring_register fs/io_uring.c:9665 [inline]
  __do_sys_io_uring_register+0x3447/0x40a0 fs/io_uring.c:9755
  do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
  entry_SYSCALL_64_after_hwframe+0x44/0xa9
irq event stamp: 2518
hardirqs last  enabled at (2518): [<ffffffff83ecb152>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
hardirqs last  enabled at (2518): [<ffffffff83ecb152>] _raw_spin_unlock_irqrestore+0x42/0x50 kernel/locking/spinlock.c:191
hardirqs last disabled at (2517): [<ffffffff83ecaf1e>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
hardirqs last disabled at (2517): [<ffffffff83ecaf1e>] _raw_spin_lock_irqsave+0x4e/0x50 kernel/locking/spinlock.c:159
softirqs last  enabled at (2412): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20
softirqs last disabled at (2427): [<ffffffff84000f92>] asm_call_irq_on_stack+0x12/0x20

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&file_data->lock);
  <Interrupt>
    lock(&file_data->lock);

 *** DEADLOCK ***

4 locks held by syz.3.660/13956:
 #0: ffff88801659e0e0 (&type->s_umount_key#21/1){+.+.}-{3:3}, at: alloc_super+0x1b4/0xac0 fs/super.c:229
 #1: ffff88801659e628 (sb_internal){.+.+}-{0:0}, at: evict+0x284/0x6d0 fs/inode.c:578
 #2: ffffffff850e7de0 (rcu_callback){....}-{0:0}, at: rcu_do_batch+0x415/0x1440 kernel/rcu/tree.c:2466
 #3: ffffffff850e7f00 (rcu_read_lock){....}-{1:2}, at: percpu_ref_put_many.constprop.0+0x0/0x2a0

stack backtrace:
CPU: 0 PID: 13956 Comm: syz.3.660 Not tainted 5.10.0 #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x107/0x163 lib/dump_stack.c:118
 print_usage_bug kernel/locking/lockdep.c:4413 [inline]
 valid_state kernel/locking/lockdep.c:3751 [inline]
 mark_lock_irq kernel/locking/lockdep.c:3954 [inline]
 mark_lock.cold+0x65/0x90 kernel/locking/lockdep.c:4411
 mark_usage kernel/locking/lockdep.c:4306 [inline]
 __lock_acquire+0x11c2/0x5ca0 kernel/locking/lockdep.c:4786
 lock_acquire kernel/locking/lockdep.c:5437 [inline]
 lock_acquire+0x293/0x9b0 kernel/locking/lockdep.c:5402
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:354 [inline]
 io_file_data_ref_zero+0x75/0x450 fs/io_uring.c:7361
 percpu_ref_put_many.constprop.0+0x262/0x2a0 include/linux/percpu-refcount.h:322
 rcu_do_batch+0x496/0x1440 kernel/rcu/tree.c:2476
 rcu_core+0x62d/0x9d0 kernel/rcu/tree.c:2711
 __do_softirq+0x295/0xa3f kernel/softirq.c:298
 asm_call_irq_on_stack+0x12/0x20
 </IRQ>
 __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]
 run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]
 do_softirq_own_stack+0xaa/0xd0 arch/x86/kernel/irq_64.c:77
 invoke_softirq kernel/softirq.c:393 [inline]
 __irq_exit_rcu+0x1e5/0x220 kernel/softirq.c:423
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:435
 sysvec_apic_timer_interrupt+0x48/0xf0 arch/x86/kernel/apic/apic.c:1091
 asm_sysvec_apic_timer_interrupt+0x12/0x20 arch/x86/include/asm/idtentry.h:631
RIP: 0010:__raw_spin_unlock_irq include/linux/spinlock_api_smp.h:169 [inline]
RIP: 0010:_raw_spin_unlock_irq+0x25/0x40 kernel/locking/spinlock.c:199
Code: 0f 1f 44 00 00 55 48 8b 74 24 08 48 89 fd 48 83 c7 18 e8 ae 1f 3e fd 48 89 ef e8 86 e2 3e fd e8 11 e6 5f fd fb bf 01 00 00 00 <e8> 86 08 34 fd 65 8b 05 ff 3d 15 7c 85 c0 74 02 5d c3 e8 bb 9c 13
RSP: 0018:ffff88800c2ff050 EFLAGS: 00000202
RAX: 0000000000000979 RBX: 0000000000000001 RCX: ffffffff812a3195
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001
RBP: ffff88800b8fd758 R08: 0000000000000001 R09: ffffffff86e5f71f
R10: 0000000000000001 R11: 0000000000000001 R12: ffff88800b8fd758
R13: 0000000000000801 R14: ffff88800b8fd700 R15: 0000000000000801
 spin_unlock_irq include/linux/spinlock.h:404 [inline]
 blk_insert_flush+0x355/0x4b0 block/blk-flush.c:430
 blk_mq_submit_bio+0xeaf/0x1660 block/blk-mq.c:2204
 __submit_bio_noacct_mq block/blk-core.c:1026 [inline]
 submit_bio_noacct+0xc51/0x1000 block/blk-core.c:1059
 submit_bio+0xfd/0x540 block/blk-core.c:1129
 submit_bh_wbc+0x580/0x7c0 fs/buffer.c:3054
 submit_bh fs/buffer.c:3060 [inline]
 __sync_dirty_buffer+0x168/0x3e0 fs/buffer.c:3155
 ext4_commit_super+0x7fd/0xce0 fs/ext4/super.c:5546
 save_error_info fs/ext4/super.c:521 [inline]
 __ext4_error+0x246/0x290 fs/ext4/super.c:725
 __ext4_iget+0x14c2/0x4180 fs/ext4/inode.c:4613
 ext4_xattr_inode_iget+0x59/0x590 fs/ext4/xattr.c:389
 ext4_xattr_inode_dec_ref_all+0x172/0xa10 fs/ext4/xattr.c:1145
 ext4_xattr_delete_inode+0x4b9/0xda0 fs/ext4/xattr.c:2878
 ext4_evict_inode+0xb87/0x1890 fs/ext4/inode.c:290
 evict+0x284/0x6d0 fs/inode.c:578
 iput_final fs/inode.c:1654 [inline]
 iput+0x4e5/0x840 fs/inode.c:1680
 ext4_orphan_cleanup fs/ext4/super.c:3119 [inline]
 ext4_fill_super+0x92ef/0xd960 fs/ext4/super.c:5067
 mount_bdev+0x350/0x410 fs/super.c:1419
 legacy_get_tree+0x105/0x220 fs/fs_context.c:592
 vfs_get_tree+0x8e/0x360 fs/super.c:1549
 do_new_mount fs/namespace.c:2875 [inline]
 path_mount+0x1318/0x2060 fs/namespace.c:3205
 do_mount fs/namespace.c:3218 [inline]
 __do_sys_mount fs/namespace.c:3426 [inline]
 __se_sys_mount fs/namespace.c:3403 [inline]
 __x64_sys_mount+0x27e/0x300 fs/namespace.c:3403
 do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x7fb3b37d169a
Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb a6 e8 de 1a 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fb3b2448e68 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 00007fb3b2448ef0 RCX: 00007fb3b37d169a
RDX: 0000000020000180 RSI: 00000000200000c0 RDI: 00007fb3b2448eb0
RBP: 0000000020000180 R08: 00007fb3b2448ef0 R09: 0000000000a04710
R10: 0000000000a04710 R11: 0000000000000246 R12: 00000000200000c0
R13: 00007fb3b2448eb0 R14: 000000000000043a R15: 0000000020000240
audit: type=1400 audit(1731339551.442:342): avc:  denied  { execmem } for  pid=13976 comm="syz.0.662" scontext=system_u:system_r:kernel_t:s0 tcontext=system_u:system_r:kernel_t:s0 tclass=process permissive=0
EXT4-fs error (device loop3): ext4_xattr_inode_iget:392: comm syz.3.660: error while reading EA inode 1 err=-117
EXT4-fs (loop3): 1 orphan inode deleted
EXT4-fs (loop3): mounted filesystem without journal. Opts: dioread_nolock,grpquota,debug_want_extra_isize=0x000000000000005c,noauto_da_alloc,mblk_io_submit,errors=continue,usrjquota=,,errors=continue
EXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue
ext4 filesystem being mounted at /82/file1 supports timestamps until 2038 (0x7fffffff)
----------------
Code disassembly (best guess):
   0:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   5:	55                   	push   %rbp
   6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   b:	48 89 fd             	mov    %rdi,%rbp
   e:	48 83 c7 18          	add    $0x18,%rdi
  12:	e8 ae 1f 3e fd       	call   0xfd3e1fc5
  17:	48 89 ef             	mov    %rbp,%rdi
  1a:	e8 86 e2 3e fd       	call   0xfd3ee2a5
  1f:	e8 11 e6 5f fd       	call   0xfd5fe635
  24:	fb                   	sti
  25:	bf 01 00 00 00       	mov    $0x1,%edi
* 2a:	e8 86 08 34 fd       	call   0xfd3408b5 <-- trapping instruction
  2f:	65 8b 05 ff 3d 15 7c 	mov    %gs:0x7c153dff(%rip),%eax        # 0x7c153e35
  36:	85 c0                	test   %eax,%eax
  38:	74 02                	je     0x3c
  3a:	5d                   	pop    %rbp
  3b:	c3                   	ret
  3c:	e8                   	.byte 0xe8
  3d:	bb                   	.byte 0xbb
  3e:	9c                   	pushf
  3f:	13                   	.byte 0x13
